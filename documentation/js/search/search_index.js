var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiPermission.html",[0,0.249,1,1.19]],["body/classes/ApiPermission.html",[0,0.208,1,1.423,2,0.515,3,0.14,4,0.124,5,0.124,6,2.201,7,2.832,8,0.4,9,1.151,10,4.736,11,2.786,12,0.847,13,1.736,14,1.402,15,4.244,16,4.244,17,5.482,18,4.244,19,3.34,20,2.786,21,0.944,22,0.017,23,2.393,24,1.757,25,3.34,26,2.38,27,1.18,28,3.278,29,2.745,30,3.349,31,3.278,32,1.424,33,1.666,34,3.278,35,3.278,36,4.233,37,3.278,38,3.278,39,2.188,40,3.278,41,3.278,42,1.686,43,3.278,44,3.278,45,0.256,46,1.579,47,1.499,48,2.836,49,2.385,50,0.839,51,0.14,52,3.131,53,0.01,54,0.01]],["title/classes/ApiPermission-1.html",[0,0.209,1,0.999,55,1.366]],["body/classes/ApiPermission-1.html",[0,0.471,1,2.006,2,0.651,3,0.177,4,0.157,5,0.157,6,1.257,22,0.017,23,2.344,39,2.143,42,1.692,45,0.318,46,1.995,47,1.895,51,0.324,53,0.012,54,0.012,56,1.895,57,1.622,58,2.657,59,2.389,60,2.804,61,2.389,62,2.804,63,2.804,64,2.006,65,2.804,66,2.344,67,2.804,68,1.995,69,2.804,70,1.803,71,2.804,72,2.804,73,2.106,74,2.106,75,2.686,76,1.106,77,1.895]],["title/controllers/ApiPermissionController.html",[78,1.795,79,2.776]],["body/controllers/ApiPermissionController.html",[0,0.242,3,0.164,4,0.145,5,0.145,8,0.466,12,1.075,14,1.637,21,0.726,22,0.017,24,1.46,27,0.98,32,1.307,45,0.287,50,0.978,51,0.164,53,0.011,54,0.011,64,1.585,78,1.748,79,3.696,80,1.748,81,3.9,82,4.185,83,3.302,84,2.499,85,4.226,86,1.655,87,2.811,88,2.811,89,3.203,90,2.704,91,4.185,92,2.704,93,3.822,94,1.806,95,1.229,96,2.39,97,1.885,98,2.056,99,2.704,100,3.822,101,2.056,102,4.715,103,2.704,104,3.822,105,2.056,106,3.184,107,3.184,108,2.704,109,2.704,110,1.111,111,3.628,112,2.704,113,2.056,114,4.185,115,2.499,116,3.822,117,3.822,118,1.841,119,1.841,120,3.893,121,2.704,122,2.057,123,3.822,124,2.704,125,2.704,126,3.822,127,2.704,128,3.302,129,3.822]],["title/classes/ApiPermissionGroup.html",[0,0.249,23,1.483]],["body/classes/ApiPermissionGroup.html",[0,0.245,1,2.041,2,0.607,3,0.166,4,0.147,5,0.147,6,2.193,8,0.471,9,1.291,11,3.044,12,1.161,13,1.897,14,1.532,20,3.044,21,0.936,22,0.017,23,1.99,24,1.742,25,2.356,26,1.902,27,1.17,29,2.984,30,3.269,32,1.425,33,2.677,45,0.225,48,2.747,49,3.044,50,0.989,51,0.166,52,2.209,53,0.011,54,0.011,70,1.682,95,1.236,130,3.34,131,2.606,132,3.916,133,3.866,134,3.866,135,3.866,136,3.866,137,3.866,138,3.866,139,3.866]],["title/classes/ApiPermissionGroup-1.html",[0,0.209,23,1.245,55,1.366]],["body/classes/ApiPermissionGroup-1.html",[0,0.471,1,1.882,2,0.651,3,0.177,4,0.157,5,0.157,6,1.257,22,0.017,23,2.499,39,2.143,42,1.692,45,0.318,46,1.995,47,1.895,51,0.324,53,0.012,54,0.012,56,1.895,57,1.622,58,2.657,59,2.389,60,2.804,61,2.389,62,2.804,63,2.804,64,2.006,65,2.804,66,2.344,67,2.804,68,1.995,69,2.804,70,1.803,71,2.804,72,2.804,73,2.106,74,2.106,75,2.686,76,1.106,77,1.895]],["title/guards/ApiPermissionGuard.html",[140,3.038,141,2.776]],["body/guards/ApiPermissionGuard.html",[0,0.18,1,0.861,3,0.122,4,0.108,5,0.108,8,0.346,12,0.763,16,3.908,18,3.908,19,1.731,21,0.515,22,0.017,26,2.344,27,0.696,29,1.123,42,1.291,45,0.239,51,0.122,53,0.009,54,0.009,57,1.465,61,2.019,76,1.851,85,1.622,86,1.338,94,1.282,95,0.872,97,0.899,107,1.731,110,0.825,118,1.368,119,1.368,122,1.932,141,4.228,142,2.84,143,4.361,144,2.454,145,2.565,146,5.591,147,1.622,148,1.731,149,3.007,150,2.84,151,2.093,152,4.226,153,4.83,154,2.84,155,2.84,156,2.989,157,1.839,158,2.454,159,2.84,160,1.528,161,5.164,162,2.199,163,1.299,164,2.454,165,4.226,166,2.454,167,3.656,168,2.454,169,1.731,170,3.215,171,2.454,172,2.009,173,2.009,174,2.565,175,3.407,176,2.009,177,3.651,178,2.84,179,4.097,180,4.226,181,4.226,182,2.84,183,2.84,184,2.454,185,2.84,186,2.84,187,2.84,188,2.84,189,4.226,190,2.84,191,3.125,192,2.84,193,2.84,194,2.84,195,2.84,196,2.84,197,2.009,198,2.84,199,2.84,200,5.591,201,2.84,202,2.84,203,2.84,204,2.989,205,2.84,206,3.57,207,2.84,208,2.84,209,2.84,210,2.84,211,2.454,212,5.048,213,5.048,214,3.301,215,3.908,216,4.361,217,5.591,218,4.226,219,2.84,220,2.84,221,2.84,222,2.273]],["title/modules/ApiPermissionModule.html",[223,1.627,224,2.566]],["body/modules/ApiPermissionModule.html",[0,0.324,3,0.219,4,0.194,5,0.194,22,0.016,45,0.293,51,0.219,53,0.013,54,0.013,79,4.468,80,2.339,81,3.116,82,3.344,85,3.608,110,1.486,111,4.564,112,3.617,223,2.841,224,4.897,225,2.599,226,2.599,227,2.921,228,2.921,229,2.463,230,3.686,231,2.921,232,4.418,233,4.418,234,3.608,235,2.921,236,2.921,237,5.114,238,4.418]],["title/injectables/ApiPermissionService.html",[111,2.391,157,1.707]],["body/injectables/ApiPermissionService.html",[0,0.196,1,1.765,3,0.132,4,0.117,5,0.117,8,0.376,10,4.576,12,1.051,14,1.651,15,2.389,19,3.933,21,0.709,22,0.017,26,2.331,27,0.958,32,1.219,45,0.249,51,0.132,53,0.009,54,0.009,76,1.651,81,3.768,82,4.043,85,2.566,86,1.422,87,2.416,88,2.416,89,2.416,90,3.177,91,3.805,94,1.765,95,1.332,96,1.411,97,1.677,98,2.416,101,2.416,102,4.464,105,1.659,106,2.737,110,0.897,111,2.737,113,1.659,118,1.486,119,1.486,122,1.83,145,3.538,147,1.762,148,1.88,149,3.13,151,2.196,157,1.955,163,1.411,170,3.13,175,3.228,176,3.177,191,2.163,239,1.88,240,2.665,241,3.085,242,3.085,243,2.849,244,3.085,245,3.085,246,2.665,247,3.085,248,4.492,249,2.737,250,4.116,251,4.116,252,4.116,253,4.101,254,3.177,255,3.085,256,1.568,257,3.085,258,1.568,259,3.085,260,3.085,261,3.085,262,3.085,263,2.737,264,3.085,265,3.085]],["title/modules/AppModule.html",[223,1.627,266,2.566]],["body/modules/AppModule.html",[0,0.241,3,0.163,4,0.144,5,0.144,22,0.017,26,1.881,45,0.324,51,0.163,53,0.011,54,0.011,76,1.016,82,2.488,110,1.106,151,1.578,163,1.74,223,2.463,224,3.406,225,1.934,226,1.934,227,2.174,228,2.174,229,1.832,230,2.802,231,2.174,234,2.976,235,2.174,236,2.174,266,4.919,267,3.287,268,3.287,269,4.21,270,4.518,271,4.518,272,4.518,273,2.946,274,4.034,275,3.805,276,3.287,277,3.287,278,3.805,279,2.946,280,3.805,281,5.21,282,3.805,283,3.805,284,3.805,285,3.805,286,3.805,287,3.805,288,3.805,289,3.805,290,5.21,291,3.805,292,3.287,293,3.287,294,5.21,295,2.691,296,3.805,297,3.287,298,4.034,299,4.034,300,3.805,301,3.805,302,2.946,303,3.287,304,3.805,305,3.805,306,5.21,307,3.805,308,3.805,309,3.287,310,3.805,311,3.805,312,3.805,313,2.946,314,3.287]],["title/classes/CreatePermissionDto.html",[0,0.249,315,2.242]],["body/classes/CreatePermissionDto.html",[0,0.324,2,0.582,3,0.159,4,0.141,5,0.141,8,0.452,9,1.254,12,1.292,13,2.224,14,1.616,21,0.896,22,0.017,24,1.549,26,1.847,27,1.04,32,1.389,45,0.284,48,2.622,50,0.948,51,0.159,53,0.011,54,0.011,95,1.209,110,1.077,250,4.143,252,4.143,315,2.921,316,5.726,317,2.257,318,3.704,319,5.132,320,3.116,321,3.704,322,3.704,323,3.704,324,3.704,325,5.457,326,4.891,327,5.114,328,4.891,329,6.317,330,3.704,331,3.704,332,3.704,333,3.704,334,3.346,335,3.569,336,2.868,337,1.694,338,2.868,339,3.704,340,3.704,341,2.868,342,3.704,343,2.62,344,3.704,345,3.2,346,2.257,347,3.704,348,3.704,349,5.114,350,5.114,351,3.704,352,3.704]],["title/classes/CreateRoleDto.html",[0,0.249,353,2.391]],["body/classes/CreateRoleDto.html",[0,0.375,2,0.724,3,0.197,4,0.175,5,0.175,8,0.562,9,1.45,13,2.069,21,0.84,22,0.017,24,1.69,26,2.137,27,1.135,32,1.419,45,0.197,51,0.197,53,0.012,54,0.012,95,1.348,325,5.955,326,5.337,334,3.938,335,4.2,336,3.569,337,2.108,353,3.605,354,6.159,355,3.26,356,6.534,357,6.534,358,5.916,359,4.609,360,4.609,361,4.609,362,4.609,363,4.609]],["title/classes/CreateUserDto.html",[0,0.249,364,2.391]],["body/classes/CreateUserDto.html",[0,0.301,2,0.524,3,0.143,4,0.127,5,0.127,8,0.407,9,1.165,12,1.328,13,2.208,14,1.216,21,0.85,22,0.017,24,1.709,27,1.148,32,1.411,45,0.237,48,2.806,50,0.854,51,0.143,53,0.01,54,0.01,95,1.142,160,1.795,179,2.182,319,5.281,334,3.896,335,3.676,336,3.68,337,1.526,364,2.896,365,6.129,366,2.36,367,4.782,368,4.286,369,2.978,370,3.162,371,4.286,372,4.286,373,3.162,374,3.337,375,3.337,376,3.337,377,4.106,378,3.337,379,3.337,380,3.337,381,3.337,382,4.753,383,3.337,384,3.337,385,4.753,386,4.782,387,4.753,388,3.337,389,3.337,390,3.337,391,3.337,392,3.337,393,5.536,394,3.337,395,3.68,396,3.337,397,3.337,398,3.68,399,3.337,400,3.337,401,4.753,402,3.337,403,3.337,404,2.882,405,3.337,406,3.337,407,3.337]],["title/interfaces/IAppConfig.html",[408,2.242,409,3.038]],["body/interfaces/IAppConfig.html",[3,0.185,4,0.164,5,0.164,8,0.526,9,1.389,13,1.366,21,0.874,22,0.017,32,1.47,45,0.185,51,0.271,53,0.012,54,0.012,76,1.151,122,1.49,163,2.591,279,3.34,299,3.34,302,3.34,303,6.031,408,2.464,409,4.9,410,3.051,411,3.34,412,3.34,413,6.981,414,6.981,415,6.981,416,6.981,417,6.031,418,3.856,419,4.313,420,3.34,421,4.138,422,2.628,423,4.313,424,4.313,425,2.628,426,4.313,427,4.313,428,4.313,429,4.313,430,4.313,431,4.313,432,4.313,433,4.313]],["title/controllers/IamController.html",[78,1.795,434,2.776]],["body/controllers/IamController.html",[0,0.226,3,0.153,4,0.136,5,0.136,8,0.435,12,1.037,21,0.7,22,0.017,24,1.408,27,0.946,32,1.28,45,0.309,50,0.913,51,0.153,53,0.01,54,0.01,57,1.661,78,1.633,80,1.633,84,2.335,86,1.579,94,1.742,95,1.185,97,1.819,107,2.176,110,1.038,114,4.065,115,3.26,118,1.719,119,1.719,120,3.756,122,1.984,145,3.663,160,1.92,167,4.065,243,3.09,434,3.526,435,3.085,436,3.571,437,4.307,438,4.985,439,4.307,440,3.085,441,4.065,442,5.371,443,3.571,444,3.571,445,4.397,446,4.447,447,3.571,448,3.571,449,3.571,450,3.085,451,4.065,452,3.571,453,3.571,454,2.525,455,3.281,456,3.085,457,4.307,458,3.085,459,3.085,460,2.765,461,5.744,462,3.571,463,3.86,464,3.571,465,3.86,466,3.571,467,3.571,468,3.571,469,3.571,470,3.571,471,3.571,472,3.571,473,3.571,474,3.571,475,3.571,476,3.571]],["title/modules/IamModule.html",[223,1.627,269,2.391]],["body/modules/IamModule.html",[0,0.299,3,0.202,4,0.179,5,0.179,22,0.017,45,0.307,51,0.202,53,0.013,54,0.013,80,2.744,110,1.37,141,4.244,223,2.737,225,2.395,226,2.395,227,2.692,228,2.692,229,2.269,230,3.551,231,3.771,234,3.428,235,2.692,236,2.692,269,4.543,295,3.333,313,3.649,314,4.071,434,4.67,455,4.439,456,4.071,477,4.071,478,4.071,479,4.071,480,4.712,481,4.712,482,6.001,483,4.712,484,4.712]],["title/injectables/IamService.html",[157,1.707,455,2.242]],["body/injectables/IamService.html",[0,0.126,3,0.085,4,0.076,5,0.076,8,0.243,12,1.134,13,1.015,14,0.82,21,0.765,22,0.017,27,1.057,29,0.787,32,1.356,42,0.509,45,0.269,51,0.085,53,0.007,54,0.007,57,1.771,58,0.958,76,1.633,86,1.015,94,1.904,95,1.324,97,1.988,110,0.578,118,0.958,122,1.87,145,3.798,147,1.136,148,1.212,149,2.484,151,1.67,156,3.267,157,1.395,160,1.07,163,0.91,164,1.718,167,3.723,169,1.212,170,3.625,171,1.718,172,2.268,173,1.407,174,2.894,191,1.939,204,3.583,206,1.407,214,2.633,215,3.576,239,1.212,243,2.724,263,1.954,369,2.166,370,2.3,373,1.831,437,2.77,439,2.77,440,2.77,441,3.02,442,5.424,445,2.268,446,3.118,450,2.77,451,3.02,455,1.831,457,2.77,458,1.718,459,1.718,485,1.718,486,3.206,487,3.206,488,3.206,489,5.414,490,5.414,491,3.206,492,3.206,493,3.206,494,1.989,495,3.206,496,1.989,497,3.206,498,3.206,499,1.989,500,3.206,501,1.989,502,3.206,503,1.989,504,1.989,505,3.206,506,1.989,507,1.989,508,3.206,509,1.989,510,1.989,511,3.206,512,1.989,513,1.989,514,1.54,515,2.77,516,1.718,517,1.718,518,2.482,519,1.989,520,1.989,521,1.407,522,1.989,523,1.54,524,1.989,525,1.989,526,3.206,527,1.718,528,1.301,529,1.989,530,1.989,531,3.206,532,1.989,533,1.989,534,1.989,535,3.206,536,1.989,537,1.989,538,1.989,539,1.718,540,1.989,541,1.989,542,2.77,543,1.989,544,1.718,545,1.718,546,2.77,547,1.718,548,3.206,549,4.027,550,2.77,551,1.989,552,1.718,553,1.989,554,1.989,555,1.718,556,1.718,557,1.989,558,2.77,559,1.718,560,4.027,561,1.54,562,1.301,563,1.718,564,3.206,565,3.206,566,3.206,567,3.206,568,2.77,569,3.206,570,3.206,571,3.206,572,3.206,573,3.206,574,1.989,575,1.989,576,1.989,577,1.989,578,1.989]],["title/classes/InitUtil.html",[0,0.249,521,2.776]],["body/classes/InitUtil.html",[0,0.29,2,0.718,3,0.196,4,0.174,5,0.174,8,0.557,12,1.062,21,0.717,22,0.017,27,1.071,32,1.398,45,0.196,51,0.196,53,0.012,54,0.012,76,1.22,86,1.863,94,1.785,95,1.214,97,1.863,122,2.033,174,2.323,422,2.786,521,4.603,579,3.539,580,7.405,581,6.143,582,5.885,583,5.084,584,5.885,585,4.571,586,5.084,587,4.571,588,5.885,589,4.571,590,4.571,591,4.571,592,4.571,593,5.084,594,2.611,595,5.885,596,3.949,597,3.539,598,4.571,599,4.571,600,4.571,601,4.571,602,4.571]],["title/classes/OperationLog.html",[0,0.249,39,1.356]],["body/classes/OperationLog.html",[0,0.471,1,1.882,2,0.651,3,0.177,4,0.157,5,0.157,6,1.257,22,0.017,23,2.344,39,2.285,42,1.692,45,0.318,46,1.995,47,1.895,51,0.324,53,0.012,54,0.012,56,1.895,57,1.622,58,2.657,59,2.389,60,2.804,61,2.389,62,2.804,63,2.804,64,2.006,65,2.804,66,2.344,67,2.804,68,1.995,69,2.804,70,1.803,71,2.804,72,2.804,73,2.106,74,2.106,75,2.686,76,1.106,77,1.895]],["title/classes/OperationLog-1.html",[0,0.209,39,1.138,55,1.366]],["body/classes/OperationLog-1.html",[0,0.225,1,2.148,2,0.557,3,0.152,4,0.135,5,0.135,6,2.211,8,0.433,9,1.217,11,2.909,12,0.896,14,1.464,20,2.909,21,0.938,22,0.017,24,1.764,27,1.185,29,2.941,30,3.599,32,1.44,33,1.803,39,1.715,45,0.245,48,2.847,49,2.522,50,0.908,51,0.152,53,0.01,54,0.01,57,1.764,70,1.544,131,2.491,191,2.757,214,3.743,216,4.945,603,3.065,604,3.548,605,3.548,606,3.548,607,3.548,608,3.548,609,3.548,610,3.548,611,3.548,612,3.548]],["title/classes/PaginationApiPermissionDto.html",[0,0.249,91,2.566]],["body/classes/PaginationApiPermissionDto.html",[0,0.267,2,0.66,3,0.18,4,0.16,5,0.16,8,0.513,9,1.366,12,1.201,21,0.844,22,0.017,24,1.366,27,1.171,45,0.18,51,0.18,53,0.012,54,0.012,75,2.012,81,2.562,85,2.402,86,1.764,91,3.644,94,2.018,95,1.15,96,3.411,97,1.979,222,2.997,256,2.832,258,2.832,317,2.562,320,2.562,346,2.562,418,4.055,425,2.562,594,3.57,613,3.633,614,3.644,615,3.644,616,4.086,617,5.032,618,4.205,619,2.75,620,2.562,621,2.974,622,2.75,623,2.75,624,2.75,625,2.75,626,2.562,627,2.75,628,2.974,629,2.75,630,2.974,631,3.644,632,3.644,633,2.75,634,2.974,635,2.974,636,2.402,637,2.402,638,2.974]],["title/classes/PaginationDto.html",[0,0.249,96,1.795]],["body/classes/PaginationDto.html",[0,0.312,2,0.429,3,0.117,4,0.104,5,0.104,8,0.333,9,1.006,12,0.99,13,1.299,14,0.698,21,0.822,22,0.017,24,1.006,27,1.016,45,0.211,48,1.95,50,0.698,51,0.211,53,0.009,54,0.009,55,1.132,76,1.463,86,1.299,94,1.663,95,0.847,96,1.876,97,1.561,122,1.703,131,1.188,169,1.663,173,3.487,222,2.948,249,3.004,251,2.902,256,2.505,258,2.505,320,2.5,337,1.248,346,2.5,377,2.358,418,3.762,425,2.5,528,1.785,586,4.736,594,2.816,614,2.682,615,2.682,616,3.584,619,1.785,620,3.34,622,1.785,623,2.682,624,2.682,625,1.785,626,2.5,627,1.785,629,2.682,631,3.223,632,3.223,633,2.682,636,2.343,637,2.343,639,2.113,640,5.482,641,4.736,642,2.729,643,2.729,644,2.729,645,2.729,646,2.729,647,2.729,648,1.785,649,4.103,650,4.929,651,2.729,652,2.729,653,5.077,654,3.544,655,4.259,656,4.259,657,4.259,658,4.736,659,4.929,660,4.619,661,4.103,662,2.729,663,2.729,664,2.729,665,2.729,666,4.103,667,2.729,668,2.729,669,2.729,670,2.729,671,4.103,672,2.729,673,6.589,674,6.589,675,6.589,676,2.358,677,2.729]],["title/classes/PaginationPermissionDto.html",[0,0.249,678,2.566]],["body/classes/PaginationPermissionDto.html",[0,0.372,2,0.583,3,0.159,4,0.141,5,0.141,8,0.453,9,1.256,12,1.141,13,2.002,21,0.873,22,0.017,24,1.438,27,1.129,45,0.284,48,2.026,50,0.95,51,0.159,53,0.011,54,0.011,75,1.85,76,1.367,86,1.622,94,1.918,95,1.057,96,3.324,97,1.857,106,2.262,222,2.755,256,2.603,258,2.603,315,2.121,317,2.262,320,2.262,334,2.926,337,1.698,346,2.262,418,3.853,425,2.262,594,3.35,614,3.349,615,3.349,616,3.834,617,4.851,619,2.427,620,2.262,621,2.626,622,2.427,623,2.427,624,2.427,625,2.427,626,2.262,627,2.427,628,2.626,629,2.427,630,2.626,631,3.349,632,3.349,633,2.427,634,2.626,635,2.626,636,2.121,637,2.121,638,2.626,648,2.427,678,3.349,679,3.207,680,5.122,681,3.713,682,3.713,683,3.713,684,2.626,685,3.966,686,1.788,687,5.122]],["title/classes/PaginationRoleDto.html",[0,0.249,688,2.566]],["body/classes/PaginationRoleDto.html",[0,0.374,2,0.589,3,0.161,4,0.143,5,0.143,8,0.458,9,1.265,12,1.242,21,0.875,22,0.017,24,1.557,27,1.161,36,3.651,42,0.96,45,0.285,50,0.96,51,0.161,53,0.011,54,0.011,75,1.864,86,1.634,94,1.927,95,1.217,96,3.332,97,1.868,222,2.776,256,2.623,258,2.623,320,2.287,334,3.369,337,1.717,346,2.287,355,2.655,418,3.871,425,2.287,594,3.369,614,3.375,615,3.375,616,3.857,617,4.867,619,2.455,620,2.287,621,2.655,622,2.455,623,2.455,624,2.455,625,2.455,626,2.287,627,2.455,628,2.655,629,2.455,630,2.655,631,3.375,632,3.375,633,2.455,634,2.655,635,2.655,636,2.144,637,2.144,638,2.655,648,2.455,685,3.996,688,3.375,689,4.459,690,3.243,691,3.754,692,4.459,693,3.754,694,3.754,695,3.243,696,4.459,697,2.907,698,3.754,699,3.754]],["title/classes/PaginationUserDto.html",[0,0.249,700,2.566]],["body/classes/PaginationUserDto.html",[0,0.37,2,0.578,3,0.158,4,0.14,5,0.14,8,0.449,9,1.248,12,1.137,13,1.165,14,1.302,21,0.884,22,0.017,24,1.431,27,1.126,45,0.293,48,2.014,50,0.941,51,0.158,53,0.011,54,0.011,57,0.902,75,1.839,86,1.612,94,1.911,95,1.3,96,3.318,97,1.848,179,2.406,222,2.738,256,2.587,258,2.587,320,2.242,328,2.849,334,2.908,337,1.683,346,2.242,366,2.603,369,2.738,373,2.908,418,3.838,425,2.242,594,3.334,614,3.329,615,3.329,616,3.817,617,4.838,619,2.406,620,2.242,621,2.603,622,2.406,623,2.406,624,2.406,625,2.406,626,2.242,627,2.406,628,2.603,629,2.406,630,2.603,631,3.329,632,3.329,633,2.406,634,2.603,635,2.603,636,2.102,637,2.102,638,2.603,648,2.406,685,3.942,695,3.179,697,2.849,700,3.329,701,3.179,702,5.043,703,3.68,704,3.68,705,3.68,706,3.68,707,5.091]],["title/classes/Permission.html",[0,0.249,64,1.19]],["body/classes/Permission.html",[0,0.471,1,1.882,2,0.651,3,0.177,4,0.157,5,0.157,6,1.257,22,0.017,23,2.344,39,2.143,42,1.692,45,0.318,46,1.995,47,1.895,51,0.324,53,0.012,54,0.012,56,1.895,57,1.622,58,2.657,59,2.389,60,2.804,61,2.389,62,2.804,63,2.804,64,2.09,65,2.804,66,2.344,67,2.804,68,1.995,69,2.804,70,1.803,71,2.804,72,2.804,73,2.106,74,2.106,75,2.686,76,1.106,77,1.895]],["title/classes/Permission-1.html",[0,0.209,55,1.366,64,0.999]],["body/classes/Permission-1.html",[0,0.229,2,0.567,3,0.154,4,0.137,5,0.137,6,2.191,8,0.44,9,1.231,11,2.936,12,1.128,13,1.829,14,1.478,19,3.52,20,2.936,21,0.939,22,0.017,24,1.744,25,3.06,26,2.256,27,1.171,29,2.95,30,3.174,32,1.408,33,2.553,42,1.739,45,0.247,48,2.759,49,2.936,50,0.923,51,0.154,52,2.869,53,0.01,54,0.01,64,1.523,66,2.481,68,1.738,95,1.192,131,2.514,253,4.473,708,3.118,709,3.609,710,3.609,711,3.609,712,3.609,713,3.609,714,3.609,715,3.609,716,3.609]],["title/controllers/PermissionController.html",[78,1.795,717,2.776]],["body/controllers/PermissionController.html",[0,0.214,3,0.145,4,0.128,5,0.128,8,0.412,12,1.157,14,1.703,21,0.782,22,0.017,24,1.572,27,1.055,32,1.344,45,0.285,50,0.866,51,0.145,53,0.01,54,0.01,64,1.026,78,1.547,80,1.547,84,2.212,86,1.52,87,2.582,88,2.582,89,3.001,92,2.393,94,1.944,95,1.323,97,2.03,98,1.82,99,2.393,101,1.82,103,2.393,105,1.82,106,3.399,107,2.925,108,2.393,109,2.393,110,0.983,112,2.393,113,1.82,114,4.354,115,3.139,118,1.629,119,1.629,120,4.192,121,2.393,122,2.215,124,2.393,125,2.393,127,2.393,128,2.923,315,3.804,454,3.395,562,2.212,678,3.97,686,2.312,717,3.395,718,2.923,719,2.925,720,2.923,721,2.62,722,3.384,723,2.923,724,3.384,725,4.147,726,3.384,727,2.062,728,2.62,729,3.384,730,4.575,731,3.384,732,3.399,733,2.062,734,3.384,735,2.62,736,3.384,737,3.384,738,3.384,739,3.384,740,2.62,741,2.62,742,3.384]],["title/classes/PermissionGroup.html",[0,0.249,66,1.483]],["body/classes/PermissionGroup.html",[0,0.471,1,1.882,2,0.651,3,0.177,4,0.157,5,0.157,6,1.257,22,0.017,23,2.344,39,2.143,42,1.692,45,0.318,46,1.995,47,1.895,51,0.324,53,0.012,54,0.012,56,1.895,57,1.622,58,2.657,59,2.389,60,2.804,61,2.389,62,2.804,63,2.804,64,2.006,65,2.804,66,2.499,67,2.804,68,1.995,69,2.804,70,1.803,71,2.804,72,2.804,73,2.106,74,2.106,75,2.686,76,1.106,77,1.895]],["title/classes/PermissionGroup-1.html",[0,0.209,55,1.366,66,1.245]],["body/classes/PermissionGroup-1.html",[0,0.245,2,0.607,3,0.166,4,0.147,5,0.147,6,2.193,8,0.471,9,1.291,11,3.044,12,1.161,13,1.897,14,1.532,20,3.044,21,0.936,22,0.017,24,1.742,25,2.356,26,1.902,27,1.17,29,2.984,30,3.269,32,1.425,33,2.677,45,0.225,48,2.747,49,3.044,50,0.989,51,0.166,52,2.209,53,0.011,54,0.011,64,2.106,66,1.99,95,1.236,131,2.606,132,3.916,743,3.34,744,3.866,745,3.866,746,3.866,747,3.866,748,3.866,749,3.866,750,3.866]],["title/modules/PermissionModule.html",[223,1.627,270,2.566]],["body/modules/PermissionModule.html",[0,0.326,3,0.22,4,0.195,5,0.195,22,0.016,45,0.294,51,0.22,53,0.013,54,0.013,80,2.9,110,1.495,112,3.639,223,2.849,225,2.615,226,2.615,227,2.939,228,2.939,229,2.478,230,3.696,231,2.939,234,3.622,235,2.939,236,2.939,238,4.445,270,4.905,717,4.861,732,4.571,751,4.445,752,4.445,753,5.146]],["title/injectables/PermissionService.html",[157,1.707,732,2.391]],["body/injectables/PermissionService.html",[0,0.165,3,0.112,4,0.099,5,0.099,8,0.318,12,1.095,13,1.255,14,1.736,19,3.959,21,0.739,22,0.017,26,2.346,27,0.999,29,1.031,32,1.257,45,0.26,51,0.112,53,0.008,54,0.008,64,1.912,76,1.537,86,1.255,87,2.131,88,2.131,89,2.131,94,1.84,95,1.4,97,1.824,98,2.131,101,2.131,105,1.402,106,2.921,110,0.758,113,1.402,118,1.255,119,1.255,122,1.99,131,1.724,132,2.591,145,3.667,147,1.489,148,1.588,149,2.88,151,1.987,157,1.724,163,1.192,169,1.588,170,3.263,174,1.325,175,3.263,191,2.774,197,1.844,239,1.588,243,3.098,249,2.414,250,2.803,251,3.788,252,2.803,253,5.03,254,2.803,256,1.325,258,1.325,263,2.414,315,3.29,678,3.501,686,1.908,697,2.018,719,2.414,720,3.423,723,3.423,725,2.252,727,2.414,730,4.122,732,2.414,733,1.588,754,2.252,755,2.607,756,2.607,757,2.607,758,2.607,759,2.607,760,2.607,761,2.607,762,2.607,763,2.607,764,2.607,765,2.607,766,2.607,767,2.252,768,2.607,769,3.962,770,2.607,771,2.607,772,2.607,773,2.607,774,3.962,775,2.607,776,2.607,777,2.607,778,3.423,779,2.607,780,2.607,781,2.607]],["title/classes/Profile.html",[0,0.249,59,1.417]],["body/classes/Profile.html",[0,0.471,1,1.882,2,0.651,3,0.177,4,0.157,5,0.157,6,1.257,22,0.017,23,2.344,39,2.143,42,1.692,45,0.318,46,1.995,47,1.895,51,0.324,53,0.012,54,0.012,56,1.895,57,1.622,58,2.657,59,2.488,60,2.804,61,2.389,62,2.804,63,2.804,64,2.006,65,2.804,66,2.344,67,2.804,68,1.995,69,2.804,70,1.803,71,2.804,72,2.804,73,2.106,74,2.106,75,2.686,76,1.106,77,1.895]],["title/classes/Profile-1.html",[0,0.209,55,1.366,59,1.19]],["body/classes/Profile-1.html",[0,0.226,2,0.561,3,0.153,4,0.136,5,0.136,6,2.214,8,0.435,9,1.222,11,2.919,12,1.281,14,1.469,20,2.919,21,0.938,22,0.017,24,1.767,27,1.186,29,2.944,30,3.324,32,1.464,33,3.16,45,0.213,48,2.68,49,3.324,50,0.913,51,0.153,53,0.01,54,0.01,57,1.767,59,1.8,131,2.499,214,3.756,367,4.962,368,4.447,371,4.447,782,3.085,783,3.571,784,3.571,785,3.571,786,3.571,787,3.571,788,3.571,789,3.571,790,3.571,791,3.571]],["title/classes/Role.html",[0,0.249,42,1.004]],["body/classes/Role.html",[0,0.471,1,1.882,2,0.651,3,0.177,4,0.157,5,0.157,6,1.257,22,0.017,23,2.344,39,2.143,42,1.762,45,0.318,46,1.995,47,1.895,51,0.324,53,0.012,54,0.012,56,1.895,57,1.622,58,2.657,59,2.389,60,2.804,61,2.389,62,2.804,63,2.804,64,2.006,65,2.804,66,2.344,67,2.804,68,1.995,69,2.804,70,1.803,71,2.804,72,2.804,73,2.106,74,2.106,75,2.686,76,1.106,77,1.895]],["title/classes/Role-1.html",[0,0.209,42,0.843,55,1.366]],["body/classes/Role-1.html",[0,0.192,1,1.863,2,0.477,3,0.13,4,0.115,5,0.115,6,2.191,8,0.37,9,1.088,11,2.667,12,1.042,13,1.662,14,1.342,20,2.667,21,0.939,22,0.017,24,1.751,25,3.198,26,2.454,27,1.176,29,2.857,30,3.122,32,1.364,33,2.256,36,4.084,42,1.136,45,0.263,48,2.787,49,2.667,50,0.776,51,0.13,52,2.997,53,0.009,54,0.009,57,1.7,64,1.946,70,1.321,95,1.083,131,2.283,132,3.431,160,1.632,176,3.712,373,2.997,395,2.35,422,2.705,660,2.902,792,2.622,793,4.533,794,3.035,795,3.035,796,3.035,797,3.035,798,3.035,799,3.035,800,3.035,801,3.035,802,6.628,803,4.439,804,2.622,805,3.835,806,3.035,807,3.035,808,3.035]],["title/controllers/RoleController.html",[78,1.795,809,2.776]],["body/controllers/RoleController.html",[0,0.215,3,0.145,4,0.129,5,0.129,8,0.414,12,1.159,14,1.706,21,0.783,22,0.017,24,1.574,27,1.057,32,1.346,42,0.869,45,0.285,50,0.869,51,0.145,53,0.01,54,0.01,78,1.554,80,1.554,84,2.221,86,1.524,87,2.589,88,2.589,89,2.589,90,2.403,92,2.403,94,1.947,95,1.325,96,2.202,97,2.033,98,1.827,99,2.403,101,1.827,103,2.403,105,1.827,107,2.933,108,2.403,109,2.403,110,0.987,113,1.827,114,4.36,115,3.148,118,1.636,119,1.636,120,4.198,121,2.403,122,2.218,124,2.403,125,2.403,127,2.403,353,4.063,454,3.405,562,2.221,686,2.318,688,3.977,719,2.933,721,2.63,727,2.07,728,2.63,733,2.07,735,2.63,740,2.63,741,2.63,809,3.405,810,2.935,811,2.935,812,3.397,813,3.397,814,3.397,815,3.397,816,4.58,817,3.397,818,3.407,819,2.935,820,4.329,821,3.397,822,3.397,823,3.397,824,3.397,825,2.935,826,3.397,827,3.397]],["title/modules/RoleModule.html",[223,1.627,271,2.566]],["body/modules/RoleModule.html",[0,0.326,3,0.22,4,0.195,5,0.195,22,0.016,45,0.294,51,0.22,53,0.013,54,0.013,80,2.9,110,1.495,223,2.849,225,2.615,226,2.615,227,2.939,228,2.939,229,2.478,230,3.696,231,2.939,234,3.622,235,2.939,236,2.939,271,4.905,809,4.861,818,4.571,819,4.445,828,4.445,829,4.445,830,5.146,831,5.146]],["title/injectables/RoleService.html",[157,1.707,818,2.391]],["body/injectables/RoleService.html",[0,0.128,1,0.611,3,0.086,4,0.077,5,0.077,8,0.246,12,0.983,13,1.026,14,1.648,19,2.836,21,0.664,22,0.017,26,2.277,27,0.897,29,0.797,32,1.16,42,1.572,45,0.218,51,0.086,53,0.007,54,0.007,55,1.343,64,0.983,76,1.64,86,1.026,87,1.743,88,1.743,89,1.743,94,1.652,95,1.301,97,1.615,98,1.743,101,1.743,105,1.084,110,0.586,113,1.084,118,0.971,119,0.971,122,1.881,131,2.025,132,4.213,145,3.478,147,1.151,148,1.228,149,2.503,151,1.685,157,1.41,163,0.922,169,2.476,170,3.587,174,2.909,175,3.107,176,4.642,184,4.021,191,2.456,197,1.426,204,3.852,206,2.292,222,2.503,239,1.228,243,2.743,246,2.799,249,1.974,254,2.874,256,2.365,258,2.591,263,1.974,353,3.107,445,2.292,514,1.56,527,2.799,528,3.892,636,1.151,637,1.151,686,1.56,688,3.043,719,1.974,727,1.974,733,1.228,767,2.799,778,2.799,811,2.799,816,3.743,818,1.974,820,3.146,832,1.741,833,2.015,834,2.015,835,2.799,836,2.015,837,2.015,838,2.015,839,2.015,840,3.24,841,5.446,842,2.015,843,3.24,844,3.24,845,5.446,846,2.015,847,3.24,848,2.015,849,2.015,850,2.015,851,2.015,852,4.063,853,3.24,854,2.799,855,3.24,856,3.24,857,3.24,858,2.015,859,3.24,860,2.015,861,3.24,862,2.015,863,2.015,864,1.741]],["title/interfaces/Route.html",[408,2.242,865,2.776]],["body/interfaces/Route.html",[3,0.157,4,0.139,5,0.139,8,0.446,9,1.243,14,0.935,16,5.285,18,5.285,21,0.618,22,0.017,32,1.289,45,0.217,51,0.157,53,0.011,54,0.011,76,1.958,110,1.063,122,1.263,145,1.858,149,1.966,151,2.101,158,3.158,163,1.672,170,3.129,179,2.39,191,1.761,408,2.088,410,2.586,528,4.107,594,2.088,865,4.828,866,2.831,867,2.831,868,4.378,869,3.158,870,3.158,871,2.831,872,3.656,873,3.656,874,3.656,875,3.656,876,3.656,877,3.656,878,3.656,879,3.656,880,3.656,881,3.656,882,5.068,883,3.656,884,3.656,885,3.656,886,3.656,887,3.656,888,3.656,889,3.656,890,5.068,891,3.656,892,3.656,893,3.656,894,3.656,895,3.656,896,3.656,897,3.656,898,3.656,899,3.656,900,3.656,901,3.656,902,3.656,903,3.656,904,3.656,905,3.656,906,5.817,907,3.656,908,5.068,909,4.666,910,3.656,911,5.817,912,3.656,913,3.656,914,3.656,915,3.656]],["title/classes/Session.html",[0,0.249,61,1.417]],["body/classes/Session.html",[0,0.471,1,1.882,2,0.651,3,0.177,4,0.157,5,0.157,6,1.257,22,0.017,23,2.344,39,2.143,42,1.692,45,0.318,46,1.995,47,1.895,51,0.324,53,0.012,54,0.012,56,1.895,57,1.622,58,2.657,59,2.389,60,2.804,61,2.488,62,2.804,63,2.804,64,2.006,65,2.804,66,2.344,67,2.804,68,1.995,69,2.804,70,1.803,71,2.804,72,2.804,73,2.106,74,2.106,75,2.686,76,1.106,77,1.895]],["title/classes/Session-1.html",[0,0.209,55,1.366,61,1.19]],["body/classes/Session-1.html",[0,0.228,2,0.565,3,0.154,4,0.137,5,0.137,6,2.218,8,0.439,9,1.23,11,2.933,12,1.127,13,1.827,14,1.476,20,2.933,21,0.939,22,0.017,24,1.77,27,1.189,29,3.022,30,3.542,32,1.443,33,2.549,45,0.215,48,2.812,49,2.933,50,0.921,51,0.154,53,0.01,54,0.01,57,1.77,61,1.811,131,2.511,167,3.773,172,4.081,214,3.773,916,3.111,917,3.601,918,3.601,919,3.601,920,3.601,921,3.601,922,3.601,923,3.601,924,3.601,925,3.601]],["title/classes/SignInDto.html",[0,0.249,441,2.566]],["body/classes/SignInDto.html",[0,0.404,2,0.815,3,0.222,4,0.197,5,0.197,8,0.633,9,1.563,21,0.777,22,0.016,24,1.563,27,1.05,32,1.359,45,0.222,51,0.222,53,0.013,54,0.013,335,3.885,337,2.375,369,3.711,370,3.942,398,4.937,441,4.169,926,5.343,927,4.486,928,4.486,929,5.193,930,5.193,931,5.193,932,5.961]],["title/classes/SignUpDto.html",[0,0.249,451,2.566]],["body/classes/SignUpDto.html",[0,0.401,2,0.805,3,0.22,4,0.195,5,0.195,8,0.625,9,1.551,21,0.771,22,0.016,24,1.551,27,1.042,32,1.353,45,0.22,51,0.22,53,0.013,54,0.013,319,3.972,335,3.856,337,2.346,345,4.432,369,3.691,370,3.92,386,4.432,398,4.9,404,4.432,451,4.138,926,5.314,928,4.432,932,5.929,933,4.432,934,5.13,935,5.13,936,5.13]],["title/classes/TestHelper.html",[0,0.249,937,3.038]],["body/classes/TestHelper.html",[0,0.153,2,0.379,3,0.103,4,0.092,5,0.092,8,0.294,9,0.916,12,0.825,14,1.17,21,0.793,22,0.017,26,1.651,27,1.044,32,1.111,42,1.622,45,0.285,51,0.103,53,0.008,54,0.008,57,1.262,76,1.692,86,1.183,94,1.387,95,1.148,97,1.183,110,0.702,122,1.778,145,2.991,147,2.135,156,1.708,160,1.299,161,4.446,162,1.87,167,1.579,170,3.787,172,1.708,174,2.323,175,1.472,191,1.8,215,2.894,229,1.163,230,1.299,243,2.01,263,2.277,266,2.444,274,1.87,295,1.708,313,1.87,328,4.309,369,2.459,370,1.38,421,2.989,422,1.472,516,2.087,517,2.087,539,2.087,542,2.087,544,2.087,545,2.087,546,3.229,547,2.087,581,2.087,583,3.229,620,1.472,660,1.579,865,1.708,871,1.87,909,1.708,937,2.894,938,5.623,939,2.087,940,5.885,941,4.572,942,3.949,943,4.572,944,4.752,945,3.737,946,4.572,947,2.415,948,3.737,949,4.572,950,3.949,951,2.415,952,4.572,953,2.415,954,2.415,955,3.737,956,2.415,957,2.415,958,3.737,959,2.415,960,2.415,961,2.415,962,2.087,963,2.415,964,2.415,965,2.087,966,1.87,967,2.415,968,2.415,969,3.737,970,3.737,971,2.415,972,2.415,973,3.737,974,2.415,975,2.415,976,2.415,977,2.415,978,2.415,979,2.415,980,3.737,981,2.415,982,2.415,983,2.415,984,2.415,985,3.737,986,2.415,987,3.737,988,3.737,989,2.415,990,2.415,991,5.146,992,3.737,993,3.737,994,2.415,995,2.415,996,2.415,997,2.415,998,2.415,999,4.572,1000,2.415,1001,3.737,1002,2.415,1003,2.415,1004,2.415,1005,2.415,1006,2.415,1007,2.415,1008,2.415]],["title/interfaces/ToEntity.html",[408,2.242,1009,3.038]],["body/interfaces/ToEntity.html",[3,0.229,4,0.203,5,0.203,8,0.653,12,0.968,21,0.653,22,0.016,27,0.882,45,0.229,51,0.229,53,0.014,54,0.014,86,2.058,94,1.625,95,1.106,97,1.697,149,3.912,151,2.695,156,4.597,163,2.451,408,3.061,410,3.79,641,5.615,1009,5.632,1010,4.63,1011,6.5,1012,5.359]],["title/classes/UpdateApiPermissionDto.html",[0,0.249,102,2.566]],["body/classes/UpdateApiPermissionDto.html",[0,0.376,2,0.726,3,0.198,4,0.175,5,0.175,8,0.563,9,1.453,12,1.318,15,5.065,21,0.798,22,0.016,24,1.604,26,2.492,27,1.077,32,1.303,36,4.192,45,0.198,51,0.198,52,3.737,53,0.012,54,0.012,81,4.205,85,3.942,102,3.875,250,4.627,252,4.627,317,2.816,326,4.589,334,3.942,335,3.986,337,2.114,690,3.993,696,5.12,1013,5.961,1014,4.622,1015,5.926,1016,4.622,1017,4.622]],["title/classes/UpdatePermissionDto.html",[0,0.249,730,2.566]],["body/classes/UpdatePermissionDto.html",[0,0.359,2,0.89,3,0.243,4,0.215,5,0.215,22,0.016,45,0.288,50,1.45,51,0.243,53,0.014,54,0.014,75,2.427,106,3.453,315,3.237,317,3.453,684,4.008,686,2.729,730,4.394,1018,4.895,1019,6.721]],["title/classes/UpdateRoleDto.html",[0,0.249,816,2.566]],["body/classes/UpdateRoleDto.html",[0,0.359,2,0.89,3,0.243,4,0.215,5,0.215,22,0.016,45,0.288,50,1.45,51,0.243,53,0.014,54,0.014,75,2.427,353,3.453,355,4.008,684,4.008,686,2.729,816,4.394,820,4.387,1020,4.895,1021,6.721]],["title/classes/UpdateUserDto.html",[0,0.249,1022,2.566]],["body/classes/UpdateUserDto.html",[0,0.359,2,0.89,3,0.243,4,0.215,5,0.215,22,0.016,45,0.288,50,1.45,51,0.243,53,0.014,54,0.014,75,2.427,364,3.453,366,4.008,684,4.008,686,2.729,1022,4.394,1023,4.895,1024,6.721,1025,4.387]],["title/classes/User.html",[0,0.249,57,0.962]],["body/classes/User.html",[0,0.471,1,1.882,2,0.651,3,0.177,4,0.157,5,0.157,6,1.257,22,0.017,23,2.344,39,2.143,42,1.692,45,0.318,46,1.995,47,1.895,51,0.324,53,0.012,54,0.012,56,1.895,57,1.689,58,2.657,59,2.389,60,2.804,61,2.389,62,2.804,63,2.804,64,2.006,65,2.804,66,2.344,67,2.804,68,1.995,69,2.804,70,1.803,71,2.804,72,2.804,73,2.106,74,2.106,75,2.686,76,1.106,77,1.895]],["title/classes/User-1.html",[0,0.209,55,1.366,57,0.808]],["body/classes/User-1.html",[0,0.18,2,0.447,3,0.122,4,0.108,5,0.108,6,2.205,8,0.347,9,1.037,11,2.568,12,1.132,14,1.293,20,2.568,21,0.94,22,0.017,24,1.766,25,2.579,26,2.021,27,1.186,29,2.819,30,3.3,32,1.424,33,2.568,39,2.305,42,1.744,45,0.268,47,1.301,48,2.785,49,2.844,50,0.728,51,0.122,52,2.417,53,0.009,54,0.009,57,1.037,59,2.462,61,2.462,95,1.043,131,2.199,160,1.53,369,2.718,370,2.886,372,3.912,373,2.886,395,2.203,422,1.733,660,1.86,804,2.458,805,3.656,1026,2.458,1027,2.845,1028,2.845,1029,2.845,1030,2.845,1031,2.845,1032,2.845,1033,2.845,1034,2.845,1035,2.845,1036,2.845,1037,2.845,1038,6.493,1039,4.232,1040,2.845,1041,2.845]],["title/controllers/UserController.html",[78,1.795,1042,2.776]],["body/controllers/UserController.html",[0,0.215,3,0.145,4,0.129,5,0.129,8,0.414,12,1.159,14,1.706,21,0.783,22,0.017,24,1.574,27,1.057,32,1.346,45,0.285,50,0.869,51,0.145,53,0.01,54,0.01,57,0.833,78,1.554,80,1.554,84,2.221,86,1.524,87,2.589,88,2.589,89,2.589,90,2.403,92,2.403,94,1.947,95,1.325,96,2.202,97,2.033,98,1.827,99,2.403,101,1.827,103,2.403,105,1.827,107,2.933,108,2.403,109,2.403,110,0.987,113,1.827,114,4.36,115,3.148,118,1.636,119,1.636,120,4.198,121,2.403,122,2.218,124,2.403,125,2.403,127,2.403,364,4.063,454,3.405,562,2.221,686,2.318,700,3.977,719,2.933,721,2.63,727,2.07,728,2.63,733,2.07,735,2.63,740,2.63,741,2.63,825,2.935,1022,4.58,1025,4.329,1042,3.405,1043,2.935,1044,2.935,1045,3.397,1046,3.397,1047,3.397,1048,3.397,1049,3.397,1050,3.407,1051,2.935,1052,3.397,1053,3.397,1054,3.397,1055,3.397,1056,3.397,1057,3.397]],["title/modules/UserModule.html",[223,1.627,272,2.566]],["body/modules/UserModule.html",[0,0.311,3,0.21,4,0.186,5,0.186,22,0.016,45,0.302,51,0.21,53,0.013,54,0.013,80,2.815,110,1.426,223,2.788,225,2.493,226,2.493,227,2.802,228,2.802,229,2.362,230,3.617,231,2.802,234,3.515,235,2.802,236,2.802,269,4.517,272,4.974,274,4.765,1042,4.757,1050,4.517,1051,4.238,1058,4.238,1059,4.238,1060,4.905,1061,4.905,1062,4.905,1063,4.905]],["title/injectables/UserService.html",[157,1.707,1050,2.391]],["body/injectables/UserService.html",[0,0.138,3,0.093,4,0.083,5,0.083,8,0.266,12,1.018,14,1.685,21,0.687,22,0.017,26,2.133,27,0.928,29,0.862,32,1.191,39,0.753,42,1.245,45,0.241,51,0.093,53,0.007,54,0.007,55,0.904,57,1.501,59,1.915,76,1.759,86,1.092,87,1.855,88,1.855,89,2.302,94,1.71,95,1.359,97,1.679,98,1.855,101,1.855,105,1.173,110,0.634,113,1.173,119,1.661,122,1.948,131,1.862,145,3.539,147,1.97,148,1.328,149,2.617,151,1.775,157,1.501,163,0.997,169,2.102,170,3.543,174,2.473,175,2.608,179,1.426,191,2.553,197,1.542,204,3.028,206,2.44,239,1.328,243,2.852,249,3.436,254,2.44,256,2.175,258,2.473,263,1.328,364,3.231,368,2.671,369,2.852,370,2.445,371,2.671,372,3.314,373,2.78,445,2.44,455,3.373,514,1.688,550,3.698,552,2.98,555,1.884,556,1.884,558,2.98,559,1.884,561,1.688,562,3.182,563,1.884,636,1.245,637,1.245,676,4.204,686,2.061,700,3.182,719,2.102,727,2.102,733,1.328,835,2.98,854,2.98,864,1.884,942,2.98,1022,3.861,1025,3.314,1044,2.98,1050,2.102,1064,1.884,1065,2.18,1066,2.18,1067,2.18,1068,2.18,1069,2.18,1070,2.18,1071,2.18,1072,3.45,1073,4.866,1074,3.45,1075,2.18,1076,2.18,1077,2.18,1078,3.45,1079,2.18,1080,2.18,1081,2.18,1082,3.45,1083,3.45,1084,3.45,1085,3.45,1086,2.18,1087,2.18,1088,3.45,1089,2.18,1090,3.45,1091,3.45,1092,2.18,1093,2.18,1094,2.18,1095,2.18,1096,2.18,1097,2.18,1098,2.18,1099,2.18,1100,2.18]],["title/coverage.html",[1101,4.119]],["body/coverage.html",[0,0.487,1,1.096,5,0.088,6,2.206,7,1.998,21,0.282,22,0.017,23,1.365,39,1.248,42,0.924,53,0.008,54,0.008,56,3.004,57,0.886,59,1.305,61,1.305,64,1.096,66,1.365,77,1.057,78,2.494,79,1.635,81,3.063,82,2.362,83,1.998,85,2.064,91,1.512,96,1.057,102,1.512,111,1.409,130,1.998,140,1.79,141,1.635,143,1.998,144,1.998,151,1.498,157,2.373,174,1.175,229,1.114,240,1.998,273,1.79,298,1.79,315,1.321,316,1.998,317,3.323,338,1.79,341,1.79,343,2.555,353,1.409,354,1.998,355,3.145,364,1.409,365,1.998,366,3.145,408,2.54,409,1.79,411,2.797,412,2.797,420,1.79,434,1.635,435,1.998,441,1.512,451,1.512,455,1.321,460,1.79,463,1.79,465,1.79,485,1.998,518,1.79,521,1.635,523,1.79,528,5.194,579,2.797,597,1.79,603,1.998,613,1.998,639,1.79,678,1.512,679,1.998,688,1.512,689,1.998,700,1.512,701,1.998,708,1.998,717,1.635,718,1.998,730,1.512,732,1.409,743,1.998,754,1.998,782,1.998,792,1.998,809,1.635,810,1.998,816,1.512,818,1.409,832,1.998,865,1.635,866,2.797,867,2.797,869,4.994,909,1.635,916,1.998,926,2.797,927,1.998,933,1.998,937,1.79,938,1.998,939,1.998,966,1.79,1009,1.79,1010,1.998,1013,1.998,1018,1.998,1020,1.998,1022,1.512,1023,1.998,1026,1.998,1042,1.635,1043,1.998,1050,1.409,1064,1.998,1101,1.79,1102,2.312,1103,2.312,1104,2.312,1105,1.998,1106,1.998,1107,7.585,1108,2.312,1109,5.027,1110,6.693,1111,4.447,1112,3.613,1113,3.613,1114,2.312,1115,6.249,1116,2.797,1117,2.797,1118,2.797,1119,2.797,1120,3.121,1121,4.447,1122,4.447,1123,1.998,1124,1.998,1125,1.998,1126,1.998,1127,3.841,1128,1.998,1129,1.998,1130,1.998,1131,5.453,1132,4.447,1133,2.312,1134,2.312,1135,2.312]],["title/dependencies.html",[226,2.394,1136,2.846]],["body/dependencies.html",[0,0.411,22,0.017,50,1.163,53,0.012,54,0.012,110,1.321,151,2.431,160,2.445,162,3.52,163,2.079,226,2.311,276,3.928,277,3.928,279,3.52,292,3.928,293,5.066,295,3.216,297,3.928,337,2.079,417,3.928,515,3.928,596,3.928,648,2.973,965,5.066,1137,4.547,1138,4.547,1139,6.491,1140,4.547,1141,4.547,1142,4.547,1143,5.864,1144,4.547,1145,4.547,1146,4.547,1147,4.547,1148,4.547,1149,4.547,1150,4.547,1151,4.547,1152,4.547,1153,4.547,1154,4.547,1155,4.547,1156,4.547,1157,4.547,1158,4.547,1159,4.547,1160,4.547,1161,4.547,1162,4.547,1163,4.547,1164,4.547,1165,4.547,1166,4.547,1167,3.928,1168,5.864,1169,4.547,1170,4.547,1171,4.547,1172,4.547,1173,4.547,1174,4.547,1175,4.547,1176,4.547,1177,4.547]],["title/miscellaneous/functions.html",[1178,2.008,1179,4.069]],["body/miscellaneous/functions.html",[8,0.568,12,1.291,21,0.872,22,0.016,32,1.307,53,0.012,54,0.012,94,2.17,95,1.476,151,1.932,229,2.869,338,4.613,341,4.613,343,4.214,421,3.896,446,4.613,866,3.608,867,4.613,868,5.147,870,4.026,909,4.214,944,4.613,950,5.147,966,5.085,1105,4.026,1106,5.147,1116,3.608,1117,4.613,1118,3.608,1119,4.613,1120,4.026,1178,2.84,1179,4.026,1180,5.958,1181,4.026,1182,4.026,1183,4.66,1184,4.66,1185,4.66,1186,4.66,1187,7.531,1188,5.958,1189,4.66,1190,4.66]],["title/index.html",[8,0.402,1191,3.295,1192,3.295]],["body/index.html",[4,0.175,13,1.455,22,0.016,53,0.012,54,0.012,302,3.559,309,3.971,421,3.005,568,3.971,871,3.559,962,5.102,1101,3.559,1167,5.637,1193,4.596,1194,4.596,1195,5.906,1196,4.596,1197,4.596,1198,4.596,1199,4.596,1200,4.596,1201,4.596,1202,4.596,1203,4.596,1204,6.525,1205,7.414,1206,4.596,1207,7.29,1208,4.596,1209,4.596,1210,5.906,1211,4.596,1212,4.596,1213,4.596,1214,5.906,1215,4.596,1216,4.596,1217,4.596,1218,5.102,1219,5.906,1220,4.596,1221,4.596,1222,4.596,1223,4.596,1224,4.596,1225,3.971,1226,4.596,1227,4.596,1228,4.596,1229,4.596,1230,4.596,1231,4.596,1232,4.596,1233,4.596,1234,4.596,1235,4.596,1236,3.971,1237,4.596,1238,4.596,1239,4.596,1240,4.596,1241,4.596,1242,4.596,1243,3.971]],["title/modules.html",[225,2.704]],["body/modules.html",[22,0.014,53,0.014,54,0.014,224,3.643,225,2.832,266,3.643,269,3.395,270,3.643,271,3.643,272,3.643,1225,6.603,1244,7.644,1245,7.644,1246,7.644]],["title/overview.html",[1247,4.596]],["body/overview.html",[2,0.702,22,0.016,53,0.012,54,0.012,55,1.855,80,2.046,111,3.925,140,3.464,223,1.855,224,4.457,225,2.274,226,2.274,227,2.556,228,2.556,229,2.155,230,2.406,231,2.556,232,3.865,233,3.865,234,3.315,235,2.556,236,2.556,239,2.726,266,4.978,267,3.865,268,3.865,269,4.489,270,4.618,271,4.618,272,4.817,410,3.164,455,4.208,477,3.865,478,3.865,479,3.865,626,3.536,732,3.925,751,3.865,752,3.865,818,3.925,828,3.865,829,3.865,1050,3.925,1058,3.865,1059,3.865,1247,3.865,1248,4.474,1249,4.474,1250,4.474]],["title/properties.html",[9,1.155,1136,2.846]],["body/properties.html",[9,1.458,13,1.883,22,0.016,53,0.014,54,0.014,1218,5.138,1236,5.138,1243,5.138,1251,5.947,1252,5.947,1253,5.947]],["title/miscellaneous/typealiases.html",[1178,2.008,1254,4.71]],["body/miscellaneous/typealiases.html",[8,0.653,21,0.653,22,0.016,53,0.014,54,0.014,173,3.79,249,3.265,251,3.79,639,4.149,653,6.044,654,4.63,655,4.63,656,4.63,657,4.63,658,5.615,692,5.615,702,5.615,1178,3.265,1255,5.359,1256,6.5,1257,6.996,1258,7.274,1259,6.5,1260,6.5,1261,5.359]],["title/miscellaneous/variables.html",[1178,2.008,1262,4.069]],["body/miscellaneous/variables.html",[1,1.056,6,1.056,8,0.424,13,1.794,21,0.75,22,0.017,23,1.315,32,0.925,39,1.203,42,0.891,53,0.01,54,0.01,56,1.592,57,1.201,59,1.257,61,1.257,64,1.056,66,1.315,76,1.513,77,2.24,95,1.169,122,1.958,151,2.549,153,4.895,166,4.895,168,3.008,174,2.88,177,3.008,191,2.729,211,3.008,222,3.048,243,3.048,273,2.696,298,3.792,299,2.696,343,3.465,373,3.237,411,2.696,412,3.792,420,3.792,421,2.276,422,4.474,460,3.792,463,3.792,465,3.792,518,3.792,523,3.792,561,4.387,579,2.696,593,3.008,597,3.792,660,4.8,793,4.895,944,3.792,1116,2.696,1117,3.792,1118,2.696,1119,3.792,1123,3.008,1124,4.232,1125,3.008,1126,4.232,1127,4.895,1128,4.232,1129,4.232,1130,4.232,1178,2.122,1181,3.008,1182,3.008,1262,3.008,1263,3.482,1264,3.482,1265,3.482,1266,5.667,1267,3.482,1268,3.482,1269,3.482,1270,5.667,1271,5.667,1272,5.667,1273,3.482,1274,3.482,1275,3.482,1276,5.667,1277,3.482]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":528,"title":{},"body":{"injectables/IamService.html":{},"classes/PaginationDto.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1252,"title":{},"body":{"properties.html":{}}}],["0.1.6",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["0.2.9",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["0.23.0",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0})@max(100)@min(5)@isint()@apiproperty({description",{"_index":625,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["1",{"_index":55,"title":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog-1.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"classes/Session-1.html":{},"classes/User-1.html":{}},"body":{"classes/PaginationDto.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["1.0.0",{"_index":430,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["1.10.0",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["1.7.2",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":425,"title":{},"body":{"interfaces/IAppConfig.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["10.0.0",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["10.3.10",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":377,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PaginationDto.html":{}}}],["100)'})@transform",{"_index":627,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["1000",{"_index":545,"title":{},"body":{"injectables/IamService.html":{},"classes/TestHelper.html":{}}}],["12",{"_index":382,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["18",{"_index":385,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["2.2.2",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":346,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["20})@isnotsamenameindatabase('permission",{"_index":323,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["24",{"_index":547,"title":{},"body":{"injectables/IamService.html":{},"classes/TestHelper.html":{}}}],["3",{"_index":1250,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["3.13.0",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":426,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["34",{"_index":1249,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":626,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"overview.html":{}}}],["5.1.1",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["5.16.1",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["5.7.3",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":320,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["6",{"_index":1248,"title":{},"body":{"overview.html":{}}}],["60",{"_index":546,"title":{},"body":{"injectables/IamService.html":{},"classes/TestHelper.html":{}}}],["7",{"_index":542,"title":{},"body":{"injectables/IamService.html":{},"classes/TestHelper.html":{}}}],["7.0.3",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":387,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8000",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["_apipermission",{"_index":69,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["_apipermissiongroup",{"_index":71,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["_gen/prisma",{"_index":697,"title":{},"body":{"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"injectables/PermissionService.html":{}}}],["_operationlog",{"_index":72,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["_permission",{"_index":65,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["_permissiongroup",{"_index":67,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["_profile",{"_index":60,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["_role",{"_index":63,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["_session",{"_index":62,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["_token",{"_index":513,"title":{},"body":{"injectables/IamService.html":{}}}],["_user",{"_index":58,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"injectables/IamService.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["abstract",{"_index":640,"title":{},"body":{"classes/PaginationDto.html":{}}}],["accessors",{"_index":583,"title":{},"body":{"classes/InitUtil.html":{},"classes/TestHelper.html":{}}}],["active",{"_index":561,"title":{},"body":{"injectables/IamService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["admin",{"_index":211,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["afterall(async",{"_index":994,"title":{},"body":{"classes/TestHelper.html":{}}}],["aftereach(async",{"_index":990,"title":{},"body":{"classes/TestHelper.html":{}}}],["agent",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":1255,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowinfinity",{"_index":623,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["allownan",{"_index":662,"title":{},"body":{"classes/PaginationDto.html":{}}}],["already",{"_index":555,"title":{},"body":{"injectables/IamService.html":{},"injectables/UserService.html":{}}}],["amazing",{"_index":1226,"title":{},"body":{"index.html":{}}}],["api",{"_index":85,"title":{},"body":{"controllers/ApiPermissionController.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/UpdateApiPermissionDto.html":{},"coverage.html":{}}}],["api.id",{"_index":217,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["api.ispublic",{"_index":203,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["api_permission",{"_index":70,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["api_permission_group",{"_index":46,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["apioperation",{"_index":114,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/IamController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apipermission",{"_index":1,"title":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{}},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"injectables/RoleService.html":{},"classes/Session.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipermissioncontroller",{"_index":79,"title":{"controllers/ApiPermissionController.html":{}},"body":{"controllers/ApiPermissionController.html":{},"modules/ApiPermissionModule.html":{},"coverage.html":{}}}],["apipermissiongroup",{"_index":23,"title":{"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{}},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipermissiongroups",{"_index":10,"title":{},"body":{"classes/ApiPermission.html":{},"injectables/ApiPermissionService.html":{}}}],["apipermissionguard",{"_index":141,"title":{"guards/ApiPermissionGuard.html":{}},"body":{"guards/ApiPermissionGuard.html":{},"modules/IamModule.html":{},"coverage.html":{}}}],["apipermissionid",{"_index":216,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"classes/OperationLog-1.html":{}}}],["apipermissionids",{"_index":356,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["apipermissionmodule",{"_index":224,"title":{"modules/ApiPermissionModule.html":{}},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apipermissions",{"_index":176,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"classes/Role-1.html":{},"injectables/RoleService.html":{}}}],["apipermissions.length",{"_index":841,"title":{},"body":{"injectables/RoleService.html":{}}}],["apipermissionservice",{"_index":111,"title":{"injectables/ApiPermissionService.html":{}},"body":{"controllers/ApiPermissionController.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"coverage.html":{},"overview.html":{}}}],["apiproperty",{"_index":48,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/OperationLog-1.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"classes/Session-1.html":{},"classes/User-1.html":{}}}],["apiproperty({enum",{"_index":804,"title":{},"body":{"classes/Role-1.html":{},"classes/User-1.html":{}}}],["apiproperty({isarray",{"_index":25,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"classes/Role-1.html":{},"classes/User-1.html":{}}}],["apiproperty({type",{"_index":30,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"classes/OperationLog-1.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"classes/Session-1.html":{},"classes/User-1.html":{}}}],["apipropertyoptional",{"_index":49,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"classes/OperationLog-1.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"classes/Session-1.html":{},"classes/User-1.html":{}}}],["apipropertyoptional({type",{"_index":33,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"classes/OperationLog-1.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"classes/Session-1.html":{},"classes/User-1.html":{}}}],["apitags",{"_index":115,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/IamController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apitags('api",{"_index":116,"title":{},"body":{"controllers/ApiPermissionController.html":{}}}],["app",{"_index":421,"title":{},"body":{"interfaces/IAppConfig.html":{},"classes/TestHelper.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.get(prismaservice",{"_index":873,"title":{},"body":{"interfaces/Route.html":{}}}],["app.gethttpserver",{"_index":872,"title":{},"body":{"interfaces/Route.html":{}}}],["app.module",{"_index":964,"title":{},"body":{"classes/TestHelper.html":{}}}],["app_config_token",{"_index":420,"title":{},"body":{"interfaces/IAppConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app_guard",{"_index":482,"title":{},"body":{"modules/IamModule.html":{}}}],["app_interceptor",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":970,"title":{},"body":{"classes/TestHelper.html":{}}}],["appconfig",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["appdescription",{"_index":413,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["apphost",{"_index":414,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["applications",{"_index":1200,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":266,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"classes/TestHelper.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":415,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["appversion",{"_index":416,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["array",{"_index":328,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/PaginationUserDto.html":{},"classes/TestHelper.html":{}}}],["array.isarray(props[key",{"_index":670,"title":{},"body":{"classes/PaginationDto.html":{}}}],["array.ts",{"_index":1258,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["arrayelement",{"_index":1256,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["async",{"_index":145,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/TestHelper.html":{},"injectables/UserService.html":{}}}],["author",{"_index":1236,"title":{},"body":{"index.html":{},"properties.html":{}}}],["availableroutes",{"_index":876,"title":{},"body":{"interfaces/Route.html":{}}}],["availableroutes.filter",{"_index":896,"title":{},"body":{"interfaces/Route.html":{}}}],["availableroutes.map((route",{"_index":893,"title":{},"body":{"interfaces/Route.html":{}}}],["avatar",{"_index":367,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/Profile-1.html":{}}}],["await",{"_index":170,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/TestHelper.html":{},"injectables/UserService.html":{}}}],["axios",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":1227,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":514,"title":{},"body":{"injectables/IamService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["badrequestexception('invalid",{"_index":553,"title":{},"body":{"injectables/IamService.html":{}}}],["badrequestexception('role",{"_index":856,"title":{},"body":{"injectables/RoleService.html":{}}}],["badrequestexception('user",{"_index":550,"title":{},"body":{"injectables/IamService.html":{},"injectables/UserService.html":{}}}],["bcrypt",{"_index":515,"title":{},"body":{"injectables/IamService.html":{},"dependencies.html":{}}}],["bcrypt.compare(str",{"_index":534,"title":{},"body":{"injectables/IamService.html":{}}}],["bcrypt.gensalt(10",{"_index":532,"title":{},"body":{"injectables/IamService.html":{}}}],["bcrypt.hash(str",{"_index":533,"title":{},"body":{"injectables/IamService.html":{}}}],["beforeall(async",{"_index":972,"title":{},"body":{"classes/TestHelper.html":{}}}],["behaviorsubject",{"_index":593,"title":{},"body":{"classes/InitUtil.html":{},"miscellaneous/variables.html":{}}}],["bio",{"_index":368,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/Profile-1.html":{},"injectables/UserService.html":{}}}],["body",{"_index":107,"title":{},"body":{"controllers/ApiPermissionController.html":{},"guards/ApiPermissionGuard.html":{},"controllers/IamController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":36,"title":{},"body":{"classes/ApiPermission.html":{},"classes/PaginationRoleDto.html":{},"classes/Role-1.html":{},"classes/UpdateApiPermissionDto.html":{}}}],["bootstrap",{"_index":229,"title":{},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"classes/TestHelper.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrap(app",{"_index":1185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap(server",{"_index":984,"title":{},"body":{"classes/TestHelper.html":{}}}],["break",{"_index":675,"title":{},"body":{"classes/PaginationDto.html":{}}}],["browse",{"_index":1246,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1244,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1196,"title":{},"body":{"index.html":{}}}],["buildwhere",{"_index":614,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["buildwhere(props",{"_index":629,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["buildwherewithnodelete",{"_index":615,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["buildwherewithnodelete(props",{"_index":633,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["c",{"_index":852,"title":{},"body":{"injectables/RoleService.html":{}}}],["cache",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["cacheinterceptor",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["callback",{"_index":991,"title":{},"body":{"classes/TestHelper.html":{}}}],["canactivate",{"_index":146,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["canactivate(context",{"_index":152,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["case",{"_index":673,"title":{},"body":{"classes/PaginationDto.html":{}}}],["catch",{"_index":987,"title":{},"body":{"classes/TestHelper.html":{}}}],["chalk",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["class",{"_index":0,"title":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{}},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["class/api_permission.ts",{"_index":7,"title":{},"body":{"classes/ApiPermission.html":{},"coverage.html":{}}}],["class/api_permission.ts:11",{"_index":41,"title":{},"body":{"classes/ApiPermission.html":{}}}],["class/api_permission.ts:14",{"_index":38,"title":{},"body":{"classes/ApiPermission.html":{}}}],["class/api_permission.ts:17",{"_index":34,"title":{},"body":{"classes/ApiPermission.html":{}}}],["class/api_permission.ts:20",{"_index":37,"title":{},"body":{"classes/ApiPermission.html":{}}}],["class/api_permission.ts:23",{"_index":31,"title":{},"body":{"classes/ApiPermission.html":{}}}],["class/api_permission.ts:26",{"_index":44,"title":{},"body":{"classes/ApiPermission.html":{}}}],["class/api_permission.ts:29",{"_index":28,"title":{},"body":{"classes/ApiPermission.html":{}}}],["class/api_permission.ts:32",{"_index":40,"title":{},"body":{"classes/ApiPermission.html":{}}}],["class/api_permission.ts:35",{"_index":43,"title":{},"body":{"classes/ApiPermission.html":{}}}],["class/api_permission.ts:8",{"_index":35,"title":{},"body":{"classes/ApiPermission.html":{}}}],["class/api_permission_group.ts",{"_index":130,"title":{},"body":{"classes/ApiPermissionGroup.html":{},"coverage.html":{}}}],["class/api_permission_group.ts:12",{"_index":135,"title":{},"body":{"classes/ApiPermissionGroup.html":{}}}],["class/api_permission_group.ts:15",{"_index":138,"title":{},"body":{"classes/ApiPermissionGroup.html":{}}}],["class/api_permission_group.ts:18",{"_index":133,"title":{},"body":{"classes/ApiPermissionGroup.html":{}}}],["class/api_permission_group.ts:21",{"_index":139,"title":{},"body":{"classes/ApiPermissionGroup.html":{}}}],["class/api_permission_group.ts:24",{"_index":134,"title":{},"body":{"classes/ApiPermissionGroup.html":{}}}],["class/api_permission_group.ts:6",{"_index":136,"title":{},"body":{"classes/ApiPermissionGroup.html":{}}}],["class/api_permission_group.ts:9",{"_index":137,"title":{},"body":{"classes/ApiPermissionGroup.html":{}}}],["class/index.ts",{"_index":56,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class/operation_log.ts",{"_index":603,"title":{},"body":{"classes/OperationLog-1.html":{},"coverage.html":{}}}],["class/operation_log.ts:10",{"_index":612,"title":{},"body":{"classes/OperationLog-1.html":{}}}],["class/operation_log.ts:13",{"_index":611,"title":{},"body":{"classes/OperationLog-1.html":{}}}],["class/operation_log.ts:16",{"_index":606,"title":{},"body":{"classes/OperationLog-1.html":{}}}],["class/operation_log.ts:19",{"_index":610,"title":{},"body":{"classes/OperationLog-1.html":{}}}],["class/operation_log.ts:22",{"_index":608,"title":{},"body":{"classes/OperationLog-1.html":{}}}],["class/operation_log.ts:25",{"_index":604,"title":{},"body":{"classes/OperationLog-1.html":{}}}],["class/operation_log.ts:28",{"_index":605,"title":{},"body":{"classes/OperationLog-1.html":{}}}],["class/operation_log.ts:31",{"_index":607,"title":{},"body":{"classes/OperationLog-1.html":{}}}],["class/operation_log.ts:7",{"_index":609,"title":{},"body":{"classes/OperationLog-1.html":{}}}],["class/permission",{"_index":761,"title":{},"body":{"injectables/PermissionService.html":{}}}],["class/permission.ts",{"_index":708,"title":{},"body":{"classes/Permission-1.html":{},"coverage.html":{}}}],["class/permission.ts:10",{"_index":713,"title":{},"body":{"classes/Permission-1.html":{}}}],["class/permission.ts:13",{"_index":711,"title":{},"body":{"classes/Permission-1.html":{}}}],["class/permission.ts:16",{"_index":715,"title":{},"body":{"classes/Permission-1.html":{}}}],["class/permission.ts:19",{"_index":714,"title":{},"body":{"classes/Permission-1.html":{}}}],["class/permission.ts:22",{"_index":709,"title":{},"body":{"classes/Permission-1.html":{}}}],["class/permission.ts:25",{"_index":716,"title":{},"body":{"classes/Permission-1.html":{}}}],["class/permission.ts:28",{"_index":710,"title":{},"body":{"classes/Permission-1.html":{}}}],["class/permission.ts:7",{"_index":712,"title":{},"body":{"classes/Permission-1.html":{}}}],["class/permission_group.ts",{"_index":743,"title":{},"body":{"classes/PermissionGroup-1.html":{},"coverage.html":{}}}],["class/permission_group.ts:12",{"_index":746,"title":{},"body":{"classes/PermissionGroup-1.html":{}}}],["class/permission_group.ts:15",{"_index":749,"title":{},"body":{"classes/PermissionGroup-1.html":{}}}],["class/permission_group.ts:18",{"_index":744,"title":{},"body":{"classes/PermissionGroup-1.html":{}}}],["class/permission_group.ts:21",{"_index":750,"title":{},"body":{"classes/PermissionGroup-1.html":{}}}],["class/permission_group.ts:24",{"_index":745,"title":{},"body":{"classes/PermissionGroup-1.html":{}}}],["class/permission_group.ts:6",{"_index":747,"title":{},"body":{"classes/PermissionGroup-1.html":{}}}],["class/permission_group.ts:9",{"_index":748,"title":{},"body":{"classes/PermissionGroup-1.html":{}}}],["class/profile.ts",{"_index":782,"title":{},"body":{"classes/Profile-1.html":{},"coverage.html":{}}}],["class/profile.ts:12",{"_index":783,"title":{},"body":{"classes/Profile-1.html":{}}}],["class/profile.ts:15",{"_index":788,"title":{},"body":{"classes/Profile-1.html":{}}}],["class/profile.ts:18",{"_index":790,"title":{},"body":{"classes/Profile-1.html":{}}}],["class/profile.ts:21",{"_index":791,"title":{},"body":{"classes/Profile-1.html":{}}}],["class/profile.ts:24",{"_index":785,"title":{},"body":{"classes/Profile-1.html":{}}}],["class/profile.ts:27",{"_index":789,"title":{},"body":{"classes/Profile-1.html":{}}}],["class/profile.ts:30",{"_index":786,"title":{},"body":{"classes/Profile-1.html":{}}}],["class/profile.ts:6",{"_index":787,"title":{},"body":{"classes/Profile-1.html":{}}}],["class/profile.ts:9",{"_index":784,"title":{},"body":{"classes/Profile-1.html":{}}}],["class/role",{"_index":698,"title":{},"body":{"classes/PaginationRoleDto.html":{}}}],["class/role.ts",{"_index":792,"title":{},"body":{"classes/Role-1.html":{},"coverage.html":{}}}],["class/role.ts:12",{"_index":800,"title":{},"body":{"classes/Role-1.html":{}}}],["class/role.ts:15",{"_index":798,"title":{},"body":{"classes/Role-1.html":{}}}],["class/role.ts:18",{"_index":808,"title":{},"body":{"classes/Role-1.html":{}}}],["class/role.ts:21",{"_index":801,"title":{},"body":{"classes/Role-1.html":{}}}],["class/role.ts:24",{"_index":794,"title":{},"body":{"classes/Role-1.html":{}}}],["class/role.ts:27",{"_index":806,"title":{},"body":{"classes/Role-1.html":{}}}],["class/role.ts:30",{"_index":796,"title":{},"body":{"classes/Role-1.html":{}}}],["class/role.ts:33",{"_index":795,"title":{},"body":{"classes/Role-1.html":{}}}],["class/role.ts:36",{"_index":807,"title":{},"body":{"classes/Role-1.html":{}}}],["class/role.ts:39",{"_index":797,"title":{},"body":{"classes/Role-1.html":{}}}],["class/role.ts:9",{"_index":799,"title":{},"body":{"classes/Role-1.html":{}}}],["class/session.ts",{"_index":916,"title":{},"body":{"classes/Session-1.html":{},"coverage.html":{}}}],["class/session.ts:12",{"_index":917,"title":{},"body":{"classes/Session-1.html":{}}}],["class/session.ts:15",{"_index":923,"title":{},"body":{"classes/Session-1.html":{}}}],["class/session.ts:18",{"_index":918,"title":{},"body":{"classes/Session-1.html":{}}}],["class/session.ts:21",{"_index":920,"title":{},"body":{"classes/Session-1.html":{}}}],["class/session.ts:24",{"_index":919,"title":{},"body":{"classes/Session-1.html":{}}}],["class/session.ts:27",{"_index":924,"title":{},"body":{"classes/Session-1.html":{}}}],["class/session.ts:30",{"_index":925,"title":{},"body":{"classes/Session-1.html":{}}}],["class/session.ts:6",{"_index":921,"title":{},"body":{"classes/Session-1.html":{}}}],["class/session.ts:9",{"_index":922,"title":{},"body":{"classes/Session-1.html":{}}}],["class/user",{"_index":705,"title":{},"body":{"classes/PaginationUserDto.html":{}}}],["class/user.ts",{"_index":1026,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{}}}],["class/user.ts:10",{"_index":1030,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:13",{"_index":1029,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:16",{"_index":1031,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:19",{"_index":1033,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:22",{"_index":1040,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:25",{"_index":1034,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:28",{"_index":1037,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:31",{"_index":1035,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:34",{"_index":1036,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:37",{"_index":1027,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:40",{"_index":1041,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:43",{"_index":1028,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:46",{"_index":1032,"title":{},"body":{"classes/User-1.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"overview.html":{}}}],["cleanupcallbacks",{"_index":941,"title":{},"body":{"classes/TestHelper.html":{}}}],["cluster_apipermissionmodule",{"_index":232,"title":{},"body":{"modules/ApiPermissionModule.html":{},"overview.html":{}}}],["cluster_apipermissionmodule_providers",{"_index":233,"title":{},"body":{"modules/ApiPermissionModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_iammodule",{"_index":477,"title":{},"body":{"modules/IamModule.html":{},"overview.html":{}}}],["cluster_iammodule_exports",{"_index":478,"title":{},"body":{"modules/IamModule.html":{},"overview.html":{}}}],["cluster_iammodule_providers",{"_index":479,"title":{},"body":{"modules/IamModule.html":{},"overview.html":{}}}],["cluster_permissionmodule",{"_index":751,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_permissionmodule_providers",{"_index":752,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":828,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":829,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1058,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1060,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1059,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["commons/dtos/pagination.dto",{"_index":638,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["commons/pipes/all",{"_index":339,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["commons/pipes/not",{"_index":342,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["compare",{"_index":486,"title":{},"body":{"injectables/IamService.html":{}}}],["compare(str",{"_index":495,"title":{},"body":{"injectables/IamService.html":{}}}],["compression",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["config.ts",{"_index":412,"title":{},"body":{"interfaces/IAppConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["configs/app",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":263,"title":{},"body":{"injectables/ApiPermissionService.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"classes/TestHelper.html":{},"injectables/UserService.html":{}}}],["console.error(e",{"_index":989,"title":{},"body":{"classes/TestHelper.html":{}}}],["const",{"_index":76,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"interfaces/IAppConfig.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constants/iam",{"_index":524,"title":{},"body":{"injectables/IamService.html":{}}}],["constants/preset",{"_index":519,"title":{},"body":{"injectables/IamService.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"classes/TestHelper.html":{},"injectables/UserService.html":{}}}],["constructor(mockproviders",{"_index":947,"title":{},"body":{"classes/TestHelper.html":{}}}],["constructor(prisma",{"_index":148,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":118,"title":{},"body":{"controllers/ApiPermissionController.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{}}}],["contains",{"_index":249,"title":{},"body":{"injectables/ApiPermissionService.html":{},"classes/PaginationDto.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["context",{"_index":155,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":165,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["controller",{"_index":78,"title":{"controllers/ApiPermissionController.html":{},"controllers/IamController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}},"body":{"controllers/ApiPermissionController.html":{},"controllers/IamController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('api",{"_index":117,"title":{},"body":{"controllers/ApiPermissionController.html":{}}}],["controller('iam",{"_index":467,"title":{},"body":{"controllers/IamController.html":{}}}],["controller('permission",{"_index":734,"title":{},"body":{"controllers/PermissionController.html":{}}}],["controller('role",{"_index":821,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('user",{"_index":1052,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":80,"title":{},"body":{"controllers/ApiPermissionController.html":{},"modules/ApiPermissionModule.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":526,"title":{},"body":{"injectables/IamService.html":{}}}],["coverage",{"_index":1101,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":686,"title":{},"body":{"classes/PaginationPermissionDto.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":735,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["create(createpermissiondto",{"_index":720,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["create(createroledto",{"_index":811,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["create(createuserdto",{"_index":1044,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createdat",{"_index":11,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"classes/OperationLog-1.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"classes/Session-1.html":{},"classes/User-1.html":{}}}],["createdres",{"_index":902,"title":{},"body":{"interfaces/Route.html":{}}}],["createdres.count",{"_index":911,"title":{},"body":{"interfaces/Route.html":{}}}],["createnestapplication",{"_index":982,"title":{},"body":{"classes/TestHelper.html":{}}}],["createparamdecorator",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":315,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"classes/PaginationPermissionDto.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createpermissiondto.description",{"_index":764,"title":{},"body":{"injectables/PermissionService.html":{}}}],["createpermissiondto.name",{"_index":763,"title":{},"body":{"injectables/PermissionService.html":{}}}],["createpermissiondto.permissiongroupids?.map((id",{"_index":766,"title":{},"body":{"injectables/PermissionService.html":{}}}],["createpermissiondto.roleids?.map((id",{"_index":765,"title":{},"body":{"injectables/PermissionService.html":{}}}],["createroledto",{"_index":353,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createroledto.apipermissionids",{"_index":840,"title":{},"body":{"injectables/RoleService.html":{}}}],["createroledto.apipermissionids.length",{"_index":842,"title":{},"body":{"injectables/RoleService.html":{}}}],["createroledto.description",{"_index":850,"title":{},"body":{"injectables/RoleService.html":{}}}],["createroledto.name",{"_index":849,"title":{},"body":{"injectables/RoleService.html":{}}}],["createroledto.permissionids",{"_index":844,"title":{},"body":{"injectables/RoleService.html":{}}}],["createroledto.permissionids.length",{"_index":846,"title":{},"body":{"injectables/RoleService.html":{}}}],["createuserdto",{"_index":364,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.bio",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.email",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.name",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.phone",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.roleid",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.status",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{}}}],["cross",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["crypto",{"_index":517,"title":{},"body":{"injectables/IamService.html":{},"classes/TestHelper.html":{}}}],["ctx",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":191,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"injectables/IamService.html":{},"classes/OperationLog-1.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/TestHelper.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["data.success",{"_index":212,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["data:\\n",{"_index":199,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["date",{"_index":29,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"classes/OperationLog-1.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"injectables/RoleService.html":{},"classes/Session-1.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["date(date.now",{"_index":544,"title":{},"body":{"injectables/IamService.html":{},"classes/TestHelper.html":{}}}],["days",{"_index":543,"title":{},"body":{"injectables/IamService.html":{}}}],["db.pipe",{"_index":340,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["db.pipe.ts",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":228,"title":{},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":24,"title":{},"body":{"classes/ApiPermission.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/IamController.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/User-1.html":{},"controllers/UserController.html":{}}}],["decorators/get",{"_index":461,"title":{},"body":{"controllers/IamController.html":{}}}],["default",{"_index":422,"title":{},"body":{"interfaces/IAppConfig.html":{},"classes/InitUtil.html":{},"classes/Role-1.html":{},"classes/TestHelper.html":{},"classes/User-1.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"classes/ApiPermission.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deletable",{"_index":793,"title":{},"body":{"classes/Role-1.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":562,"title":{},"body":{"injectables/IamService.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":740,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":728,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["deletedat",{"_index":131,"title":{},"body":{"classes/ApiPermissionGroup.html":{},"classes/OperationLog-1.html":{},"classes/PaginationDto.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"injectables/RoleService.html":{},"classes/Session-1.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["deletedres",{"_index":898,"title":{},"body":{"interfaces/Route.html":{}}}],["deletedres.count",{"_index":906,"title":{},"body":{"interfaces/Route.html":{}}}],["deletedroutes",{"_index":891,"title":{},"body":{"interfaces/Route.html":{}}}],["deletedroutes.map((route",{"_index":900,"title":{},"body":{"interfaces/Route.html":{}}}],["dependencies",{"_index":226,"title":{"dependencies.html":{}},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":13,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"injectables/IamService.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Role-1.html":{},"injectables/RoleService.html":{},"classes/Session-1.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IAppConfig.html":{},"index.html":{}}}],["device",{"_index":541,"title":{},"body":{"injectables/IamService.html":{}}}],["devtoolsmodule",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["devtoolsmodule.register",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["disable",{"_index":565,"title":{},"body":{"injectables/IamService.html":{}}}],["documentation",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":445,"title":{},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["dto.all",{"_index":851,"title":{},"body":{"injectables/RoleService.html":{}}}],["dto.email",{"_index":549,"title":{},"body":{"injectables/IamService.html":{}}}],["dto.filter?.email",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.filter?.id",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.filter?.name",{"_index":854,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["dto.filter?.roleid",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.filter?.status",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/create",{"_index":733,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/pagination",{"_index":105,"title":{},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":113,"title":{},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dtos/sign",{"_index":457,"title":{},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{}}}],["e",{"_index":988,"title":{},"body":{"classes/TestHelper.html":{}}}],["e2e",{"_index":1215,"title":{},"body":{"index.html":{}}}],["each",{"_index":326,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/UpdateApiPermissionDto.html":{}}}],["efficient",{"_index":1197,"title":{},"body":{"index.html":{}}}],["email",{"_index":369,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/IamService.html":{},"classes/PaginationUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["entityname",{"_index":1188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":395,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/Role-1.html":{},"classes/User-1.html":{}}}],["enumname",{"_index":805,"title":{},"body":{"classes/Role-1.html":{},"classes/User-1.html":{}}}],["enums",{"_index":397,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["enums.userstatus",{"_index":393,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["env",{"_index":417,"title":{},"body":{"interfaces/IAppConfig.html":{},"dependencies.html":{}}}],["env.${envfilepath",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eq",{"_index":654,"title":{},"body":{"classes/PaginationDto.html":{},"miscellaneous/typealiases.html":{}}}],["equals",{"_index":676,"title":{},"body":{"classes/PaginationDto.html":{},"injectables/UserService.html":{}}}],["error('apipermissionids",{"_index":843,"title":{},"body":{"injectables/RoleService.html":{}}}],["error('not",{"_index":572,"title":{},"body":{"injectables/IamService.html":{}}}],["error('permissionids",{"_index":847,"title":{},"body":{"injectables/RoleService.html":{}}}],["eslint",{"_index":564,"title":{},"body":{"injectables/IamService.html":{}}}],["eslint/no",{"_index":569,"title":{},"body":{"injectables/IamService.html":{}}}],["example",{"_index":1204,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":153,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["existingroutes",{"_index":886,"title":{},"body":{"interfaces/Route.html":{}}}],["existingroutes.filter",{"_index":892,"title":{},"body":{"interfaces/Route.html":{}}}],["existingroutes.map((route",{"_index":889,"title":{},"body":{"interfaces/Route.html":{}}}],["existingroutespaths",{"_index":888,"title":{},"body":{"interfaces/Route.html":{}}}],["existingroutespaths.includes(route.path",{"_index":897,"title":{},"body":{"interfaces/Route.html":{}}}],["exists",{"_index":556,"title":{},"body":{"injectables/IamService.html":{},"injectables/UserService.html":{}}}],["expired",{"_index":207,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["expiresat",{"_index":172,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"classes/Session-1.html":{},"classes/TestHelper.html":{}}}],["export",{"_index":51,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":231,"title":{},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":162,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"classes/TestHelper.html":{},"dependencies.html":{}}}],["extends",{"_index":75,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["extramodels",{"_index":77,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":222,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":594,"title":{},"body":{"classes/InitUtil.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"interfaces/Route.html":{}}}],["filter((keys",{"_index":600,"title":{},"body":{"classes/InitUtil.html":{}}}],["findall",{"_index":87,"title":{},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@body",{"_index":121,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["findall(dto",{"_index":835,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["findall(paginate",{"_index":723,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["findall(paginationdto",{"_index":90,"title":{},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["findone",{"_index":88,"title":{},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":125,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":98,"title":{},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["format",{"_index":349,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["found",{"_index":206,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":1195,"title":{},"body":{"index.html":{}}}],["function",{"_index":869,"title":{},"body":{"interfaces/Route.html":{},"coverage.html":{}}}],["functions",{"_index":1179,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generator",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["gensession",{"_index":487,"title":{},"body":{"injectables/IamService.html":{}}}],["gensession(user",{"_index":498,"title":{},"body":{"injectables/IamService.html":{}}}],["gentoken",{"_index":945,"title":{},"body":{"classes/TestHelper.html":{}}}],["gentoken(role",{"_index":955,"title":{},"body":{"classes/TestHelper.html":{}}}],["genuser",{"_index":946,"title":{},"body":{"classes/TestHelper.html":{}}}],["genuser(undefined",{"_index":957,"title":{},"body":{"classes/TestHelper.html":{}}}],["get(':id",{"_index":124,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":99,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":92,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["getinit",{"_index":591,"title":{},"body":{"classes/InitUtil.html":{}}}],["getrequest",{"_index":960,"title":{},"body":{"classes/TestHelper.html":{}}}],["getsessionlist",{"_index":488,"title":{},"body":{"injectables/IamService.html":{}}}],["getsessionlist(user",{"_index":500,"title":{},"body":{"injectables/IamService.html":{}}}],["getting",{"_index":1191,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":463,"title":{},"body":{"controllers/IamController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getua",{"_index":465,"title":{},"body":{"controllers/IamController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser",{"_index":460,"title":{},"body":{"controllers/IamController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grow",{"_index":1222,"title":{},"body":{"index.html":{}}}],["gt",{"_index":173,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"classes/PaginationDto.html":{},"miscellaneous/typealiases.html":{}}}],["gte",{"_index":657,"title":{},"body":{"classes/PaginationDto.html":{},"miscellaneous/typealiases.html":{}}}],["guard",{"_index":140,"title":{"guards/ApiPermissionGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":142,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["guards/api",{"_index":483,"title":{},"body":{"modules/IamModule.html":{}}}],["guest",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gylove1994",{"_index":1253,"title":{},"body":{"properties.html":{}}}],["hash",{"_index":489,"title":{},"body":{"injectables/IamService.html":{}}}],["hash(str",{"_index":502,"title":{},"body":{"injectables/IamService.html":{}}}],["hassamesession",{"_index":535,"title":{},"body":{"injectables/IamService.html":{}}}],["hassamesession.id",{"_index":538,"title":{},"body":{"injectables/IamService.html":{}}}],["helper.ts",{"_index":939,"title":{},"body":{"classes/TestHelper.html":{},"coverage.html":{}}}],["helper.ts:114",{"_index":956,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.ts:13",{"_index":953,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.ts:14",{"_index":951,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.ts:15",{"_index":954,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.ts:16",{"_index":948,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.ts:80",{"_index":961,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.ts:84",{"_index":959,"title":{},"body":{"classes/TestHelper.html":{}}}],["here",{"_index":1233,"title":{},"body":{"index.html":{}}}],["http",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["httpmodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["httpmodule.register",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":1240,"title":{},"body":{"index.html":{}}}],["iam",{"_index":436,"title":{},"body":{"controllers/IamController.html":{}}}],["iam.controller",{"_index":481,"title":{},"body":{"modules/IamModule.html":{}}}],["iam.service",{"_index":456,"title":{},"body":{"controllers/IamController.html":{},"modules/IamModule.html":{}}}],["iam/iam.module",{"_index":1063,"title":{},"body":{"modules/UserModule.html":{}}}],["iam/iam.service",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["iam_init",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iam_init_key",{"_index":523,"title":{},"body":{"injectables/IamService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iamcontroller",{"_index":434,"title":{"controllers/IamController.html":{}},"body":{"controllers/IamController.html":{},"modules/IamModule.html":{},"coverage.html":{}}}],["iammodule",{"_index":269,"title":{"modules/IamModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["iamservice",{"_index":455,"title":{"injectables/IamService.html":{}},"body":{"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["iappconfig",{"_index":409,"title":{"interfaces/IAppConfig.html":{}},"body":{"interfaces/IAppConfig.html":{},"coverage.html":{}}}],["id",{"_index":14,"title":{},"body":{"classes/ApiPermission.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"injectables/ApiPermissionService.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"injectables/IamService.html":{},"classes/OperationLog-1.html":{},"classes/PaginationDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session-1.html":{},"classes/TestHelper.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":573,"title":{},"body":{"injectables/IamService.html":{}}}],["implements",{"_index":164,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{}}}],["import",{"_index":45,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"classes/TestHelper.html":{},"modules/UserModule.html":{}}}],["in.dto",{"_index":458,"title":{},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{}}}],["in.dto.ts",{"_index":927,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:10",{"_index":931,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:6",{"_index":929,"title":{},"body":{"classes/SignInDto.html":{}}}],["include",{"_index":175,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"classes/TestHelper.html":{},"injectables/UserService.html":{}}}],["incoming",{"_index":181,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/ApiPermission.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":868,"title":{},"body":{"interfaces/Route.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inherited",{"_index":617,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["init",{"_index":581,"title":{},"body":{"classes/InitUtil.html":{},"classes/TestHelper.html":{}}}],["init(key",{"_index":584,"title":{},"body":{"classes/InitUtil.html":{}}}],["init.constant",{"_index":525,"title":{},"body":{"injectables/IamService.html":{}}}],["init.constant.ts",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initpipe",{"_index":582,"title":{},"body":{"classes/InitUtil.html":{}}}],["initpipe(needkeys",{"_index":588,"title":{},"body":{"classes/InitUtil.html":{}}}],["initsubject",{"_index":597,"title":{},"body":{"classes/InitUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initsubject.asobservable",{"_index":599,"title":{},"body":{"classes/InitUtil.html":{}}}],["initsubject.next([...initsubject.value",{"_index":598,"title":{},"body":{"classes/InitUtil.html":{}}}],["initutil",{"_index":521,"title":{"classes/InitUtil.html":{}},"body":{"injectables/IamService.html":{},"classes/InitUtil.html":{},"coverage.html":{}}}],["initutil.init(iam_init_key",{"_index":530,"title":{},"body":{"injectables/IamService.html":{}}}],["injectable",{"_index":157,"title":{"injectables/ApiPermissionService.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":239,"title":{},"body":{"injectables/ApiPermissionService.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":1203,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1206,"title":{},"body":{"index.html":{}}}],["integration",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["interface",{"_index":408,"title":{"interfaces/IAppConfig.html":{},"interfaces/Route.html":{},"interfaces/ToEntity.html":{}},"body":{"interfaces/IAppConfig.html":{},"interfaces/Route.html":{},"interfaces/ToEntity.html":{},"coverage.html":{}}}],["interfaces",{"_index":410,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/Route.html":{},"interfaces/ToEntity.html":{},"overview.html":{}}}],["invalid",{"_index":184,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/RoleService.html":{}}}],["isarray",{"_index":52,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"classes/Role-1.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/User-1.html":{}}}],["isboolean",{"_index":696,"title":{},"body":{"classes/PaginationRoleDto.html":{},"classes/UpdateApiPermissionDto.html":{}}}],["isemail",{"_index":398,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isemail()@apiproperty({description",{"_index":379,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":928,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isenum",{"_index":399,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum($enums.userstatus",{"_index":406,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":649,"title":{},"body":{"classes/PaginationDto.html":{}}}],["isnotempty",{"_index":932,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isnotsamenameindatabase",{"_index":341,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotsamenameindatabase('permission",{"_index":347,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["isnotsamenameindatabase(entityname",{"_index":1186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnumber",{"_index":650,"title":{},"body":{"classes/PaginationDto.html":{}}}],["isnumber()@apiproperty({description",{"_index":619,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["isnumber({allownan",{"_index":622,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["isoptional",{"_index":334,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/UpdateApiPermissionDto.html":{}}}],["isoptional()@isarray()@isstring({each",{"_index":1015,"title":{},"body":{"classes/UpdateApiPermissionDto.html":{}}}],["isoptional()@isboolean",{"_index":690,"title":{},"body":{"classes/PaginationRoleDto.html":{},"classes/UpdateApiPermissionDto.html":{}}}],["isoptional()@isenum($enums.userstatus)@apiproperty({description",{"_index":394,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isphonenumber('cn')@apiproperty({description",{"_index":389,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isstring()@maxlength(100)@apiproperty({description",{"_index":376,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isstring()@maxlength(12)@apiproperty({description",{"_index":381,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isurl()@apiproperty({description",{"_index":374,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isuuid()@apiproperty({description",{"_index":391,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isphonenumber",{"_index":400,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isphonenumber('cn",{"_index":405,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ispublic",{"_index":15,"title":{},"body":{"classes/ApiPermission.html":{},"injectables/ApiPermissionService.html":{},"classes/UpdateApiPermissionDto.html":{}}}],["isstring",{"_index":335,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateApiPermissionDto.html":{}}}],["isstring()@isnotempty",{"_index":930,"title":{},"body":{"classes/SignInDto.html":{}}}],["isstring()@isnotempty()@maxlength(20)@minlength(8",{"_index":935,"title":{},"body":{"classes/SignUpDto.html":{}}}],["isstring()@isoptional",{"_index":360,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["isstring()@maxlength(18)@minlength(8)@apiproperty({description",{"_index":384,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@maxlength(20)@apiproperty({description",{"_index":322,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["isstring()@maxlength(50)@optional()@apiproperty({description",{"_index":318,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["isurl",{"_index":401,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isuserexist",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["isuuid",{"_index":336,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid('4",{"_index":325,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{}}}],["isuuidsallindatabase",{"_index":338,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isuuidsallindatabase('permissiongroup",{"_index":352,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["isuuidsallindatabase('role",{"_index":351,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["isuuidsallindatabase(entityname",{"_index":1189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":882,"title":{},"body":{"interfaces/Route.html":{}}}],["item.route",{"_index":885,"title":{},"body":{"interfaces/Route.html":{}}}],["item.route.path.startswith('/sapi",{"_index":883,"title":{},"body":{"interfaces/Route.html":{}}}],["items",{"_index":329,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["join",{"_index":1229,"title":{},"body":{"index.html":{}}}],["json.stringify(data",{"_index":200,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["k",{"_index":631,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["kamil",{"_index":1237,"title":{},"body":{"index.html":{}}}],["key",{"_index":586,"title":{},"body":{"classes/InitUtil.html":{},"classes/PaginationDto.html":{}}}],["keyof",{"_index":659,"title":{},"body":{"classes/PaginationDto.html":{}}}],["keys.includes(key",{"_index":602,"title":{},"body":{"classes/InitUtil.html":{}}}],["layer.route",{"_index":879,"title":{},"body":{"interfaces/Route.html":{}}}],["layer.route?.path",{"_index":880,"title":{},"body":{"interfaces/Route.html":{}}}],["layer.route?.stack[0].method",{"_index":881,"title":{},"body":{"interfaces/Route.html":{}}}],["legend",{"_index":227,"title":{},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":1243,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1219,"title":{},"body":{"index.html":{}}}],["line",{"_index":567,"title":{},"body":{"injectables/IamService.html":{}}}],["literal",{"_index":958,"title":{},"body":{"classes/TestHelper.html":{}}}],["load",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["localhost",{"_index":432,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["logger",{"_index":158,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"interfaces/Route.html":{}}}],["logger.log",{"_index":180,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["logger.log('routes",{"_index":914,"title":{},"body":{"interfaces/Route.html":{}}}],["logger.log(`created",{"_index":912,"title":{},"body":{"interfaces/Route.html":{}}}],["logger.log(`deleted",{"_index":907,"title":{},"body":{"interfaces/Route.html":{}}}],["logger.log(`incoming",{"_index":198,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["logger.log(deletedroutes",{"_index":910,"title":{},"body":{"interfaces/Route.html":{}}}],["logger.log(newroutes",{"_index":913,"title":{},"body":{"interfaces/Route.html":{}}}],["lt",{"_index":655,"title":{},"body":{"classes/PaginationDto.html":{},"miscellaneous/typealiases.html":{}}}],["lte",{"_index":656,"title":{},"body":{"classes/PaginationDto.html":{},"miscellaneous/typealiases.html":{}}}],["main",{"_index":966,"title":{},"body":{"classes/TestHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manager",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["map((item",{"_index":884,"title":{},"body":{"interfaces/Route.html":{}}}],["map((layer",{"_index":878,"title":{},"body":{"interfaces/Route.html":{}}}],["mapper",{"_index":669,"title":{},"body":{"classes/PaginationDto.html":{}}}],["matching",{"_index":54,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":651,"title":{},"body":{"classes/PaginationDto.html":{}}}],["max(100",{"_index":663,"title":{},"body":{"classes/PaginationDto.html":{}}}],["maxdecimalplaces",{"_index":624,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["maxlength",{"_index":319,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(100",{"_index":407,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(12",{"_index":402,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(18",{"_index":403,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(20",{"_index":345,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(50",{"_index":348,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["message",{"_index":864,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["metadata",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":16,"title":{},"body":{"classes/ApiPermission.html":{},"guards/ApiPermissionGuard.html":{},"interfaces/Route.html":{}}}],["method.tolowercase",{"_index":202,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["methods",{"_index":86,"title":{},"body":{"controllers/ApiPermissionController.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["min",{"_index":652,"title":{},"body":{"classes/PaginationDto.html":{}}}],["min(5",{"_index":664,"title":{},"body":{"classes/PaginationDto.html":{}}}],["minlength",{"_index":386,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(8",{"_index":404,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":1178,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1218,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mockproviders",{"_index":949,"title":{},"body":{"classes/TestHelper.html":{}}}],["mode",{"_index":1210,"title":{},"body":{"index.html":{}}}],["module",{"_index":223,"title":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["moduleref",{"_index":943,"title":{},"body":{"classes/TestHelper.html":{}}}],["modulerefbake",{"_index":973,"title":{},"body":{"classes/TestHelper.html":{}}}],["modulerefbake.compile",{"_index":981,"title":{},"body":{"classes/TestHelper.html":{}}}],["modules",{"_index":225,"title":{"modules.html":{}},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/api",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/iam/iam.module",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/permission/permission.module",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/role/role.module",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1232,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1238,"title":{},"body":{"index.html":{}}}],["name",{"_index":95,"title":{},"body":{"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name.pipe",{"_index":344,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["name.pipe.ts",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":73,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["needkeys",{"_index":590,"title":{},"body":{"classes/InitUtil.html":{}}}],["needkeys.every((key",{"_index":601,"title":{},"body":{"classes/InitUtil.html":{}}}],["nest",{"_index":1167,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestexpressapplication",{"_index":950,"title":{},"body":{"classes/TestHelper.html":{},"miscellaneous/functions.html":{}}}],["nestframework",{"_index":1242,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":163,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"interfaces/IAppConfig.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"interfaces/ToEntity.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":110,"title":{},"body":{"controllers/ApiPermissionController.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/TestHelper.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IAppConfig.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"classes/TestHelper.html":{},"dependencies.html":{}}}],["nestjs/devtools",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":965,"title":{},"body":{"classes/TestHelper.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":50,"title":{},"body":{"classes/ApiPermission.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"controllers/IamController.html":{},"classes/OperationLog-1.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"classes/Session-1.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":963,"title":{},"body":{"classes/TestHelper.html":{}}}],["nestjs/websockets",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":174,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"classes/TestHelper.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newroutes",{"_index":895,"title":{},"body":{"interfaces/Route.html":{}}}],["newroutes.map((route",{"_index":904,"title":{},"body":{"interfaces/Route.html":{}}}],["newuser",{"_index":558,"title":{},"body":{"injectables/IamService.html":{},"injectables/UserService.html":{}}}],["newuser.password",{"_index":563,"title":{},"body":{"injectables/IamService.html":{},"injectables/UserService.html":{}}}],["next",{"_index":566,"title":{},"body":{"injectables/IamService.html":{}}}],["node.js",{"_index":1194,"title":{},"body":{"index.html":{}}}],["nopassusers",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{}}}],["null",{"_index":169,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"classes/PaginationDto.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":418,"title":{},"body":{"interfaces/IAppConfig.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["number(value",{"_index":661,"title":{},"body":{"classes/PaginationDto.html":{}}}],["omitbyarray",{"_index":1259,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["omittype",{"_index":683,"title":{},"body":{"classes/PaginationPermissionDto.html":{}}}],["onapplicationbootstrap",{"_index":490,"title":{},"body":{"injectables/IamService.html":{}}}],["open",{"_index":1220,"title":{},"body":{"index.html":{}}}],["operation_log",{"_index":47,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["operationlog",{"_index":39,"title":{"classes/OperationLog.html":{},"classes/OperationLog-1.html":{}},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationlogs",{"_index":17,"title":{},"body":{"classes/ApiPermission.html":{}}}],["optional",{"_index":12,"title":{},"body":{"classes/ApiPermission.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/Session-1.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":236,"title":{},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overrideprovider(provider.overrideprovider",{"_index":978,"title":{},"body":{"classes/TestHelper.html":{}}}],["overview",{"_index":1247,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.id",{"_index":221,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["package",{"_index":1136,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":256,"title":{},"body":{"injectables/ApiPermissionService.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["pagesize",{"_index":258,"title":{},"body":{"injectables/ApiPermissionService.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["paginate",{"_index":725,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["paginate.buildwherewithnodelete",{"_index":769,"title":{},"body":{"injectables/PermissionService.html":{}}}],["paginate.page",{"_index":771,"title":{},"body":{"injectables/PermissionService.html":{}}}],["paginate.pagesize",{"_index":772,"title":{},"body":{"injectables/PermissionService.html":{}}}],["paginate.toskipandtake",{"_index":768,"title":{},"body":{"injectables/PermissionService.html":{}}}],["paginationapipermissiondto",{"_index":91,"title":{"classes/PaginationApiPermissionDto.html":{}},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"classes/PaginationApiPermissionDto.html":{},"coverage.html":{}}}],["paginationdto",{"_index":96,"title":{"classes/PaginationDto.html":{}},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["paginationdto.buildwherewithnodelete",{"_index":248,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["paginationdto.page",{"_index":257,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["paginationdto.pagesize",{"_index":259,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["paginationdto.toskipandtake",{"_index":247,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["paginationdto:11",{"_index":694,"title":{},"body":{"classes/PaginationRoleDto.html":{}}}],["paginationdto:111",{"_index":634,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["paginationdto:18",{"_index":704,"title":{},"body":{"classes/PaginationUserDto.html":{}}}],["paginationdto:20",{"_index":682,"title":{},"body":{"classes/PaginationPermissionDto.html":{}}}],["paginationdto:23",{"_index":621,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["paginationdto:37",{"_index":628,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["paginationdto:4",{"_index":618,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{}}}],["paginationdto:41",{"_index":635,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["paginationdto:48",{"_index":630,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["paginationpermissiondto",{"_index":678,"title":{"classes/PaginationPermissionDto.html":{}},"body":{"classes/PaginationPermissionDto.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"coverage.html":{}}}],["paginationroledto",{"_index":688,"title":{"classes/PaginationRoleDto.html":{}},"body":{"classes/PaginationRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["paginationuserdto",{"_index":700,"title":{"classes/PaginationUserDto.html":{}},"body":{"classes/PaginationUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["param",{"_index":109,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":128,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/PermissionController.html":{}}}],["parameters",{"_index":94,"title":{},"body":{"controllers/ApiPermissionController.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":195,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["parseint(process.env.port",{"_index":424,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["parser",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":680,"title":{},"body":{"classes/PaginationPermissionDto.html":{}}}],["partialtype",{"_index":684,"title":{},"body":{"classes/PaginationPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1019,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createroledto",{"_index":1021,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createuserdto",{"_index":1024,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(omittype(createpermissiondto",{"_index":687,"title":{},"body":{"classes/PaginationPermissionDto.html":{}}}],["pass",{"_index":999,"title":{},"body":{"classes/TestHelper.html":{}}}],["password",{"_index":370,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/IamService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":108,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":127,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":103,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["path",{"_index":18,"title":{},"body":{"classes/ApiPermission.html":{},"guards/ApiPermissionGuard.html":{},"interfaces/Route.html":{}}}],["permission",{"_index":64,"title":{"classes/Permission.html":{},"classes/Permission-1.html":{}},"body":{"classes/ApiPermission-1.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"injectables/RoleService.html":{},"classes/Session.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.controller",{"_index":238,"title":{},"body":{"modules/ApiPermissionModule.html":{},"modules/PermissionModule.html":{}}}],["permission.controller.ts",{"_index":83,"title":{},"body":{"controllers/ApiPermissionController.html":{},"coverage.html":{}}}],["permission.controller.ts:15",{"_index":93,"title":{},"body":{"controllers/ApiPermissionController.html":{}}}],["permission.controller.ts:21",{"_index":100,"title":{},"body":{"controllers/ApiPermissionController.html":{}}}],["permission.controller.ts:27",{"_index":104,"title":{},"body":{"controllers/ApiPermissionController.html":{}}}],["permission.dto",{"_index":106,"title":{},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"classes/PaginationPermissionDto.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":317,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:12",{"_index":1016,"title":{},"body":{"classes/UpdateApiPermissionDto.html":{}}}],["permission.dto.ts:15",{"_index":324,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:16",{"_index":1014,"title":{},"body":{"classes/UpdateApiPermissionDto.html":{}}}],["permission.dto.ts:24",{"_index":321,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:37",{"_index":333,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:50",{"_index":331,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:7",{"_index":1017,"title":{},"body":{"classes/UpdateApiPermissionDto.html":{}}}],["permission.guard",{"_index":484,"title":{},"body":{"modules/IamModule.html":{}}}],["permission.guard.ts",{"_index":144,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"coverage.html":{}}}],["permission.guard.ts:13",{"_index":150,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["permission.guard.ts:15",{"_index":154,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["permission.module",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["permission.module.ts",{"_index":237,"title":{},"body":{"modules/ApiPermissionModule.html":{}}}],["permission.service",{"_index":112,"title":{},"body":{"controllers/ApiPermissionController.html":{},"modules/ApiPermissionModule.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{}}}],["permission.service.ts",{"_index":240,"title":{},"body":{"injectables/ApiPermissionService.html":{},"coverage.html":{}}}],["permission.service.ts:41",{"_index":244,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["permission.service.ts:52",{"_index":245,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["permission.service.ts:7",{"_index":241,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["permission.service.ts:9",{"_index":242,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["permission/api",{"_index":82,"title":{},"body":{"controllers/ApiPermissionController.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["permission/dto/pagination",{"_index":613,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"coverage.html":{}}}],["permission/dto/update",{"_index":1013,"title":{},"body":{"classes/UpdateApiPermissionDto.html":{},"coverage.html":{}}}],["permission_group",{"_index":68,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["permissioncontroller",{"_index":717,"title":{"controllers/PermissionController.html":{}},"body":{"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"coverage.html":{}}}],["permissiongroup",{"_index":66,"title":{"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{}},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissiongroupids",{"_index":252,"title":{},"body":{"injectables/ApiPermissionService.html":{},"classes/CreatePermissionDto.html":{},"injectables/PermissionService.html":{},"classes/UpdateApiPermissionDto.html":{}}}],["permissiongroupids.map((id",{"_index":265,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["permissiongroups",{"_index":253,"title":{},"body":{"injectables/ApiPermissionService.html":{},"classes/Permission-1.html":{},"injectables/PermissionService.html":{}}}],["permissionids",{"_index":357,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["permissionmodule",{"_index":270,"title":{"modules/PermissionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionModule.html":{},"modules.html":{},"overview.html":{}}}],["permissions",{"_index":132,"title":{},"body":{"classes/ApiPermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Role-1.html":{},"injectables/RoleService.html":{}}}],["permissions.length",{"_index":845,"title":{},"body":{"injectables/RoleService.html":{}}}],["permissionservice",{"_index":732,"title":{"injectables/PermissionService.html":{}},"body":{"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":371,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/Profile-1.html":{},"injectables/UserService.html":{}}}],["pick",{"_index":692,"title":{},"body":{"classes/PaginationRoleDto.html":{},"miscellaneous/typealiases.html":{}}}],["pickbyarray",{"_index":702,"title":{},"body":{"classes/PaginationUserDto.html":{},"miscellaneous/typealiases.html":{}}}],["picktype",{"_index":695,"title":{},"body":{"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["picktype(role",{"_index":699,"title":{},"body":{"classes/PaginationRoleDto.html":{}}}],["picktype(user",{"_index":707,"title":{},"body":{"classes/PaginationUserDto.html":{}}}],["pipe",{"_index":595,"title":{},"body":{"classes/InitUtil.html":{}}}],["please",{"_index":1230,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":1205,"title":{},"body":{"index.html":{}}}],["port",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IAppConfig.html":{}}}],["post",{"_index":454,"title":{},"body":{"controllers/IamController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["post('signin",{"_index":468,"title":{},"body":{"controllers/IamController.html":{}}}],["post('signin')@apioperation({summary",{"_index":443,"title":{},"body":{"controllers/IamController.html":{}}}],["post('signout",{"_index":474,"title":{},"body":{"controllers/IamController.html":{}}}],["post('signout')@apioperation({summary",{"_index":448,"title":{},"body":{"controllers/IamController.html":{}}}],["post('signup",{"_index":471,"title":{},"body":{"controllers/IamController.html":{}}}],["post('signup')@apioperation({summary",{"_index":452,"title":{},"body":{"controllers/IamController.html":{}}}],["post()@apioperation({summary",{"_index":721,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["prefix",{"_index":84,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/IamController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["preset_role",{"_index":518,"title":{},"body":{"injectables/IamService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma",{"_index":151,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"interfaces/ToEntity.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma.apipermission.createmany",{"_index":903,"title":{},"body":{"interfaces/Route.html":{}}}],["prisma.apipermission.deletemany",{"_index":899,"title":{},"body":{"interfaces/Route.html":{}}}],["prisma.apipermission.findmany",{"_index":887,"title":{},"body":{"interfaces/Route.html":{}}}],["prisma/.../seed.ts",{"_index":1183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prisma/client",{"_index":160,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"classes/CreateUserDto.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/Role-1.html":{},"classes/TestHelper.html":{},"classes/User-1.html":{},"dependencies.html":{}}}],["prisma/seed.ts",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaclient",{"_index":944,"title":{},"body":{"classes/TestHelper.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prismamodel",{"_index":74,"title":{},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{}}}],["prismamodule",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["prismamodule.forroot",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaservice",{"_index":149,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"interfaces/ToEntity.html":{},"injectables/UserService.html":{}}}],["private",{"_index":942,"title":{},"body":{"classes/TestHelper.html":{},"injectables/UserService.html":{}}}],["process.env.app_description",{"_index":428,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["process.env.app_host",{"_index":431,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["process.env.app_name",{"_index":427,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["process.env.app_version",{"_index":429,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["process.env.node_env",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IAppConfig.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["profile",{"_index":59,"title":{"classes/Profile.html":{},"classes/Profile-1.html":{}},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":1193,"title":{},"body":{"index.html":{}}}],["project",{"_index":1221,"title":{},"body":{"index.html":{}}}],["promise",{"_index":156,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"interfaces/Route.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/User-1.html":{},"properties.html":{}}}],["props",{"_index":632,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["props.hasownproperty(key",{"_index":667,"title":{},"body":{"classes/PaginationDto.html":{}}}],["props[key",{"_index":671,"title":{},"body":{"classes/PaginationDto.html":{}}}],["provide",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"classes/TestHelper.html":{}}}],["provider",{"_index":977,"title":{},"body":{"classes/TestHelper.html":{}}}],["providers",{"_index":230,"title":{},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"classes/TestHelper.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":940,"title":{},"body":{"classes/TestHelper.html":{}}}],["query",{"_index":193,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["randombytes",{"_index":516,"title":{},"body":{"injectables/IamService.html":{},"classes/TestHelper.html":{}}}],["randombytes(32).tostring('hex",{"_index":539,"title":{},"body":{"injectables/IamService.html":{},"classes/TestHelper.html":{}}}],["read",{"_index":1231,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":119,"title":{},"body":{"controllers/ApiPermissionController.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"controllers/IamController.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["record",{"_index":185,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["reflect",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["registeras",{"_index":419,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["registeras(app_config_token",{"_index":423,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["remove",{"_index":719,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":741,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":727,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["repository",{"_index":1202,"title":{},"body":{"index.html":{}}}],["req",{"_index":166,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["req.headers['authorization",{"_index":168,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["req.headers['user",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user",{"_index":177,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["req.user.email",{"_index":183,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["request",{"_index":161,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"classes/TestHelper.html":{}}}],["request(this.app.gethttpserver",{"_index":998,"title":{},"body":{"classes/TestHelper.html":{}}}],["request.body",{"_index":192,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["request.method",{"_index":188,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["request.params",{"_index":196,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["request.query",{"_index":194,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["request.route.path",{"_index":187,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["request.url",{"_index":190,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["request['user",{"_index":186,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["res",{"_index":1004,"title":{},"body":{"classes/TestHelper.html":{}}}],["res.id",{"_index":1007,"title":{},"body":{"classes/TestHelper.html":{}}}],["res.token",{"_index":1008,"title":{},"body":{"classes/TestHelper.html":{}}}],["reset",{"_index":235,"title":{},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["results",{"_index":53,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":122,"title":{},"body":{"controllers/ApiPermissionController.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/PaginationDto.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/TestHelper.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":97,"title":{},"body":{"controllers/ApiPermissionController.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":42,"title":{"classes/Role.html":{},"classes/Role-1.html":{}},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"classes/OperationLog.html":{},"classes/PaginationRoleDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/Session.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.constant",{"_index":520,"title":{},"body":{"injectables/IamService.html":{}}}],["role.constant.ts",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.controller",{"_index":831,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.dto",{"_index":820,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":355,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/PaginationRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":363,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:15",{"_index":691,"title":{},"body":{"classes/PaginationRoleDto.html":{}}}],["role.dto.ts:17",{"_index":359,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:5",{"_index":362,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":361,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.service",{"_index":819,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["role['status",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolecontroller",{"_index":809,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roleid",{"_index":372,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["roleids",{"_index":250,"title":{},"body":{"injectables/ApiPermissionService.html":{},"classes/CreatePermissionDto.html":{},"injectables/PermissionService.html":{},"classes/UpdateApiPermissionDto.html":{}}}],["roleids.map((id",{"_index":264,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["rolemodule",{"_index":271,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules.html":{},"overview.html":{}}}],["roles",{"_index":19,"title":{},"body":{"classes/ApiPermission.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"classes/Permission-1.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["roleservice",{"_index":818,"title":{"injectables/RoleService.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["rolestatus",{"_index":802,"title":{},"body":{"classes/Role-1.html":{}}}],["rolestatus.active",{"_index":803,"title":{},"body":{"classes/Role-1.html":{}}}],["route",{"_index":865,"title":{"interfaces/Route.html":{}},"body":{"interfaces/Route.html":{},"classes/TestHelper.html":{},"coverage.html":{}}}],["route.id",{"_index":901,"title":{},"body":{"interfaces/Route.html":{}}}],["route.method",{"_index":905,"title":{},"body":{"interfaces/Route.html":{}}}],["route.path",{"_index":890,"title":{},"body":{"interfaces/Route.html":{}}}],["route.path).includes(route.path",{"_index":894,"title":{},"body":{"interfaces/Route.html":{}}}],["route.ts",{"_index":867,"title":{},"body":{"interfaces/Route.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["router",{"_index":874,"title":{},"body":{"interfaces/Route.html":{}}}],["router.stack",{"_index":877,"title":{},"body":{"interfaces/Route.html":{}}}],["routes",{"_index":908,"title":{},"body":{"interfaces/Route.html":{}}}],["run",{"_index":1207,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":596,"title":{},"body":{"classes/InitUtil.html":{},"dependencies.html":{}}}],["s",{"_index":577,"title":{},"body":{"injectables/IamService.html":{}}}],["salt",{"_index":531,"title":{},"body":{"injectables/IamService.html":{}}}],["same",{"_index":343,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["satisfies",{"_index":433,"title":{},"body":{"interfaces/IAppConfig.html":{}}}],["scalable",{"_index":1198,"title":{},"body":{"index.html":{}}}],["seed",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["seed(prisma",{"_index":1190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sendverificationemail",{"_index":491,"title":{},"body":{"injectables/IamService.html":{}}}],["sendverificationemail(_user",{"_index":505,"title":{},"body":{"injectables/IamService.html":{}}}],["server",{"_index":871,"title":{},"body":{"interfaces/Route.html":{},"classes/TestHelper.html":{},"index.html":{}}}],["server._events.request._router",{"_index":875,"title":{},"body":{"interfaces/Route.html":{}}}],["session",{"_index":61,"title":{"classes/Session.html":{},"classes/Session-1.html":{}},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"classes/OperationLog.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Role.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["session.user",{"_index":178,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["sessions",{"_index":574,"title":{},"body":{"injectables/IamService.html":{}}}],["sessions.map((s",{"_index":576,"title":{},"body":{"injectables/IamService.html":{}}}],["set",{"_index":778,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["side",{"_index":1199,"title":{},"body":{"index.html":{}}}],["signin",{"_index":437,"title":{},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{}}}],["signin(@body",{"_index":469,"title":{},"body":{"controllers/IamController.html":{}}}],["signin(dto",{"_index":440,"title":{},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{}}}],["signindto",{"_index":441,"title":{"classes/SignInDto.html":{}},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signout",{"_index":438,"title":{},"body":{"controllers/IamController.html":{}}}],["signout(@getuser",{"_index":475,"title":{},"body":{"controllers/IamController.html":{}}}],["signout(user",{"_index":447,"title":{},"body":{"controllers/IamController.html":{}}}],["signoutbytoken",{"_index":492,"title":{},"body":{"injectables/IamService.html":{}}}],["signoutbytoken(user",{"_index":508,"title":{},"body":{"injectables/IamService.html":{}}}],["signup",{"_index":439,"title":{},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{}}}],["signup(@body",{"_index":472,"title":{},"body":{"controllers/IamController.html":{}}}],["signup(dto",{"_index":450,"title":{},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{}}}],["signupdto",{"_index":451,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["sin",{"_index":251,"title":{},"body":{"injectables/ApiPermissionService.html":{},"classes/PaginationDto.html":{},"injectables/PermissionService.html":{},"miscellaneous/typealiases.html":{}}}],["skip",{"_index":636,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["socket.io",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"modules/IamModule.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":1224,"title":{},"body":{"index.html":{}}}],["src/.../all",{"_index":1182,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../iam",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../init.ts",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../not",{"_index":1181,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../omit",{"_index":1257,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../pagination.dto.ts",{"_index":1260,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../preset",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sync",{"_index":1184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/_gen/prisma",{"_index":6,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup.html":{},"classes/ApiPermissionGroup-1.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/Permission.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/commons/dtos/pagination.dto.ts",{"_index":639,"title":{},"body":{"classes/PaginationDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/commons/dtos/pagination.dto.ts:111",{"_index":646,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/commons/dtos/pagination.dto.ts:23",{"_index":643,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/commons/dtos/pagination.dto.ts:37",{"_index":644,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/commons/dtos/pagination.dto.ts:39",{"_index":642,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/commons/dtos/pagination.dto.ts:41",{"_index":647,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/commons/dtos/pagination.dto.ts:48",{"_index":645,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/commons/pipes/all",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/commons/pipes/not",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/configs/app",{"_index":411,"title":{},"body":{"interfaces/IAppConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helpers/test",{"_index":938,"title":{},"body":{"classes/TestHelper.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/api",{"_index":81,"title":{},"body":{"controllers/ApiPermissionController.html":{},"modules/ApiPermissionModule.html":{},"injectables/ApiPermissionService.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/UpdateApiPermissionDto.html":{},"coverage.html":{}}}],["src/modules/iam/constants/iam",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/iam/constants/preset",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/iam/decorators/get",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/iam/dtos/sign",{"_index":926,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/modules/iam/guards/api",{"_index":143,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"coverage.html":{}}}],["src/modules/iam/iam.controller.ts",{"_index":435,"title":{},"body":{"controllers/IamController.html":{},"coverage.html":{}}}],["src/modules/iam/iam.controller.ts:18",{"_index":444,"title":{},"body":{"controllers/IamController.html":{}}}],["src/modules/iam/iam.controller.ts:24",{"_index":453,"title":{},"body":{"controllers/IamController.html":{}}}],["src/modules/iam/iam.controller.ts:30",{"_index":449,"title":{},"body":{"controllers/IamController.html":{}}}],["src/modules/iam/iam.module.ts",{"_index":480,"title":{},"body":{"modules/IamModule.html":{}}}],["src/modules/iam/iam.service.ts",{"_index":485,"title":{},"body":{"injectables/IamService.html":{},"coverage.html":{}}}],["src/modules/iam/iam.service.ts:117",{"_index":506,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/iam/iam.service.ts:123",{"_index":512,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/iam/iam.service.ts:128",{"_index":501,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/iam/iam.service.ts:140",{"_index":509,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/iam/iam.service.ts:17",{"_index":494,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/iam/iam.service.ts:19",{"_index":504,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/iam/iam.service.ts:29",{"_index":503,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/iam/iam.service.ts:34",{"_index":496,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/iam/iam.service.ts:38",{"_index":499,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/iam/iam.service.ts:74",{"_index":507,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/iam/iam.service.ts:89",{"_index":510,"title":{},"body":{"injectables/IamService.html":{}}}],["src/modules/permission/dto/create",{"_index":316,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/modules/permission/dto/pagination",{"_index":679,"title":{},"body":{"classes/PaginationPermissionDto.html":{},"coverage.html":{}}}],["src/modules/permission/dto/update",{"_index":1018,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/modules/permission/permission.controller.ts",{"_index":718,"title":{},"body":{"controllers/PermissionController.html":{},"coverage.html":{}}}],["src/modules/permission/permission.controller.ts:23",{"_index":722,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/modules/permission/permission.controller.ts:29",{"_index":724,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/modules/permission/permission.controller.ts:35",{"_index":726,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/modules/permission/permission.controller.ts:41",{"_index":731,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/modules/permission/permission.controller.ts:50",{"_index":729,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/modules/permission/permission.module.ts",{"_index":753,"title":{},"body":{"modules/PermissionModule.html":{}}}],["src/modules/permission/permission.service.ts",{"_index":754,"title":{},"body":{"injectables/PermissionService.html":{},"coverage.html":{}}}],["src/modules/permission/permission.service.ts:11",{"_index":756,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/modules/permission/permission.service.ts:112",{"_index":759,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/modules/permission/permission.service.ts:33",{"_index":757,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/modules/permission/permission.service.ts:65",{"_index":758,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/modules/permission/permission.service.ts:79",{"_index":760,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/modules/permission/permission.service.ts:9",{"_index":755,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/modules/role/dto/create",{"_index":354,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/modules/role/dto/pagination",{"_index":689,"title":{},"body":{"classes/PaginationRoleDto.html":{},"coverage.html":{}}}],["src/modules/role/dto/update",{"_index":1020,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/modules/role/role.controller.ts",{"_index":810,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/modules/role/role.controller.ts:23",{"_index":812,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:29",{"_index":813,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:35",{"_index":814,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:41",{"_index":817,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:47",{"_index":815,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.module.ts",{"_index":830,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/modules/role/role.service.ts",{"_index":832,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/modules/role/role.service.ts:10",{"_index":834,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:112",{"_index":839,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:159",{"_index":838,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:56",{"_index":836,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:8",{"_index":833,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:96",{"_index":837,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/user/dto/create",{"_index":365,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/pagination",{"_index":701,"title":{},"body":{"classes/PaginationUserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/update",{"_index":1023,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts",{"_index":1043,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:23",{"_index":1045,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:29",{"_index":1046,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:35",{"_index":1047,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:41",{"_index":1049,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:47",{"_index":1048,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":1061,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":1064,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:107",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:122",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:14",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:161",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:47",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:9",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/init.ts",{"_index":579,"title":{},"body":{"classes/InitUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/init.ts:12",{"_index":589,"title":{},"body":{"classes/InitUtil.html":{}}}],["src/utils/init.ts:6",{"_index":585,"title":{},"body":{"classes/InitUtil.html":{}}}],["src/utils/init.ts:9",{"_index":592,"title":{},"body":{"classes/InitUtil.html":{}}}],["src/utils/omit",{"_index":1261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/utils/sync",{"_index":866,"title":{},"body":{"interfaces/Route.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/toentity.interface.ts",{"_index":1010,"title":{},"body":{"interfaces/ToEntity.html":{},"coverage.html":{}}}],["src/utils/toentity.interface.ts:4",{"_index":1012,"title":{},"body":{"interfaces/ToEntity.html":{}}}],["start",{"_index":1208,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1211,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1212,"title":{},"body":{"index.html":{}}}],["started",{"_index":1192,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1201,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":580,"title":{},"body":{"classes/InitUtil.html":{}}}],["status",{"_index":373,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/IamService.html":{},"classes/PaginationUserDto.html":{},"classes/Role-1.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["stay",{"_index":1234,"title":{},"body":{"index.html":{}}}],["str",{"_index":497,"title":{},"body":{"injectables/IamService.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/ApiPermission.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"injectables/ApiPermissionService.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog-1.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":197,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["summary",{"_index":120,"title":{},"body":{"controllers/ApiPermissionController.html":{},"controllers/IamController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["supertest",{"_index":968,"title":{},"body":{"classes/TestHelper.html":{}}}],["support",{"_index":1225,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1245,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":672,"title":{},"body":{"classes/PaginationDto.html":{}}}],["synced",{"_index":915,"title":{},"body":{"interfaces/Route.html":{}}}],["syncroute",{"_index":909,"title":{},"body":{"interfaces/Route.html":{},"classes/TestHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["syncroute(app",{"_index":870,"title":{},"body":{"interfaces/Route.html":{},"miscellaneous/functions.html":{}}}],["syncroute(this.app",{"_index":986,"title":{},"body":{"classes/TestHelper.html":{}}}],["t",{"_index":641,"title":{},"body":{"classes/PaginationDto.html":{},"interfaces/ToEntity.html":{}}}],["table",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":637,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["test",{"_index":962,"title":{},"body":{"classes/TestHelper.html":{},"index.html":{}}}],["test.createtestingmodule",{"_index":974,"title":{},"body":{"classes/TestHelper.html":{}}}],["test:covsupport",{"_index":1217,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1216,"title":{},"body":{"index.html":{}}}],["testhelper",{"_index":937,"title":{"classes/TestHelper.html":{}},"body":{"classes/TestHelper.html":{},"coverage.html":{}}}],["testingmodule",{"_index":952,"title":{},"body":{"classes/TestHelper.html":{}}}],["tests",{"_index":1214,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1223,"title":{},"body":{"index.html":{}}}],["this.apipermissionservice.findall(paginationdto",{"_index":123,"title":{},"body":{"controllers/ApiPermissionController.html":{}}}],["this.apipermissionservice.findone(id",{"_index":126,"title":{},"body":{"controllers/ApiPermissionController.html":{}}}],["this.apipermissionservice.update(id",{"_index":129,"title":{},"body":{"controllers/ApiPermissionController.html":{}}}],["this.app",{"_index":983,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.app.close",{"_index":995,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.buildwhere(props",{"_index":677,"title":{},"body":{"classes/PaginationDto.html":{}}}],["this.cleanupcallbacks",{"_index":993,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.cleanupcallbacks.push(async",{"_index":1001,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.cleanupcallbacks.reverse",{"_index":992,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.compare(dto.password",{"_index":551,"title":{},"body":{"injectables/IamService.html":{}}}],["this.filter[key",{"_index":668,"title":{},"body":{"classes/PaginationDto.html":{}}}],["this.gensession(user",{"_index":554,"title":{},"body":{"injectables/IamService.html":{}}}],["this.hash(dto.password",{"_index":557,"title":{},"body":{"injectables/IamService.html":{}}}],["this.iamservice.hash(createuserdto.password",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["this.iamservice.hash(updateuserdto.password",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["this.iamservice.signin(dto",{"_index":470,"title":{},"body":{"controllers/IamController.html":{}}}],["this.iamservice.signoutbytoken(user",{"_index":476,"title":{},"body":{"controllers/IamController.html":{}}}],["this.iamservice.signup(dto",{"_index":473,"title":{},"body":{"controllers/IamController.html":{}}}],["this.moduleref",{"_index":980,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.moduleref.close",{"_index":997,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.page",{"_index":665,"title":{},"body":{"classes/PaginationDto.html":{}}}],["this.pagesize",{"_index":666,"title":{},"body":{"classes/PaginationDto.html":{}}}],["this.permissionservice.create(createpermissiondto",{"_index":736,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.findall(paginate",{"_index":737,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.findone(id",{"_index":738,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.remove(id",{"_index":742,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.update(id",{"_index":739,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.prisma.apipermission.count",{"_index":255,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["this.prisma.apipermission.findfirstorthrow",{"_index":201,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["this.prisma.apipermission.findmany",{"_index":246,"title":{},"body":{"injectables/ApiPermissionService.html":{},"injectables/RoleService.html":{}}}],["this.prisma.apipermission.findunique",{"_index":260,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["this.prisma.apipermission.update",{"_index":261,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["this.prisma.operationlog.create",{"_index":213,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["this.prisma.permission.count",{"_index":770,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.prisma.permission.create",{"_index":762,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.prisma.permission.findmany",{"_index":767,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["this.prisma.permission.findunique",{"_index":773,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.prisma.permission.update",{"_index":774,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.prisma.role.count",{"_index":527,"title":{},"body":{"injectables/IamService.html":{},"injectables/RoleService.html":{}}}],["this.prisma.role.create",{"_index":848,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.prisma.role.createmany",{"_index":529,"title":{},"body":{"injectables/IamService.html":{}}}],["this.prisma.role.findmany",{"_index":853,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.prisma.role.findunique",{"_index":855,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.prisma.role.update",{"_index":861,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.prisma.session.create",{"_index":540,"title":{},"body":{"injectables/IamService.html":{}}}],["this.prisma.session.delete",{"_index":537,"title":{},"body":{"injectables/IamService.html":{}}}],["this.prisma.session.deletemany",{"_index":578,"title":{},"body":{"injectables/IamService.html":{}}}],["this.prisma.session.findfirst",{"_index":171,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{}}}],["this.prisma.session.findmany",{"_index":575,"title":{},"body":{"injectables/IamService.html":{}}}],["this.prisma.user.count",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.create",{"_index":559,"title":{},"body":{"injectables/IamService.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.findfirst",{"_index":548,"title":{},"body":{"injectables/IamService.html":{}}}],["this.prisma.user.findmany",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prismaclient",{"_index":971,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.prismaclient.$disconnect",{"_index":996,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.prismaclient.session.create",{"_index":1005,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.prismaclient.session.delete",{"_index":1006,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.prismaclient.user.create",{"_index":1000,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.prismaclient.user.delete",{"_index":1002,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.prismaclient.user.findfirst",{"_index":1003,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.roleservice.create(createroledto",{"_index":822,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findall(paginationdto",{"_index":823,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findone(id",{"_index":824,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.remove(id",{"_index":827,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.update(id",{"_index":826,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.userservice.create(createuserdto",{"_index":1053,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall(paginationdto",{"_index":1054,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":1055,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":1057,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":1056,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":204,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["todo",{"_index":560,"title":{},"body":{"injectables/IamService.html":{}}}],["toentity",{"_index":1009,"title":{"interfaces/ToEntity.html":{}},"body":{"interfaces/ToEntity.html":{},"coverage.html":{}}}],["toentity(prisma",{"_index":1011,"title":{},"body":{"interfaces/ToEntity.html":{}}}],["token",{"_index":167,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/Session-1.html":{},"classes/TestHelper.html":{}}}],["token.decorator",{"_index":464,"title":{},"body":{"controllers/IamController.html":{}}}],["token.decorator.ts",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["toskipandtake",{"_index":616,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["total",{"_index":254,"title":{},"body":{"injectables/ApiPermissionService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":1235,"title":{},"body":{"index.html":{}}}],["transform",{"_index":620,"title":{},"body":{"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/TestHelper.html":{}}}],["transformer",{"_index":648,"title":{},"body":{"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"dependencies.html":{}}}],["true",{"_index":26,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"modules/AppModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Role-1.html":{},"injectables/RoleService.html":{},"classes/TestHelper.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["true})@apiproperty({description",{"_index":327,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["true})@isoptional",{"_index":358,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["try",{"_index":985,"title":{},"body":{"classes/TestHelper.html":{}}}],["twitter",{"_index":1241,"title":{},"body":{"index.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/ApiPermission.html":{},"controllers/ApiPermissionController.html":{},"classes/ApiPermissionGroup.html":{},"guards/ApiPermissionGuard.html":{},"injectables/ApiPermissionService.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAppConfig.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/InitUtil.html":{},"classes/OperationLog-1.html":{},"classes/PaginationApiPermissionDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/Permission-1.html":{},"controllers/PermissionController.html":{},"classes/PermissionGroup-1.html":{},"injectables/PermissionService.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"interfaces/Route.html":{},"classes/Session-1.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TestHelper.html":{},"interfaces/ToEntity.html":{},"classes/UpdateApiPermissionDto.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1254,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":568,"title":{},"body":{"injectables/IamService.html":{},"index.html":{}}}],["ua",{"_index":442,"title":{},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{}}}],["ua.decorator",{"_index":466,"title":{},"body":{"controllers/IamController.html":{}}}],["ua.decorator.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ua的session",{"_index":536,"title":{},"body":{"injectables/IamService.html":{}}}],["unauthorizedexception",{"_index":159,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["unauthorizedexception('token",{"_index":205,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["unauthorizedexception('user",{"_index":209,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"classes/CreateUserDto.html":{},"classes/PaginationUserDto.html":{},"interfaces/Route.html":{},"injectables/UserService.html":{}}}],["undefined})@isoptional()@isuuidsallindatabase('permissiongroup",{"_index":330,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["undefined})@isoptional()@isuuidsallindatabase('role",{"_index":332,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["unit",{"_index":1213,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":243,"title":{},"body":{"injectables/ApiPermissionService.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"classes/TestHelper.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":570,"title":{},"body":{"injectables/IamService.html":{}}}],["up.dto",{"_index":459,"title":{},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{}}}],["up.dto.ts",{"_index":933,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["up.dto.ts:12",{"_index":934,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:18",{"_index":936,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":89,"title":{},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":825,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":101,"title":{},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateapipermissiondto",{"_index":102,"title":{"classes/UpdateApiPermissionDto.html":{}},"body":{"controllers/ApiPermissionController.html":{},"injectables/ApiPermissionService.html":{},"classes/UpdateApiPermissionDto.html":{},"coverage.html":{}}}],["updateapipermissiondto.ispublic",{"_index":262,"title":{},"body":{"injectables/ApiPermissionService.html":{}}}],["updatedat",{"_index":20,"title":{},"body":{"classes/ApiPermission.html":{},"classes/ApiPermissionGroup.html":{},"classes/OperationLog-1.html":{},"classes/Permission-1.html":{},"classes/PermissionGroup-1.html":{},"classes/Profile-1.html":{},"classes/Role-1.html":{},"classes/Session-1.html":{},"classes/User-1.html":{}}}],["updateduser",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.password",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepermissiondto",{"_index":730,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updatepermissiondto.description",{"_index":776,"title":{},"body":{"injectables/PermissionService.html":{}}}],["updatepermissiondto.name",{"_index":775,"title":{},"body":{"injectables/PermissionService.html":{}}}],["updatepermissiondto.permissiongroupids",{"_index":780,"title":{},"body":{"injectables/PermissionService.html":{}}}],["updatepermissiondto.permissiongroupids.map((id",{"_index":781,"title":{},"body":{"injectables/PermissionService.html":{}}}],["updatepermissiondto.roleids",{"_index":777,"title":{},"body":{"injectables/PermissionService.html":{}}}],["updatepermissiondto.roleids.map((id",{"_index":779,"title":{},"body":{"injectables/PermissionService.html":{}}}],["updateroledto",{"_index":816,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updateroledto.apipermissionids",{"_index":857,"title":{},"body":{"injectables/RoleService.html":{}}}],["updateroledto.apipermissionids.length",{"_index":858,"title":{},"body":{"injectables/RoleService.html":{}}}],["updateroledto.description",{"_index":863,"title":{},"body":{"injectables/RoleService.html":{}}}],["updateroledto.name",{"_index":862,"title":{},"body":{"injectables/RoleService.html":{}}}],["updateroledto.permissionids",{"_index":859,"title":{},"body":{"injectables/RoleService.html":{}}}],["updateroledto.permissionids.length",{"_index":860,"title":{},"body":{"injectables/RoleService.html":{}}}],["updateuserdto",{"_index":1022,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto.bio",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.email",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.name",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.password",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.phone",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.roleid",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.status",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":189,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["useclass",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{}}}],["useclass(provider.useclass",{"_index":979,"title":{},"body":{"classes/TestHelper.html":{}}}],["user",{"_index":57,"title":{"classes/User.html":{},"classes/User-1.html":{}},"body":{"classes/ApiPermission-1.html":{},"classes/ApiPermissionGroup-1.html":{},"guards/ApiPermissionGuard.html":{},"controllers/IamController.html":{},"injectables/IamService.html":{},"classes/OperationLog.html":{},"classes/OperationLog-1.html":{},"classes/PaginationUserDto.html":{},"classes/Permission.html":{},"classes/PermissionGroup.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Role.html":{},"classes/Role-1.html":{},"classes/Session.html":{},"classes/Session-1.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":1062,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":462,"title":{},"body":{"controllers/IamController.html":{}}}],["user.decorator.ts",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":1025,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":366,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PaginationUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:24",{"_index":383,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":388,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:40",{"_index":380,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:47",{"_index":390,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:54",{"_index":375,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:62",{"_index":396,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:69",{"_index":392,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:78",{"_index":378,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":215,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"classes/TestHelper.html":{}}}],["user.password",{"_index":552,"title":{},"body":{"injectables/IamService.html":{},"injectables/UserService.html":{}}}],["user.role",{"_index":208,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["user.role.apipermission",{"_index":219,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["user.role.name",{"_index":210,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["user.service",{"_index":1051,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user:${req.user",{"_index":182,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["userapipermission",{"_index":218,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["userapipermission.find((p",{"_index":220,"title":{},"body":{"guards/ApiPermissionGuard.html":{}}}],["usercontroller",{"_index":1042,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":214,"title":{},"body":{"guards/ApiPermissionGuard.html":{},"injectables/IamService.html":{},"classes/OperationLog-1.html":{},"classes/Profile-1.html":{},"classes/Session-1.html":{}}}],["usermodule",{"_index":272,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["users.map((user",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":1050,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userstatus",{"_index":1038,"title":{},"body":{"classes/User-1.html":{}}}],["userstatus.active",{"_index":1039,"title":{},"body":{"classes/User-1.html":{}}}],["usevalue",{"_index":975,"title":{},"body":{"classes/TestHelper.html":{}}}],["utils/init",{"_index":522,"title":{},"body":{"injectables/IamService.html":{}}}],["utils/omit",{"_index":706,"title":{},"body":{"classes/PaginationUserDto.html":{}}}],["utils/sync",{"_index":967,"title":{},"body":{"classes/TestHelper.html":{}}}],["uuid",{"_index":350,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["validatenested",{"_index":685,"title":{},"body":{"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{}}}],["validatenested()@type(undefined)@isoptional",{"_index":693,"title":{},"body":{"classes/PaginationRoleDto.html":{}}}],["validatenested()@type(undefined)@isoptional()@apiproperty({description",{"_index":703,"title":{},"body":{"classes/PaginationUserDto.html":{}}}],["validatenested()@type(undefined)@isoptional()@apiproperty({type",{"_index":681,"title":{},"body":{"classes/PaginationPermissionDto.html":{}}}],["validationoptions",{"_index":1187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationpipe",{"_index":969,"title":{},"body":{"classes/TestHelper.html":{}}}],["validator",{"_index":337,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/PaginationDto.html":{},"classes/PaginationPermissionDto.html":{},"classes/PaginationRoleDto.html":{},"classes/PaginationUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateApiPermissionDto.html":{},"dependencies.html":{}}}],["value",{"_index":660,"title":{},"body":{"classes/PaginationDto.html":{},"classes/Role-1.html":{},"classes/TestHelper.html":{},"classes/User-1.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1262,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":571,"title":{},"body":{"injectables/IamService.html":{}}}],["verifyemail",{"_index":493,"title":{},"body":{"injectables/IamService.html":{}}}],["verifyemail(_token",{"_index":511,"title":{},"body":{"injectables/IamService.html":{}}}],["version",{"_index":1251,"title":{},"body":{"properties.html":{}}}],["void",{"_index":587,"title":{},"body":{"classes/InitUtil.html":{}}}],["watch",{"_index":1209,"title":{},"body":{"index.html":{}}}],["website",{"_index":1239,"title":{},"body":{"index.html":{}}}],["where[mapper",{"_index":674,"title":{},"body":{"classes/PaginationDto.html":{}}}],["wheretype",{"_index":653,"title":{},"body":{"classes/PaginationDto.html":{},"miscellaneous/typealiases.html":{}}}],["wheretypewithmapper",{"_index":658,"title":{},"body":{"classes/PaginationDto.html":{},"miscellaneous/typealiases.html":{}}}],["whitelist",{"_index":976,"title":{},"body":{"classes/TestHelper.html":{}}}],["winston",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":446,"title":{},"body":{"controllers/IamController.html":{},"injectables/IamService.html":{},"miscellaneous/functions.html":{}}}],["you'd",{"_index":1228,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":234,"title":{},"body":{"modules/ApiPermissionModule.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiPermission.html":{"url":"classes/ApiPermission.html","title":"class - ApiPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/api_permission.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPermissionGroups\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isPublic\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                OperationLogs\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPermissionGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApiPermissionGroup[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => ApiPermissionGroup})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isPublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        OperationLogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OperationLog[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => OperationLog})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Role})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog } from './operation_log';\nimport { Role } from './role';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class ApiPermission {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  path: string;\n\n  @ApiProperty({ type: String })\n  method: string;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ type: Boolean })\n  isPublic: boolean;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiProperty({ isArray: true, type: () => ApiPermissionGroup })\n  apiPermissionGroups: ApiPermissionGroup[];\n\n  @ApiProperty({ isArray: true, type: () => OperationLog })\n  OperationLogs: OperationLog[];\n\n  @ApiProperty({ isArray: true, type: () => Role })\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiPermission-1.html":{"url":"classes/ApiPermission-1.html","title":"class - ApiPermission-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiPermissionController.html":{"url":"controllers/ApiPermissionController.html","title":"controller - ApiPermissionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiPermissionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/api-permission/api-permission.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-permission\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginationDto: PaginationApiPermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: '获取所有api权限'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationDto\n                                            \n                                                            PaginationApiPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: '获取单个api权限'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateApiPermissionDto: UpdateApiPermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: '更新api权限'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateApiPermissionDto\n                                            \n                                                            UpdateApiPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { PaginationApiPermissionDto } from './dto/pagination-api-permission.dto';\nimport { Controller, Get, Body, Patch, Param } from '@nestjs/common';\nimport { ApiPermissionService } from './api-permission.service';\n\nimport { UpdateApiPermissionDto } from './dto/update-api-permission.dto';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('api权限管理')\n@Controller('api-permission')\nexport class ApiPermissionController {\n  constructor(private readonly apiPermissionService: ApiPermissionService) {}\n\n  @Get()\n  @ApiOperation({ summary: '获取所有api权限' })\n  findAll(@Body() paginationDto: PaginationApiPermissionDto) {\n    return this.apiPermissionService.findAll(paginationDto);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: '获取单个api权限' })\n  findOne(@Param('id') id: string) {\n    return this.apiPermissionService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: '更新api权限' })\n  update(\n    @Param('id') id: string,\n    @Body() updateApiPermissionDto: UpdateApiPermissionDto,\n  ) {\n    return this.apiPermissionService.update(id, updateApiPermissionDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiPermissionGroup.html":{"url":"classes/ApiPermissionGroup.html","title":"class - ApiPermissionGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiPermissionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/api_permission_group.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApiPermission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => ApiPermission})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPermission } from './api_permission';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class ApiPermissionGroup {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  name: string;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ isArray: true, type: () => ApiPermission })\n  permissions: ApiPermission[];\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiPermissionGroup-1.html":{"url":"classes/ApiPermissionGroup-1.html","title":"class - ApiPermissionGroup-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiPermissionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ApiPermissionGuard.html":{"url":"guards/ApiPermissionGuard.html","title":"guard - ApiPermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ApiPermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/modules/iam/guards/api-permission.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/iam/guards/api-permission.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/guards/api-permission.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiPermission, Role, User } from '@prisma/client';\nimport { Request } from 'express';\nimport { PrismaService } from 'nestjs-prisma';\n\n@Injectable()\nexport class ApiPermissionGuard implements CanActivate {\n  constructor(private readonly prisma: PrismaService) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const req = context.switchToHttp().getRequest();\n    const token = req.headers['authorization'];\n    let session = null;\n    if (token) {\n      session = await this.prisma.session.findFirst({\n        where: {\n          token,\n          expiresAt: {\n            gt: new Date(),\n          },\n        },\n        include: {\n          user: {\n            include: {\n              role: {\n                include: {\n                  apiPermissions: true,\n                },\n              },\n            },\n          },\n        },\n      });\n      req.user = session ? session.user : undefined;\n      Logger.log(\n        `Incoming request user:${req.user ? req.user.email : 'invalid-token'}`,\n        'ApiPermissionGuard',\n      );\n    } else {\n      req.user = undefined;\n    }\n    const user:\n      | (User & Record>)\n      | undefined = request['user'];\n    const path = request.route.path;\n    const method = request.method;\n    const url = request.url;\n    const data = {\n      body: request.body,\n      query: request.query,\n      params: request.params,\n      url,\n      success: undefined,\n    };\n    Logger.log(`Incoming request ${method} ${path}`, 'ApiPermissionGuard');\n    Logger.log(\n      `Incoming request data:\\n ${JSON.stringify(data)}`,\n      'ApiPermissionGuard',\n    );\n    const api = await this.prisma.apiPermission.findFirstOrThrow({\n      where: {\n        path,\n        method: method.toLowerCase(),\n      },\n      include: {\n        roles: true,\n      },\n    });\n    if (api.isPublic) {\n      return true;\n    }\n    if (!session) {\n      throw new UnauthorizedException('Token not found or expired');\n    }\n    if (user === undefined || user.role === undefined) {\n      throw new UnauthorizedException('User not found or role not found');\n    }\n    if (user.role.name === 'admin') {\n      data.success = true;\n      await this.prisma.operationLog.create({\n        data: {\n          userId: user.id,\n          apiPermissionId: api.id,\n          data: JSON.stringify(data),\n        },\n      });\n      return true;\n    }\n    const userApiPermission = user.role.apiPermission;\n    if (userApiPermission && userApiPermission.find((p) => p.id === api.id)) {\n      data.success = true;\n      await this.prisma.operationLog.create({\n        data: {\n          userId: user.id,\n          apiPermissionId: api.id,\n          data: JSON.stringify(data),\n        },\n      });\n      return true;\n    }\n    data.success = false;\n    await this.prisma.operationLog.create({\n      data: {\n        userId: user.id,\n        apiPermissionId: api.id,\n        data: JSON.stringify(data),\n      },\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiPermissionModule.html":{"url":"modules/ApiPermissionModule.html","title":"module - ApiPermissionModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiPermissionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiPermissionModule\n\n\n\ncluster_ApiPermissionModule_providers\n\n\n\n\nApiPermissionService\n\nApiPermissionService\n\n\n\nApiPermissionModule\n\nApiPermissionModule\n\nApiPermissionModule -->\n\nApiPermissionService->ApiPermissionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/api-permission/api-permission.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiPermissionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ApiPermissionService } from './api-permission.service';\nimport { ApiPermissionController } from './api-permission.controller';\n\n@Module({\n  controllers: [ApiPermissionController],\n  providers: [ApiPermissionService],\n})\nexport class ApiPermissionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiPermissionService.html":{"url":"injectables/ApiPermissionService.html","title":"injectable - ApiPermissionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiPermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/api-permission/api-permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/api-permission/api-permission.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginationDto: PaginationApiPermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationDto\n                                            \n                                                            PaginationApiPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateApiPermissionDto: UpdateApiPermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateApiPermissionDto\n                                            \n                                                            UpdateApiPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UpdateApiPermissionDto } from './dto/update-api-permission.dto';\nimport { PrismaService } from 'nestjs-prisma';\nimport { PaginationApiPermissionDto } from './dto/pagination-api-permission.dto';\n\n@Injectable()\nexport class ApiPermissionService {\n  constructor(private readonly prisma: PrismaService) {}\n  async findAll(paginationDto: PaginationApiPermissionDto) {\n    const apiPermissions = await this.prisma.apiPermission.findMany({\n      include: {\n        roles: true,\n        apiPermissionGroups: true,\n      },\n      ...paginationDto.toSkipAndTake(),\n      where: {\n        ...paginationDto.buildWhereWithNoDelete({\n          name: 'contains',\n          roleIds: ['sin', 'roles'],\n          permissionGroupIds: ['sin', 'permissionGroups'],\n        }),\n      },\n    });\n    const total = await this.prisma.apiPermission.count({\n      where: {\n        ...paginationDto.buildWhereWithNoDelete({\n          name: 'contains',\n          roleIds: ['sin', 'roles'],\n          permissionGroupIds: ['sin', 'permissionGroups'],\n        }),\n      },\n    });\n    return {\n      data: apiPermissions,\n      total,\n      page: paginationDto.page,\n      pageSize: paginationDto.pageSize,\n    };\n  }\n\n  async findOne(id: string) {\n    const apiPermission = await this.prisma.apiPermission.findUnique({\n      where: { id },\n      include: {\n        roles: true,\n        apiPermissionGroups: true,\n      },\n    });\n    return apiPermission;\n  }\n\n  async update(id: string, updateApiPermissionDto: UpdateApiPermissionDto) {\n    const { roleIds, permissionGroupIds } = updateApiPermissionDto;\n    const apiPermission = await this.prisma.apiPermission.update({\n      where: { id },\n      data: {\n        isPublic: updateApiPermissionDto.isPublic,\n        ...(roleIds\n          ? {\n              roles: {\n                connect: roleIds.map((id) => ({ id })),\n              },\n            }\n          : {}),\n        ...(permissionGroupIds\n          ? {\n              permissionGroups: {\n                connect: permissionGroupIds.map((id) => ({ id })),\n              },\n            }\n          : {}),\n      },\n      include: {\n        roles: true,\n        apiPermissionGroups: true,\n      },\n    });\n    return apiPermission;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nIamModule\n\nIamModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nPermissionModule\n\nPermissionModule\n\nAppModule -->\n\nPermissionModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            IamModule\n                        \n                        \n                            PermissionModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DevtoolsModule } from '@nestjs/devtools-integration';\nimport { ConfigModule } from '@nestjs/config';\nimport { IamModule } from './modules/iam/iam.module';\nimport appConfig from './configs/app-config';\nimport { PrismaModule } from 'nestjs-prisma';\nimport { UserModule } from './modules/user/user.module';\nimport { ApiPermissionModule } from './modules/api-permission/api-permission.module';\nimport { PermissionModule } from './modules/permission/permission.module';\nimport { RoleModule } from './modules/role/role.module';\nimport { CacheInterceptor, CacheModule } from '@nestjs/cache-manager';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { HttpModule } from '@nestjs/axios';\n\nconst envFilePath = process.env.NODE_ENV;\n@Module({\n  imports: [\n    DevtoolsModule.register({\n      http: process.env.NODE_ENV == 'development',\n      port: 8000,\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [appConfig],\n      envFilePath: `.env.${envFilePath ?? 'production'}`,\n    }),\n    CacheModule.register(),\n    IamModule,\n    UserModule,\n    ApiPermissionModule,\n    PermissionModule,\n    RoleModule,\n    PrismaModule.forRoot({\n      isGlobal: true,\n    }),\n    HttpModule.register({}),\n  ],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: CacheInterceptor,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                permissionGroupIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roleIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(50)@Optional()@ApiProperty({description: '权限描述', maxLength: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/permission/dto/create-permission.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(20)@ApiProperty({description: '权限字符', maxLength: 20})@IsNotSameNameInDataBase('permission')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/permission/dto/create-permission.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        permissionGroupIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID('4', {each: true})@ApiProperty({description: '权限组id', type: 'array', items: undefined})@IsOptional()@IsUUIDsALLInDataBase('permissionGroup')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/permission/dto/create-permission.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        roleIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID('4', {each: true})@ApiProperty({description: '角色id', type: 'array', items: undefined})@IsOptional()@IsUUIDsALLInDataBase('role')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/permission/dto/create-permission.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Optional } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, IsUUID, MaxLength } from 'class-validator';\nimport { IsUUIDsALLInDataBase } from '@/commons/pipes/all-in-db.pipe';\nimport { IsNotSameNameInDataBase } from '@/commons/pipes/not-same-name.pipe';\n\nexport class CreatePermissionDto {\n  @IsString()\n  @MaxLength(20)\n  @ApiProperty({\n    description: '权限字符',\n    maxLength: 20,\n  })\n  @IsNotSameNameInDataBase('permission')\n  name: string;\n\n  @IsString()\n  @MaxLength(50)\n  @Optional()\n  @ApiProperty({\n    description: '权限描述',\n    maxLength: 50,\n  })\n  description?: string;\n\n  @IsUUID('4', { each: true })\n  @ApiProperty({\n    description: '角色id',\n    type: 'array',\n    items: {\n      type: 'string',\n      format: 'uuid',\n    },\n  })\n  @IsOptional()\n  @IsUUIDsALLInDataBase('role')\n  roleIds?: string[];\n\n  @IsUUID('4', { each: true })\n  @ApiProperty({\n    description: '权限组id',\n    type: 'array',\n    items: {\n      type: 'string',\n      format: 'uuid',\n    },\n  })\n  @IsOptional()\n  @IsUUIDsALLInDataBase('permissionGroup')\n  permissionGroupIds?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiPermissionIds\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                permissionIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiPermissionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID('4', {each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID('4', {each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsUUID } from 'class-validator';\n\nexport class CreateRoleDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @IsUUID('4', { each: true })\n  @IsOptional()\n  permissionIds: string[];\n\n  @IsUUID('4', { each: true })\n  @IsOptional()\n  apiPermissionIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                bio\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                roleId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUrl()@ApiProperty({description: '头像'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MaxLength(100)@ApiProperty({description: '个人简介', maxLength: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({description: '邮箱'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MaxLength(12)@ApiProperty({description: '用户名', maxLength: 12})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(18)@MinLength(8)@ApiProperty({description: '密码', maxLength: 18, minLength: 8})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPhoneNumber('CN')@ApiProperty({description: '手机号'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUUID()@ApiProperty({description: '角色id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     $Enums.UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum($Enums.UserStatus)@ApiProperty({description: '用户状态', enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { $Enums } from '@prisma/client';\n\nimport {\n  IsEmail,\n  IsEnum,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  IsUrl,\n  IsUUID,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsOptional()\n  @IsString()\n  @MaxLength(12)\n  @ApiProperty({\n    description: '用户名',\n    maxLength: 12,\n  })\n  name?: string;\n\n  @IsString()\n  @MaxLength(18)\n  @MinLength(8)\n  @ApiProperty({\n    description: '密码',\n    maxLength: 18,\n    minLength: 8,\n  })\n  password: string;\n\n  @IsEmail()\n  @ApiProperty({\n    description: '邮箱',\n  })\n  email: string;\n\n  @IsOptional()\n  @IsPhoneNumber('CN')\n  @ApiProperty({\n    description: '手机号',\n  })\n  phone?: string;\n\n  @IsOptional()\n  @IsUrl()\n  @ApiProperty({\n    description: '头像',\n  })\n  avatar?: string;\n\n  @IsOptional()\n  @IsEnum($Enums.UserStatus)\n  @ApiProperty({\n    description: '用户状态',\n    enum: $Enums.UserStatus,\n  })\n  status?: $Enums.UserStatus;\n\n  @IsOptional()\n  @IsUUID()\n  @ApiProperty({\n    description: '角色id',\n  })\n  roleId?: string;\n\n  @IsOptional()\n  @IsString()\n  @MaxLength(100)\n  @ApiProperty({\n    description: '个人简介',\n    maxLength: 100,\n  })\n  bio?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppConfig.html":{"url":"interfaces/IAppConfig.html","title":"interface - IAppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configs/app-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            appDescription\n                                        \n                                \n                                \n                                        \n                                            appHost\n                                        \n                                \n                                \n                                        \n                                            appName\n                                        \n                                \n                                \n                                        \n                                            appVersion\n                                        \n                                \n                                \n                                        \n                                            env\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appHost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appHost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        env:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\n\nexport interface IAppConfig {\n  port: number;\n  env: string;\n  appName: string;\n  appDescription: string;\n  appVersion: string;\n  appHost: string;\n}\n\nexport const APP_CONFIG_TOKEN = 'app';\n\nexport default registerAs(APP_CONFIG_TOKEN, () => {\n  return {\n    port: parseInt(process.env.PORT, 10) || 3000,\n    env: process.env.NODE_ENV || 'development',\n    appName: process.env.APP_NAME || 'NestJS App',\n    appDescription: process.env.APP_DESCRIPTION || 'NestJS App Description',\n    appVersion: process.env.APP_VERSION || '1.0.0',\n    appHost: process.env.APP_HOST || 'localhost',\n  } satisfies IAppConfig;\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IamController.html":{"url":"controllers/IamController.html","title":"controller - IamController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IamController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/iam/iam.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                iam\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                            \n                                    \n                                    \n                                    Async\n                                signOut\n                            \n                            \n                                    \n                                    \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(dto: SignInDto, ua?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signIn')@ApiOperation({summary: '用户登录'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/iam/iam.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ua\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOut(user?: User, token?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signOut')@ApiOperation({summary: '用户登出'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/iam/iam.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(dto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signUp')@ApiOperation({summary: '用户注册'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/iam/iam.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { IamService } from './iam.service';\nimport { SignInDto } from './dtos/sign-in.dto';\nimport { SignUpDto } from './dtos/sign-up.dto';\nimport { GetUser } from './decorators/get-user.decorator';\nimport { User } from '@prisma/client';\nimport { GetToken } from './decorators/get-token.decorator';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { GetUA } from './decorators/get-ua.decorator';\n\n@ApiTags('认证及授权模块')\n@Controller('iam')\nexport class IamController {\n  constructor(private readonly iamService: IamService) {}\n\n  @Post('signIn')\n  @ApiOperation({ summary: '用户登录' })\n  async signIn(@Body() dto: SignInDto, @GetUA() ua?: string) {\n    return this.iamService.signIn(dto, ua);\n  }\n\n  @Post('signUp')\n  @ApiOperation({ summary: '用户注册' })\n  async signUp(@Body() dto: SignUpDto) {\n    return this.iamService.signUp(dto);\n  }\n\n  @Post('signOut')\n  @ApiOperation({ summary: '用户登出' })\n  async signOut(@GetUser() user?: User, @GetToken() token?: string) {\n    return this.iamService.signOutByToken(user, token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IamModule.html":{"url":"modules/IamModule.html","title":"module - IamModule","body":"\n                   \n\n\n\n\n    Modules\n    IamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IamModule\n\n\n\ncluster_IamModule_exports\n\n\n\ncluster_IamModule_providers\n\n\n\n\nIamService \n\nIamService \n\n\n\nIamModule\n\nIamModule\n\nIamService  -->\n\nIamModule->IamService \n\n\n\n\n\nIamService\n\nIamService\n\nIamModule -->\n\nIamService->IamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/iam/iam.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IamService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IamController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IamService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IamController } from './iam.controller';\nimport { IamService } from './iam.service';\nimport { APP_GUARD } from '@nestjs/core';\nimport { ApiPermissionGuard } from './guards/api-permission.guard';\n\n@Module({\n  controllers: [IamController],\n  providers: [\n    IamService,\n    {\n      provide: APP_GUARD,\n      useClass: ApiPermissionGuard,\n    },\n  ],\n  exports: [IamService],\n})\nexport class IamModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IamService.html":{"url":"injectables/IamService.html","title":"injectable - IamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/iam/iam.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                genSession\n                            \n                            \n                                    Async\n                                getSessionList\n                            \n                            \n                                    Async\n                                hash\n                            \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                sendVerificationEmail\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signOutByToken\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/iam/iam.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(str: string, hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        genSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    genSession(user?: User, ua?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                ua\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSessionList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSessionList(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendVerificationEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendVerificationEmail(_user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(dto: SignInDto, ua?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ua\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signOutByToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOutByToken(user: User, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(dto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  OnApplicationBootstrap,\n} from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { SignUpDto } from './dtos/sign-up.dto';\nimport { PrismaService } from 'nestjs-prisma';\nimport { SignInDto } from './dtos/sign-in.dto';\nimport { User } from '@prisma/client';\nimport { randomBytes } from 'crypto';\nimport { PRESET_ROLE } from './constants/preset-role.constant';\nimport InitUtil from '@/utils/init';\nimport { IAM_INIT_KEY } from './constants/iam-init.constant';\n\n@Injectable()\nexport class IamService implements OnApplicationBootstrap {\n  constructor(private prisma: PrismaService) {}\n  async onApplicationBootstrap() {\n    const count = await this.prisma.role.count();\n    if (count === 0) {\n      await this.prisma.role.createMany({\n        data: PRESET_ROLE,\n      });\n    }\n    InitUtil.init(IAM_INIT_KEY);\n  }\n\n  async hash(str: string): Promise {\n    const salt = await bcrypt.genSalt(10);\n    return await bcrypt.hash(str, salt);\n  }\n\n  async compare(str: string, hash: string): Promise {\n    return await bcrypt.compare(str, hash);\n  }\n\n  async genSession(user?: User, ua?: string) {\n    if (ua) {\n      const hasSameSession = await this.prisma.session.findFirst({\n        where: {\n          userId: user.id,\n          expiresAt: {\n            gt: new Date(),\n          },\n          description: ua,\n        },\n      });\n      // 如果已经有相同ua的session，删除\n      if (hasSameSession) {\n        await this.prisma.session.delete({\n          where: {\n            id: hasSameSession.id,\n          },\n        });\n      }\n    }\n    const token = randomBytes(32).toString('hex');\n    return this.prisma.session.create({\n      data: {\n        token,\n        user: {\n          connect: {\n            id: user.id,\n          },\n        },\n        description: ua ?? 'unknown device',\n        // 7 days\n        expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 24 * 7),\n      },\n    });\n  }\n\n  async signIn(dto: SignInDto, ua?: string) {\n    const user = await this.prisma.user.findFirst({\n      where: {\n        email: dto.email,\n      },\n    });\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n    if (!(await this.compare(dto.password, user.password))) {\n      throw new BadRequestException('Invalid password');\n    }\n    return this.genSession(user, ua);\n  }\n\n  async signUp(dto: SignUpDto) {\n    const user = await this.prisma.user.findFirst({\n      where: {\n        email: dto.email,\n      },\n    });\n    if (user) {\n      throw new BadRequestException('User already exists');\n    }\n    const password = await this.hash(dto.password);\n    const newUser = await this.prisma.user.create({\n      data: {\n        email: dto.email,\n        password,\n        // TODO: 通过status控制用户是否验证邮箱\n        status: 'ACTIVE',\n        role: {\n          connect: {\n            name: 'user',\n          },\n        },\n      },\n    });\n    delete newUser.password;\n    return newUser;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async sendVerificationEmail(_user: User) {\n    // Todo: 添加发送邮件逻辑\n    throw new Error('Not implemented');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async verifyEmail(_token: string) {\n    // Todo: 添加验证邮件逻辑\n    throw new Error('Not implemented');\n  }\n\n  async getSessionList(user: User) {\n    const sessions = await this.prisma.session.findMany({\n      where: {\n        userId: user.id,\n      },\n    });\n    return sessions.map((s) => ({\n      ...s,\n      token: null,\n    }));\n  }\n\n  async signOutByToken(user: User, token: string) {\n    await this.prisma.session.deleteMany({\n      where: {\n        userId: user.id,\n        token,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitUtil.html":{"url":"classes/InitUtil.html","title":"class - InitUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/init.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                            \n                                    Static\n                                initPipe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    init$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/init.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        initPipe\n                        \n                    \n                \n            \n            \n                \n                        \n                    initPipe(needKeys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/init.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                needKeys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        init$\n                    \n                \n\n                \n                    \n                        getinit$()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/init.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, filter, pipe } from 'rxjs';\n\nconst initSubject = new BehaviorSubject([]);\n\nclass InitUtil {\n  static init(key: string) {\n    initSubject.next([...initSubject.value, key]);\n  }\n  static get init$() {\n    return initSubject.asObservable();\n  }\n  static initPipe(needKeys: string[]) {\n    return pipe(\n      filter((keys: string[]) => needKeys.every((key) => keys.includes(key))),\n    );\n  }\n}\n\nexport default InitUtil;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OperationLog.html":{"url":"classes/OperationLog.html","title":"class - OperationLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OperationLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OperationLog-1.html":{"url":"classes/OperationLog-1.html","title":"class - OperationLog-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OperationLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/operation_log.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ApiPermission\n                            \n                            \n                                    \n                                apiPermissionId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ApiPermission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiPermission\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => ApiPermission})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPermissionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { ApiPermission } from './api_permission';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class OperationLog {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n\n  @ApiProperty({ type: () => ApiPermission })\n  ApiPermission: ApiPermission;\n\n  @ApiProperty({ type: String })\n  apiPermissionId: string;\n\n  @ApiProperty({ type: String })\n  data: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationApiPermissionDto.html":{"url":"classes/PaginationApiPermissionDto.html","title":"class - PaginationApiPermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationApiPermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/api-permission/dto/pagination-api-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildWhere\n                            \n                            \n                                buildWhereWithNoDelete\n                            \n                            \n                                toSkipAndTake\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: '分页页码'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@Max(100)@Min(5)@IsInt()@ApiProperty({description: '分页大小(5, 10, 20, 50, 100)'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:37\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhere\n                        \n                    \n                \n            \n            \n                \nbuildWhere(props)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:48\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhereWithNoDelete\n                        \n                    \n                \n            \n            \n                \nbuildWhereWithNoDelete(props)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:111\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSkipAndTake\n                        \n                    \n                \n            \n            \n                \ntoSkipAndTake()\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:41\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { skip: number; take: number; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PaginationDto } from '@/commons/dtos/pagination.dto';\n\nexport class PaginationApiPermissionDto extends PaginationDto {\n  filter?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/dtos/pagination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildWhere\n                            \n                            \n                                buildWhereWithNoDelete\n                            \n                            \n                                toSkipAndTake\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/commons/dtos/pagination.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: '分页页码'})@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commons/dtos/pagination.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@Max(100)@Min(5)@IsInt()@ApiProperty({description: '分页大小(5, 10, 20, 50, 100)'})@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commons/dtos/pagination.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhere\n                        \n                    \n                \n            \n            \n                \nbuildWhere(props)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/dtos/pagination.dto.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhereWithNoDelete\n                        \n                    \n                \n            \n            \n                \nbuildWhereWithNoDelete(props)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/dtos/pagination.dto.ts:111\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSkipAndTake\n                        \n                    \n                \n            \n            \n                \ntoSkipAndTake()\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/dtos/pagination.dto.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { skip: number; take: number; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsInt, IsNumber, Max, Min } from 'class-validator';\n\nexport type WhereType =\n  | 'in'\n  | 'contains'\n  | 'eq'\n  | 'lt'\n  | 'lte'\n  | 'gt'\n  | 'gte'\n  | 'sin';\n\nexport type WhereTypeWithMapper = [WhereType, keyof K];\n\nexport abstract class PaginationDto {\n  @IsNumber()\n  @ApiProperty({\n    description: '分页页码',\n  })\n  @Transform(({ value }) => Number(value))\n  page: number;\n\n  @IsNumber({\n    allowNaN: false,\n    allowInfinity: false,\n    maxDecimalPlaces: 0,\n  })\n  @Max(100)\n  @Min(5)\n  @IsInt()\n  @ApiProperty({\n    description: '分页大小(5, 10, 20, 50, 100)',\n  })\n  @Transform(({ value }) => Number(value))\n  pageSize: number;\n\n  abstract filter?: T;\n\n  toSkipAndTake() {\n    return {\n      skip: (this.page - 1) * this.pageSize,\n      take: this.pageSize,\n    };\n  }\n\n  buildWhere(props: {\n    [key in keyof T]: WhereType | WhereTypeWithMapper;\n  }) {\n    const where: any = {};\n    for (const key in props) {\n      if (props.hasOwnProperty(key)) {\n        const value = this.filter[key];\n        const [type, mapper] = Array.isArray(props[key])\n          ? (props[key] as WhereTypeWithMapper)\n          : [props[key] as WhereType, key];\n        if (value) {\n          switch (type) {\n            case 'in':\n              where[mapper] = {\n                in: value,\n              };\n              break;\n            case 'contains':\n              where[mapper] = {\n                contains: value,\n              };\n              break;\n            case 'eq':\n              where[mapper] = {\n                equals: value,\n              };\n              break;\n            case 'lt':\n              where[mapper] = {\n                lt: value,\n              };\n              break;\n            case 'lte':\n              where[mapper] = {\n                lte: value,\n              };\n              break;\n            case 'gt':\n              where[mapper] = {\n                gt: value,\n              };\n              break;\n            case 'gte':\n              where[mapper] = {\n                gte: value,\n              };\n              break;\n            case 'sin':\n              where[mapper] = {\n                some: {\n                  id: {\n                    in: value,\n                  },\n                },\n              };\n              break;\n          }\n        }\n      }\n    }\n    return where;\n  }\n\n  buildWhereWithNoDelete(props: {\n    [key in keyof T]: WhereType | WhereTypeWithMapper;\n  }) {\n    return {\n      ...this.buildWhere(props),\n      deletedAt: null,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationPermissionDto.html":{"url":"classes/PaginationPermissionDto.html","title":"class - PaginationPermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationPermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/dto/pagination-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildWhere\n                            \n                            \n                                buildWhereWithNoDelete\n                            \n                            \n                                toSkipAndTake\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsOptional()@ApiProperty({type: () => , description: '过滤条件'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: '分页页码'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@Max(100)@Min(5)@IsInt()@ApiProperty({description: '分页大小(5, 10, 20, 50, 100)'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:37\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhere\n                        \n                    \n                \n            \n            \n                \nbuildWhere(props)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:48\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhereWithNoDelete\n                        \n                    \n                \n            \n            \n                \nbuildWhereWithNoDelete(props)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:111\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSkipAndTake\n                        \n                    \n                \n            \n            \n                \ntoSkipAndTake()\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:41\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { skip: number; take: number; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsOptional, ValidateNested } from 'class-validator';\nimport { PaginationDto } from '@/commons/dtos/pagination.dto';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class PaginationPermissionDto extends PaginationDto>\n> {\n  @ValidateNested()\n  @Type(() =>\n    PartialType(OmitType(CreatePermissionDto, ['description'] as const)),\n  )\n  @IsOptional()\n  @ApiProperty({\n    type: () =>\n      PartialType(OmitType(CreatePermissionDto, ['description'] as const)),\n    description: '过滤条件',\n  })\n  filter?: Partial>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationRoleDto.html":{"url":"classes/PaginationRoleDto.html","title":"class - PaginationRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/pagination-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                all\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildWhere\n                            \n                            \n                                buildWhereWithNoDelete\n                            \n                            \n                                toSkipAndTake\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        all\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/pagination-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Pick\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: '分页页码'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@Max(100)@Min(5)@IsInt()@ApiProperty({description: '分页大小(5, 10, 20, 50, 100)'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:37\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhere\n                        \n                    \n                \n            \n            \n                \nbuildWhere(props)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:48\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhereWithNoDelete\n                        \n                    \n                \n            \n            \n                \nbuildWhereWithNoDelete(props)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:111\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSkipAndTake\n                        \n                    \n                \n            \n            \n                \ntoSkipAndTake()\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:41\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { skip: number; take: number; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsBoolean, IsOptional, ValidateNested } from 'class-validator';\nimport { Role } from '@/_gen/prisma-class/role';\nimport { PaginationDto } from '@/commons/dtos/pagination.dto';\n\nexport class PaginationRoleDto extends PaginationDto> {\n  @ValidateNested()\n  @Type(() => PickType(Role, ['name']))\n  @IsOptional()\n  filter?: Pick;\n\n  @IsOptional()\n  @IsBoolean()\n  all?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationUserDto.html":{"url":"classes/PaginationUserDto.html","title":"class - PaginationUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/pagination-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildWhere\n                            \n                            \n                                buildWhereWithNoDelete\n                            \n                            \n                                toSkipAndTake\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PickByArray\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsOptional()@ApiProperty({description: '过滤条件', type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: '分页页码'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@Max(100)@Min(5)@IsInt()@ApiProperty({description: '分页大小(5, 10, 20, 50, 100)'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:37\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhere\n                        \n                    \n                \n            \n            \n                \nbuildWhere(props)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:48\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhereWithNoDelete\n                        \n                    \n                \n            \n            \n                \nbuildWhereWithNoDelete(props)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:111\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSkipAndTake\n                        \n                    \n                \n            \n            \n                \ntoSkipAndTake()\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:41\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { skip: number; take: number; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PickType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsOptional, ValidateNested } from 'class-validator';\nimport { User } from '@/_gen/prisma-class/user';\nimport { PaginationDto } from '@/commons/dtos/pagination.dto';\nimport { PickByArray } from '@/utils/omit-by-array';\n\nexport class PaginationUserDto extends PaginationDto\n> {\n  @ValidateNested()\n  @Type(() => PickType(User, ['id', 'email', 'name', 'status']))\n  @IsOptional()\n  @ApiProperty({\n    description: '过滤条件',\n    type: PickType(User, ['id', 'email', 'name', 'status']),\n  })\n  filter?: PickByArray;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission-1.html":{"url":"classes/Permission-1.html","title":"class - Permission-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/permission.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissionGroups\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissionGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PermissionGroup[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => PermissionGroup})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Role})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from './role';\nimport { PermissionGroup } from './permission_group';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Permission {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  name: string;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ isArray: true, type: () => Role })\n  roles: Role[];\n\n  @ApiProperty({ isArray: true, type: () => PermissionGroup })\n  permissionGroups: PermissionGroup[];\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionController.html":{"url":"controllers/PermissionController.html","title":"controller - PermissionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/permission.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permission\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: '创建权限字符'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permission/permission.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginate: PaginationPermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: '获取所有权限字符'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permission/permission.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginate\n                                            \n                                                            PaginationPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: '获取单个权限字符'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permission/permission.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: '删除权限字符'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permission/permission.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: '更新权限字符'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permission/permission.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PermissionService } from './permission.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { PaginationPermissionDto } from './dto/pagination-permission.dto';\n\n@ApiTags('权限字符管理')\n@Controller('permission')\nexport class PermissionController {\n  constructor(private readonly permissionService: PermissionService) {}\n\n  @Post()\n  @ApiOperation({ summary: '创建权限字符' })\n  create(@Body() createPermissionDto: CreatePermissionDto) {\n    return this.permissionService.create(createPermissionDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: '获取所有权限字符' })\n  findAll(@Body() paginate: PaginationPermissionDto) {\n    return this.permissionService.findAll(paginate);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: '获取单个权限字符' })\n  findOne(@Param('id') id: string) {\n    return this.permissionService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: '更新权限字符' })\n  update(\n    @Param('id') id: string,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n  ) {\n    return this.permissionService.update(id, updatePermissionDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: '删除权限字符' })\n  remove(@Param('id') id: string) {\n    return this.permissionService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionGroup.html":{"url":"classes/PermissionGroup.html","title":"class - PermissionGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionGroup-1.html":{"url":"classes/PermissionGroup-1.html","title":"class - PermissionGroup-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/permission_group.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Permission})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Permission } from './permission';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PermissionGroup {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  name: string;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ isArray: true, type: () => Permission })\n  permissions: Permission[];\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionModule.html":{"url":"modules/PermissionModule.html","title":"module - PermissionModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_providers\n\n\n\n\nPermissionService\n\nPermissionService\n\n\n\nPermissionModule\n\nPermissionModule\n\nPermissionModule -->\n\nPermissionService->PermissionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/permission/permission.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionService } from './permission.service';\nimport { PermissionController } from './permission.controller';\n\n@Module({\n  controllers: [PermissionController],\n  providers: [PermissionService],\n})\nexport class PermissionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionService.html":{"url":"injectables/PermissionService.html","title":"injectable - PermissionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/permission/permission.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permission/permission.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginate: PaginationPermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permission/permission.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginate\n                                            \n                                                            PaginationPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permission/permission.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permission/permission.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permission/permission.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { PrismaService } from 'nestjs-prisma';\nimport { PaginationPermissionDto } from './dto/pagination-permission.dto';\nimport { Permission } from '@/_gen/prisma-class/permission';\n\n@Injectable()\nexport class PermissionService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(createPermissionDto: CreatePermissionDto) {\n    const permission = await this.prisma.permission.create({\n      data: {\n        name: createPermissionDto.name,\n        description: createPermissionDto.description,\n        roles: {\n          connect: createPermissionDto.roleIds?.map((id) => ({ id })),\n        },\n        permissionGroups: {\n          connect: createPermissionDto.permissionGroupIds?.map((id) => ({\n            id,\n          })),\n        },\n      },\n      include: {\n        roles: true,\n        permissionGroups: true,\n      },\n    });\n    return permission;\n  }\n\n  async findAll(paginate: PaginationPermissionDto) {\n    const permissions = await this.prisma.permission.findMany({\n      include: {\n        roles: true,\n        permissionGroups: true,\n      },\n      ...paginate.toSkipAndTake(),\n      where: {\n        ...paginate.buildWhereWithNoDelete({\n          name: 'contains',\n          roleIds: ['sin', 'roles'],\n          permissionGroupIds: ['sin', 'permissionGroups'],\n        }),\n      },\n    });\n    const total = await this.prisma.permission.count({\n      where: {\n        ...paginate.buildWhereWithNoDelete({\n          name: 'contains',\n          roleIds: ['sin', 'roles'],\n          permissionGroupIds: ['sin', 'permissionGroups'],\n        }),\n      },\n    });\n    return {\n      data: permissions,\n      total,\n      page: paginate.page,\n      pageSize: paginate.pageSize,\n    };\n  }\n\n  async findOne(id: string) {\n    const permission = await this.prisma.permission.findUnique({\n      where: {\n        id,\n        deletedAt: null,\n      },\n      include: {\n        roles: true,\n        permissionGroups: true,\n      },\n    });\n    return permission;\n  }\n\n  async update(id: string, updatePermissionDto: UpdatePermissionDto) {\n    const permission = await this.prisma.permission.update({\n      where: {\n        id,\n      },\n      data: {\n        name: updatePermissionDto.name,\n        description: updatePermissionDto.description,\n        ...(updatePermissionDto.roleIds\n          ? {\n              roles: {\n                set: updatePermissionDto.roleIds.map((id) => ({ id })),\n              },\n            }\n          : {}),\n        ...(updatePermissionDto.permissionGroupIds\n          ? {\n              permissionGroups: {\n                set: updatePermissionDto.permissionGroupIds.map((id) => ({\n                  id,\n                })),\n              },\n            }\n          : {}),\n      },\n      include: {\n        roles: true,\n        permissionGroups: true,\n      },\n    });\n    return permission;\n  }\n\n  async remove(id: string) {\n    await this.prisma.permission.update({\n      where: {\n        id,\n      },\n      data: {\n        deletedAt: new Date(),\n      },\n    });\n    return { data: 'success' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile-1.html":{"url":"classes/Profile-1.html","title":"class - Profile-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/profile.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                    Optional\n                                bio\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Profile {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiPropertyOptional({ type: String })\n  bio?: string;\n\n  @ApiPropertyOptional({ type: String })\n  avatar?: string;\n\n  @ApiPropertyOptional({ type: String })\n  phone?: string;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role-1.html":{"url":"classes/Role-1.html","title":"class - Role-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/role.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPermissions\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletable\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPermissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApiPermission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => ApiPermission})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Permission})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RoleStatus\n\n                    \n                \n                \n                    \n                        Default value : RoleStatus.ACTIVE\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: RoleStatus, enumName: 'RoleStatus'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { Permission } from './permission';\nimport { ApiPermission } from './api_permission';\nimport { RoleStatus } from '@prisma/client';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Role {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  name: string;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ isArray: true, type: () => User })\n  user: User[];\n\n  @ApiProperty({ isArray: true, type: () => Permission })\n  permissions: Permission[];\n\n  @ApiProperty({ isArray: true, type: () => ApiPermission })\n  apiPermissions: ApiPermission[];\n\n  @ApiProperty({ enum: RoleStatus, enumName: 'RoleStatus' })\n  status: RoleStatus = RoleStatus.ACTIVE;\n\n  @ApiProperty({ type: Boolean })\n  deletable: boolean = true;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                role\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: '创建角色'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginationDto: PaginationRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: '获取所有角色'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationDto\n                                            \n                                                            PaginationRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: '获取单个角色'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: '删除角色'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: '更新角色'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { PaginationRoleDto } from './dto/pagination-role.dto';\n\n@ApiTags('角色管理')\n@Controller('role')\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) {}\n\n  @Post()\n  @ApiOperation({ summary: '创建角色' })\n  create(@Body() createRoleDto: CreateRoleDto) {\n    return this.roleService.create(createRoleDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: '获取所有角色' })\n  findAll(@Body() paginationDto: PaginationRoleDto) {\n    return this.roleService.findAll(paginationDto);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: '获取单个角色' })\n  findOne(@Param('id') id: string) {\n    return this.roleService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: '更新角色' })\n  update(@Param('id') id: string, @Body() updateRoleDto: UpdateRoleDto) {\n    return this.roleService.update(id, updateRoleDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: '删除角色' })\n  remove(@Param('id') id: string) {\n    return this.roleService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService\n\nRoleService\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { RoleController } from './role.controller';\n\n@Module({\n  controllers: [RoleController],\n  providers: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/role/role.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(dto: PaginationRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            PaginationRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { PrismaService } from 'nestjs-prisma';\nimport { PaginationRoleDto } from './dto/pagination-role.dto';\n\n@Injectable()\nexport class RoleService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(createRoleDto: CreateRoleDto) {\n    let apiPermissions = [];\n    let permissions = [];\n    if (createRoleDto.apiPermissionIds) {\n      apiPermissions = await this.prisma.apiPermission.findMany({\n        where: {\n          id: {\n            in: createRoleDto.apiPermissionIds,\n          },\n        },\n      });\n      if (apiPermissions.length !== createRoleDto.apiPermissionIds.length) {\n        throw new Error('apiPermissionIds is invalid');\n      }\n    }\n    if (createRoleDto.permissionIds) {\n      permissions = await this.prisma.permission.findMany({\n        where: {\n          id: {\n            in: createRoleDto.permissionIds,\n          },\n        },\n      });\n      if (permissions.length !== createRoleDto.permissionIds.length) {\n        throw new Error('permissionIds is invalid');\n      }\n    }\n    const role = await this.prisma.role.create({\n      data: {\n        name: createRoleDto.name,\n        description: createRoleDto.description,\n        ...(apiPermissions.length > 0\n          ? { apiPermission: { connect: apiPermissions } }\n          : {}),\n        ...(permissions.length > 0\n          ? { permission: { connect: permissions } }\n          : {}),\n      },\n      include: {\n        apiPermissions: apiPermissions.length > 0 ? true : false,\n        permissions: permissions.length > 0 ? true : false,\n      },\n    });\n    return role;\n  }\n\n  async findAll(dto: PaginationRoleDto) {\n    if (dto.all) {\n      const c = await this.prisma.role.count();\n      const roles = await this.prisma.role.findMany({\n        include: {\n          apiPermissions: true,\n          permissions: true,\n        },\n        where: {\n          deletedAt: null,\n        },\n      });\n      return { total: c, page: 1, pageSize: c, data: roles };\n    }\n    const { page, pageSize } = dto;\n    const total = await this.prisma.role.count({\n      where: {\n        name: {\n          contains: dto.filter?.name,\n        },\n        deletedAt: null,\n      },\n    });\n    const roles = await this.prisma.role.findMany({\n      skip: (page - 1) * pageSize,\n      take: pageSize,\n      include: {\n        apiPermissions: true,\n        permissions: true,\n      },\n      where: {\n        deletedAt: null,\n        name: {\n          contains: dto.filter?.name,\n        },\n      },\n    });\n    return { total, page, pageSize, data: roles };\n  }\n\n  async findOne(id: string) {\n    const role = await this.prisma.role.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        apiPermissions: true,\n        permissions: true,\n      },\n    });\n    if (!role) {\n      throw new BadRequestException('Role not found');\n    }\n    return role;\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto) {\n    let apiPermissions = [];\n    let permissions = [];\n    if (updateRoleDto.apiPermissionIds) {\n      apiPermissions = await this.prisma.apiPermission.findMany({\n        where: {\n          id: {\n            in: updateRoleDto.apiPermissionIds,\n          },\n        },\n      });\n      if (apiPermissions.length !== updateRoleDto.apiPermissionIds.length) {\n        throw new Error('apiPermissionIds is invalid');\n      }\n    }\n    if (updateRoleDto.permissionIds) {\n      permissions = await this.prisma.permission.findMany({\n        where: {\n          id: {\n            in: updateRoleDto.permissionIds,\n          },\n        },\n      });\n      if (permissions.length !== updateRoleDto.permissionIds.length) {\n        throw new Error('permissionIds is invalid');\n      }\n    }\n    const role = await this.prisma.role.update({\n      where: {\n        id,\n      },\n      data: {\n        name: updateRoleDto.name,\n        description: updateRoleDto.description,\n        ...(apiPermissions.length > 0\n          ? { apiPermissions: { set: apiPermissions } }\n          : {}),\n        ...(permissions.length > 0 ? { permission: { set: permissions } } : {}),\n      },\n      include: {\n        apiPermissions: apiPermissions.length > 0 ? true : false,\n        permissions: permissions.length > 0 ? true : false,\n      },\n    });\n    return role;\n  }\n\n  async remove(id: string) {\n    const role = await this.prisma.role.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!role) {\n      throw new BadRequestException('Role not found');\n    }\n    await this.prisma.role.update({\n      where: {\n        id,\n      },\n      data: {\n        deletedAt: new Date(),\n      },\n    });\n    return { message: 'success' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Route.html":{"url":"interfaces/Route.html","title":"interface - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/sync-route.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { INestApplication, Logger } from '@nestjs/common';\nimport { PrismaService } from 'nestjs-prisma';\n\ninterface Route {\n  path: string;\n  method: string;\n}\n\nexport async function syncRoute(app: INestApplication) {\n  const server = app.getHttpServer();\n  const prisma = app.get(PrismaService);\n  const router = server._events.request._router;\n  const availableRoutes: Route[] = router.stack\n    .map((layer) => {\n      if (layer.route) {\n        return {\n          route: {\n            path: layer.route?.path,\n            method: layer.route?.stack[0].method,\n          },\n        };\n      }\n    })\n    .filter(\n      (item) => item !== undefined && !item.route.path.startsWith('/sapi'),\n    )\n    .map((item) => item.route);\n  const existingRoutes = await prisma.apiPermission.findMany();\n  const existingRoutesPaths = existingRoutes.map((route) => route.path);\n  const deletedRoutes = existingRoutes.filter(\n    (route) => !availableRoutes.map((route) => route.path).includes(route.path),\n  );\n  const newRoutes = availableRoutes.filter(\n    (route) => !existingRoutesPaths.includes(route.path),\n  );\n  const deletedRes = await prisma.apiPermission.deleteMany({\n    where: {\n      id: {\n        in: deletedRoutes.map((route) => route.id),\n      },\n    },\n  });\n  const createdRes = await prisma.apiPermission.createMany({\n    data: newRoutes.map((route) => ({\n      path: route.path,\n      method: route.method,\n    })),\n  });\n  if (deletedRes.count > 0) {\n    Logger.log(`Deleted ${deletedRes.count} routes`, 'SyncRoute');\n    Logger.log(deletedRoutes, 'SyncRoute');\n  }\n  if (createdRes.count > 0) {\n    Logger.log(`Created ${createdRes.count} routes`, 'SyncRoute');\n    Logger.log(newRoutes, 'SyncRoute');\n  }\n  if (deletedRes.count > 0 || createdRes.count > 0) {\n    Logger.log('Routes synced', 'SyncRoute');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Session.html":{"url":"classes/Session.html","title":"class - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Session-1.html":{"url":"classes/Session-1.html","title":"class - Session-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                expiresAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                token\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Session {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  token: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n\n  @ApiProperty({ type: Date })\n  expiresAt: Date;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: String })\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/iam/dtos/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/iam/dtos/sign-in.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/iam/dtos/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class SignInDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/iam/dtos/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/iam/dtos/sign-up.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(20)@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/iam/dtos/sign-up.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class SignUpDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(20)\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestHelper.html":{"url":"classes/TestHelper.html","title":"class - TestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/helpers/test-helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                app\n                            \n                            \n                                cleanUpCallbacks\n                            \n                            \n                                    Private\n                                moduleRef\n                            \n                            \n                                    Public\n                                prismaClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                genToken\n                            \n                            \n                                    Async\n                                genUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    request\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockProviders: Array)\n                    \n                \n                        \n                            \n                                Defined in src/helpers/test-helper.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockProviders\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestExpressApplication\n\n                    \n                \n                    \n                        \n                                Defined in src/helpers/test-helper.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cleanUpCallbacks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/helpers/test-helper.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TestingModule\n\n                    \n                \n                    \n                        \n                                Defined in src/helpers/test-helper.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prismaClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PrismaClient\n\n                    \n                \n                    \n                        \n                                Defined in src/helpers/test-helper.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        genToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    genToken(role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/helpers/test-helper.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        genUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    genUser(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/helpers/test-helper.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        request\n                    \n                \n\n                \n                    \n                        getrequest()\n                    \n                \n                            \n                                \n                                    Defined in src/helpers/test-helper.ts:80\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Test, TestingModule } from '@nestjs/testing';\nimport { PrismaClient } from '@prisma/client';\nimport { AppModule } from '@/app.module';\nimport { NestExpressApplication } from '@nestjs/platform-express';\nimport { bootstrap } from '@/main';\nimport { syncRoute } from '@/utils/sync-route';\nimport * as request from 'supertest';\nimport { randomBytes } from 'crypto';\nimport { ValidationPipe } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\n\nexport class TestHelper {\n  private moduleRef: TestingModule;\n  public app: NestExpressApplication;\n  public prismaClient: PrismaClient;\n  cleanUpCallbacks: Array Promise> = [];\n\n  constructor(\n    mockProviders: Array = [],\n  ) {\n    this.prismaClient = new PrismaClient();\n\n    beforeAll(async () => {\n      const moduleRefBake = Test.createTestingModule({\n        imports: [AppModule],\n        providers: [\n          {\n            provide: APP_PIPE,\n            useValue: new ValidationPipe({\n              whitelist: true,\n              transform: true,\n            }),\n          },\n        ],\n      });\n\n      for (const provider of mockProviders) {\n        moduleRefBake\n          .overrideProvider(provider.overrideProvider)\n          .useClass(provider.useClass);\n      }\n\n      this.moduleRef = await moduleRefBake.compile();\n\n      const server = await this.moduleRef\n        .createNestApplication()\n        .init();\n      this.app = await bootstrap(server);\n      try {\n        await syncRoute(this.app);\n      } catch (e) {\n        // console.error(e);\n      }\n    });\n\n    afterEach(async () => {\n      for (const callback of this.cleanUpCallbacks.reverse()) {\n        await callback();\n      }\n      this.cleanUpCallbacks = [];\n    });\n\n    afterAll(async () => {\n      await this.app.close();\n      await this.prismaClient.$disconnect();\n      await this.moduleRef.close();\n\n      for (const callback of this.cleanUpCallbacks.reverse()) {\n        await callback();\n      }\n      this.cleanUpCallbacks = [];\n    });\n\n    return this;\n  }\n\n  get request() {\n    return request(this.app.getHttpServer());\n  }\n\n  async genUser({\n    email,\n    pass,\n    role,\n  }: {\n    email: string;\n    pass: string;\n    role: string;\n  }) {\n    const user = await this.prismaClient.user.create({\n      data: {\n        email,\n        password: pass,\n        role: {\n          connect: {\n            name: role,\n          },\n        },\n      },\n    });\n    this.cleanUpCallbacks.push(async () => {\n      await this.prismaClient.user.delete({\n        where: {\n          id: user.id,\n        },\n      });\n    });\n    return user;\n  }\n\n  async genToken(role: string) {\n    const user = await this.prismaClient.user.findFirst({\n      where: {\n        role: {\n          name: role,\n        },\n      },\n      include: {\n        role: true,\n      },\n    });\n\n    const res = await this.prismaClient.session.create({\n      data: {\n        token: randomBytes(32).toString('hex'),\n        expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 24 * 7),\n        user: {\n          connect: {\n            id: user.id,\n          },\n        },\n      },\n    });\n\n    this.cleanUpCallbacks.push(async () => {\n      try {\n        await this.prismaClient.session.delete({\n          where: {\n            id: res.id,\n          },\n        });\n      } catch (e) {}\n    });\n\n    return res.token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToEntity.html":{"url":"interfaces/ToEntity.html","title":"interface - ToEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/toEntity.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        toEntity\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toEntity\n                        \n                    \n                \n            \n            \n                \ntoEntity(prisma: PrismaService)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/toEntity.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prisma\n                                            \n                                                        PrismaService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaService } from 'nestjs-prisma';\n\nexport interface ToEntity {\n  toEntity(prisma: PrismaService): T | Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateApiPermissionDto.html":{"url":"classes/UpdateApiPermissionDto.html","title":"class - UpdateApiPermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateApiPermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/api-permission/dto/update-api-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                isPublic\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                permissionGroupIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                roleIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isPublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/api-permission/dto/update-api-permission.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        permissionGroupIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/api-permission/dto/update-api-permission.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        roleIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/api-permission/dto/update-api-permission.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsArray, IsBoolean } from 'class-validator';\n\nexport class UpdateApiPermissionDto {\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  roleIds?: string[];\n\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  permissionGroupIds?: string[];\n\n  @IsOptional()\n  @IsBoolean()\n  isPublic?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                operationLog\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    Optional\n                                profile\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                roleId\n                            \n                            \n                                    \n                                session\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        operationLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OperationLog[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => OperationLog})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Role})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        session\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Session[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Session})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserStatus\n\n                    \n                \n                \n                    \n                        Default value : UserStatus.ACTIVE\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: UserStatus, enumName: 'UserStatus'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Profile } from './profile';\nimport { Session } from './session';\nimport { Role } from './role';\nimport { OperationLog } from './operation_log';\nimport { UserStatus } from '@prisma/client';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class User {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  email: string;\n\n  @ApiPropertyOptional({ type: String })\n  name?: string;\n\n  @ApiProperty({ type: String })\n  password: string;\n\n  @ApiProperty({ enum: UserStatus, enumName: 'UserStatus' })\n  status: UserStatus = UserStatus.ACTIVE;\n\n  @ApiPropertyOptional({ type: () => Profile })\n  profile?: Profile;\n\n  @ApiProperty({ isArray: true, type: () => Session })\n  session: Session[];\n\n  @ApiProperty({ type: () => Role })\n  role: Role;\n\n  @ApiProperty({ type: String })\n  roleId: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n\n  @ApiProperty({ isArray: true, type: () => OperationLog })\n  operationLog: OperationLog[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: '创建用户'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginationDto: PaginationUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: '获取所有用户'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationDto\n                                            \n                                                            PaginationUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: '获取单个用户'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: '删除用户'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: '更新用户'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { PaginationUserDto } from './dto/pagination-user.dto';\n\n@ApiTags('用户管理')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({ summary: '创建用户' })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: '获取所有用户' })\n  findAll(@Body() paginationDto: PaginationUserDto) {\n    return this.userService.findAll(paginationDto);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: '获取单个用户' })\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: '更新用户' })\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: '删除用户' })\n  remove(@Param('id') id: string) {\n    return this.userService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nIamModule\n\nIamModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nIamModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IamModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { IamModule } from '../iam/iam.module';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService],\n  imports: [IamModule],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, iamService: IamService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iamService\n                                                  \n                                                        \n                                                                        IamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(dto: PaginationUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            PaginationUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IamService } from '../iam/iam.service';\nimport { PrismaService } from 'nestjs-prisma';\nimport { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { PaginationUserDto } from './dto/pagination-user.dto';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly iamService: IamService,\n  ) {}\n  async create(createUserDto: CreateUserDto) {\n    const isUserExist = await this.prisma.user.findUnique({\n      where: {\n        email: createUserDto.email,\n      },\n    });\n    if (isUserExist) {\n      throw new BadRequestException('User already exists');\n    }\n    const password = await this.iamService.hash(createUserDto.password);\n    const newUser = await this.prisma.user.create({\n      data: {\n        name: createUserDto.name,\n        email: createUserDto.email,\n        password,\n        status: createUserDto.status ?? 'ACTIVE',\n        role: {\n          connect: createUserDto.roleId\n            ? { id: createUserDto.roleId }\n            : { name: 'user' },\n        },\n        profile: {\n          create: {\n            phone: createUserDto.phone,\n            bio: createUserDto.bio,\n          },\n        },\n      },\n    });\n    delete newUser.password;\n    return newUser;\n  }\n\n  async findAll(dto: PaginationUserDto) {\n    const { page, pageSize } = dto;\n    const total = await this.prisma.user.count({\n      where: {\n        deletedAt: null,\n        id: {\n          contains: dto.filter?.id,\n        },\n        email: {\n          contains: dto.filter?.email,\n        },\n        name: {\n          contains: dto.filter?.name,\n        },\n        status: {\n          equals: dto.filter?.status,\n        },\n        roleId: {\n          equals: dto.filter?.roleId,\n        },\n      },\n    });\n    const users = await this.prisma.user.findMany({\n      skip: (page - 1) * pageSize,\n      take: pageSize,\n      include: {\n        role: true,\n        profile: true,\n      },\n      where: {\n        deletedAt: null,\n        id: {\n          contains: dto.filter?.id,\n        },\n        email: {\n          contains: dto.filter?.email,\n        },\n        name: {\n          contains: dto.filter?.name,\n        },\n        status: {\n          equals: dto.filter?.status,\n        },\n        roleId: {\n          equals: dto.filter?.roleId,\n        },\n      },\n    });\n    const noPassUsers = users.map((user) => {\n      delete user.password;\n      return user;\n    });\n    return {\n      total,\n      page,\n      pageSize,\n      data: noPassUsers,\n    };\n  }\n\n  async findOne(id: string) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        role: true,\n        profile: true,\n        operationLog: true,\n      },\n    });\n    delete user.password;\n    return user;\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        role: true,\n        profile: true,\n      },\n    });\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n    const updatedUser = await this.prisma.user.update({\n      where: {\n        id,\n      },\n      data: {\n        name: updateUserDto.name,\n        email: updateUserDto.email,\n        password: updateUserDto.password\n          ? await this.iamService.hash(updateUserDto.password)\n          : undefined,\n        status: updateUserDto.status,\n        roleId: updateUserDto.roleId,\n        profile: {\n          update: {\n            data: {\n              phone: updateUserDto.phone,\n              bio: updateUserDto.bio,\n            },\n          },\n        },\n      },\n    });\n    delete updatedUser.password;\n    return updatedUser;\n  }\n\n  async remove(id: string) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n    await this.prisma.user.update({\n      where: {\n        id,\n      },\n      data: {\n        deletedAt: new Date(),\n      },\n    });\n    return { message: 'success' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                prisma/seed.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/api_permission.ts\n            \n            class\n            ApiPermission\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/api_permission_group.ts\n            \n            class\n            ApiPermissionGroup\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            ApiPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            ApiPermissionGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            OperationLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            PermissionGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Session\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            variable\n            extraModels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/operation_log.ts\n            \n            class\n            OperationLog\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/permission.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/permission_group.ts\n            \n            class\n            PermissionGroup\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/profile.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/role.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/session.ts\n            \n            class\n            Session\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFilePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/dtos/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/commons/pipes/all-in-db.pipe.ts\n            \n            function\n            IsUUIDsALLInDataBase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/pipes/all-in-db.pipe.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/pipes/not-same-name.pipe.ts\n            \n            function\n            IsNotSameNameInDataBase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/pipes/not-same-name.pipe.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/app-config.ts\n            \n            interface\n            IAppConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/configs/app-config.ts\n            \n            variable\n            APP_CONFIG_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helpers/test-helper.ts\n            \n            class\n            TestHelper\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/api-permission/api-permission.controller.ts\n            \n            controller\n            ApiPermissionController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/api-permission/api-permission.service.ts\n            \n            injectable\n            ApiPermissionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/api-permission/dto/pagination-api-permission.dto.ts\n            \n            class\n            PaginationApiPermissionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/api-permission/dto/update-api-permission.dto.ts\n            \n            class\n            UpdateApiPermissionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/iam/constants/iam-init.constant.ts\n            \n            variable\n            IAM_INIT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/iam/constants/preset-role.constant.ts\n            \n            variable\n            PRESET_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/iam/decorators/get-token.decorator.ts\n            \n            variable\n            GetToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/iam/decorators/get-ua.decorator.ts\n            \n            variable\n            GetUA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/iam/decorators/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/iam/dtos/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/iam/dtos/sign-up.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/iam/guards/api-permission.guard.ts\n            \n            guard\n            ApiPermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/iam/iam.controller.ts\n            \n            controller\n            IamController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/iam/iam.service.ts\n            \n            injectable\n            IamService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/permission/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/permission/dto/pagination-permission.dto.ts\n            \n            class\n            PaginationPermissionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/permission/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permission/permission.controller.ts\n            \n            controller\n            PermissionController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/permission/permission.service.ts\n            \n            injectable\n            PermissionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/role/dto/pagination-role.dto.ts\n            \n            class\n            PaginationRoleDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/role/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/dto/pagination-user.dto.ts\n            \n            class\n            PaginationUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/utils/init.ts\n            \n            class\n            InitUtil\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/init.ts\n            \n            variable\n            initSubject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/sync-route.ts\n            \n            interface\n            Route\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/sync-route.ts\n            \n            function\n            syncRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/toEntity.interface.ts\n            \n            interface\n            ToEntity\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.0.2\n        \n            @nestjs/cache-manager : ^2.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/devtools-integration : ^0.1.6\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.3.10\n        \n            @nestjs/schedule : ^4.1.0\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/websockets : ^10.3.10\n        \n            @prisma/client : 5.16.1\n        \n            axios : ^1.7.2\n        \n            bcrypt : ^5.1.1\n        \n            cache-manager : ^5.7.3\n        \n            chalk : 4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            cross-env : ^7.0.3\n        \n            moment : ^2.30.1\n        \n            nest-winston : ^1.10.0\n        \n            nestjs-prisma : ^0.23.0\n        \n            prisma-class-generator : ^0.2.9\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            winston : ^3.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IsNotSameNameInDataBase   (src/.../not-same-name.pipe.ts)\n                        \n                        \n                            IsUUIDsALLInDataBase   (src/.../all-in-db.pipe.ts)\n                        \n                        \n                            main   (src/.../main.ts)\n                        \n                        \n                            seed   (prisma/.../seed.ts)\n                        \n                        \n                            syncRoute   (src/.../sync-route.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap(app: NestExpressApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        NestExpressApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    src/commons/pipes/not-same-name.pipe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsNotSameNameInDataBase\n                        \n                    \n                \n            \n            \n                \nIsNotSameNameInDataBase(entityName: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/commons/pipes/all-in-db.pipe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsUUIDsALLInDataBase\n                        \n                    \n                \n            \n            \n                \nIsUUIDsALLInDataBase(entityName: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        seed\n                        \n                    \n                \n            \n            \n                \nseed(prisma: PrismaClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/sync-route.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        syncRoute\n                        \n                    \n                \n            \n            \n                \nsyncRoute(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiPermissionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiPermissionModule\n\n\n\ncluster_ApiPermissionModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_IamModule\n\n\n\ncluster_IamModule_exports\n\n\n\ncluster_IamModule_providers\n\n\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nApiPermissionService\n\nApiPermissionService\n\n\n\nApiPermissionModule\n\nApiPermissionModule\n\nApiPermissionModule -->\n\nApiPermissionService->ApiPermissionModule\n\n\n\n\n\nIamModule\n\nIamModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nIamModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nIamService \n\nIamService \n\nIamService  -->\n\nIamModule->IamService \n\n\n\n\n\nPermissionModule\n\nPermissionModule\n\nAppModule -->\n\nPermissionModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nIamService\n\nIamService\n\nIamModule -->\n\nIamService->IamModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nPermissionModule -->\n\nPermissionService->PermissionModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    34 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : MIT\n        \n            Author : gylove1994\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArrayElement   (src/.../omit-by-array.ts)\n                        \n                        \n                            OmitByArray   (src/.../omit-by-array.ts)\n                        \n                        \n                            PickByArray   (src/.../omit-by-array.ts)\n                        \n                        \n                            WhereType   (src/.../pagination.dto.ts)\n                        \n                        \n                            WhereTypeWithMapper   (src/.../pagination.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/omit-by-array.ts\n    \n    \n        \n            \n                \n                    \n                    ArrayElement\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OmitByArray\n                \n            \n            \n                \n                            Pick>>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PickByArray\n                \n            \n            \n                \n                            Pick>\n\n                \n            \n        \n    \n    src/commons/dtos/pagination.dto.ts\n    \n    \n        \n            \n                \n                    \n                    WhereType\n                \n            \n            \n                \n                        \"in\" | \"contains\" | \"eq\" | \"lt\" | \"lte\" | \"gt\" | \"gte\" | \"sin\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WhereTypeWithMapper\n                \n            \n            \n                \n                            [WhereType, ]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APP_CONFIG_TOKEN   (src/.../app-config.ts)\n                        \n                        \n                            envFilePath   (src/.../app.module.ts)\n                        \n                        \n                            extraModels   (src/.../index.ts)\n                        \n                        \n                            GetToken   (src/.../get-token.decorator.ts)\n                        \n                        \n                            GetUA   (src/.../get-ua.decorator.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            IAM_INIT_KEY   (src/.../iam-init.constant.ts)\n                        \n                        \n                            initSubject   (src/.../init.ts)\n                        \n                        \n                            PRESET_ROLE   (src/.../preset-role.constant.ts)\n                        \n                        \n                            prisma   (src/.../all-in-db.pipe.ts)\n                        \n                        \n                            prisma   (src/.../not-same-name.pipe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configs/app-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_CONFIG_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app'\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFilePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n\n        \n    \n\n    src/_gen/prisma-class/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extraModels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ]\n                    \n                \n\n\n        \n    \n\n    src/modules/iam/decorators/get-token.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const req = ctx.switchToHttp().getRequest();\n    return req.headers['authorization'];\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/iam/decorators/get-ua.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const req = ctx.switchToHttp().getRequest();\n    return req.headers['user-agent'];\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/iam/decorators/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const req = ctx.switchToHttp().getRequest();\n    return req.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/iam/constants/iam-init.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IAM_INIT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'IAM_INIT'\n                    \n                \n\n\n        \n    \n\n    src/utils/init.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n\n\n        \n    \n\n    src/modules/iam/constants/preset-role.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PRESET_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'admin',\n    description: '系统内置角色，不可删除',\n    deletable: false,\n    status: 'ACTIVE' as Role['status'],\n  },\n  {\n    name: 'user',\n    description: '系统内置角色，不可删除',\n    deletable: false,\n    status: 'ACTIVE' as Role['status'],\n  },\n  {\n    name: 'guest',\n    description: '系统内置角色，不可删除',\n    deletable: false,\n    status: 'ACTIVE' as Role['status'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/commons/pipes/all-in-db.pipe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n    src/commons/pipes/not-same-name.pipe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
