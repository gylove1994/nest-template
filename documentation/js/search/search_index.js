var COMPODOC_SEARCH_INDEX = {
  index: {
    version: '2.3.9',
    fields: ['title', 'body'],
    fieldVectors: [
      ['title/classes/ApiPermission.html', [0, 0.275, 1, 1.277]],
      [
        'body/classes/ApiPermission.html',
        [
          0, 0.244, 1, 1.596, 2, 0.505, 3, 0.121, 4, 0.108, 5, 0.108, 6, 2.585,
          7, 3.154, 8, 0.352, 9, 0.934, 10, 5.152, 11, 3.145, 12, 1.08, 13,
          1.548, 14, 1.164, 15, 4.646, 16, 4.646, 17, 5.92, 18, 4.269, 19,
          3.716, 20, 3.145, 21, 0.795, 22, 0.014, 23, 2.759, 24, 1.607, 25,
          3.716, 26, 1.974, 27, 1.103, 28, 3.624, 29, 3.129, 30, 3.11, 31,
          3.624, 32, 1.251, 33, 1.926, 34, 3.624, 35, 3.624, 36, 3.252, 37,
          3.624, 38, 3.624, 39, 2.55, 40, 3.624, 41, 3.624, 42, 1.974, 43,
          3.624, 44, 3.624, 45, 0.215, 46, 1.833, 47, 1.75, 48, 2.376, 49,
          2.715, 50, 0.794, 51, 0.121, 52, 2.858, 53, 0.008, 54, 0.008,
        ],
      ],
      ['title/classes/ApiPermission-1.html', [0, 0.23, 1, 1.07, 55, 1.515]],
      [
        'body/classes/ApiPermission-1.html',
        [
          0, 0.529, 1, 2.2, 2, 0.628, 3, 0.151, 4, 0.134, 5, 0.134, 6, 1.516,
          22, 0.014, 23, 2.699, 39, 2.494, 42, 1.977, 45, 0.263, 46, 2.283, 47,
          2.179, 51, 0.267, 53, 0.01, 54, 0.01, 56, 2.179, 57, 1.977, 58, 3.002,
          59, 2.755, 60, 3.153, 61, 2.755, 62, 3.153, 63, 3.153, 64, 2.048, 65,
          3.153, 66, 2.699, 67, 3.153, 68, 2.283, 69, 3.153, 70, 2.083, 71,
          3.153, 72, 3.153, 73, 2.397, 74, 2.397, 75, 2.641, 76, 1.139, 77,
          2.179,
        ],
      ],
      [
        'title/controllers/ApiPermissionController.html',
        [78, 1.974, 79, 2.948],
      ],
      [
        'body/controllers/ApiPermissionController.html',
        [
          0, 0.261, 1, 2.171, 3, 0.13, 4, 0.115, 5, 0.115, 8, 0.377, 12, 1.298,
          14, 0.763, 21, 0.699, 22, 0.014, 24, 1.298, 27, 0.89, 45, 0.251, 50,
          0.85, 51, 0.13, 53, 0.009, 54, 0.009, 64, 1.786, 78, 1.874, 79, 3.865,
          80, 1.874, 81, 3.706, 82, 4.438, 83, 3.378, 84, 2.601, 85, 4.201, 86,
          1.869, 87, 3, 88, 3, 89, 3, 90, 2.798, 91, 4.438, 92, 3.881, 93,
          6.141, 94, 4.776, 95, 3.881, 96, 2.064, 97, 1.496, 98, 2.475, 99,
          2.064, 100, 2.798, 101, 4.438, 102, 3.881, 103, 3.881, 104, 2.588,
          105, 3.378, 106, 4.817, 107, 3.881, 108, 3.881, 109, 2.172, 110,
          3.365, 111, 2.062, 112, 2.601, 113, 2.172, 114, 3.881, 115, 1.089,
          116, 3.855, 117, 2.798, 118, 2.172, 119, 4.438, 120, 5.199, 121,
          2.601, 122, 3.046, 123, 3.592, 124, 3.881, 125, 2.172, 126, 3.046,
          127, 3.881, 128, 2.172, 129, 3.046, 130, 3.881, 131, 3.881, 132,
          3.881, 133, 1.874, 134, 1.353, 135, 3.046, 136, 6.141, 137, 4.115,
          138, 3.046, 139, 1.851, 140, 3.881, 141, 2.798, 142, 2.798, 143,
          3.881, 144, 2.798, 145, 2.798, 146, 3.881,
        ],
      ],
      ['title/classes/ApiPermissionGroup.html', [0, 0.275, 23, 1.664]],
      [
        'body/classes/ApiPermissionGroup.html',
        [
          0, 0.284, 1, 2.238, 2, 0.589, 3, 0.141, 4, 0.126, 5, 0.126, 6, 2.574,
          8, 0.411, 9, 1.039, 11, 3.412, 12, 1.451, 13, 1.679, 14, 1.262, 20,
          3.412, 21, 0.788, 22, 0.014, 23, 2.314, 24, 1.593, 25, 2.656, 26,
          1.595, 27, 1.093, 29, 3.378, 30, 3.035, 32, 1.251, 33, 3.021, 45,
          0.19, 48, 2.304, 49, 3.412, 50, 0.927, 51, 0.141, 52, 2.043, 53,
          0.009, 54, 0.009, 70, 1.953, 97, 1.564, 147, 3.682, 148, 3.1, 149,
          4.303, 150, 4.231, 151, 4.231, 152, 4.231, 153, 4.231, 154, 4.231,
          155, 4.231, 156, 4.231,
        ],
      ],
      [
        'title/classes/ApiPermissionGroup-1.html',
        [0, 0.23, 23, 1.395, 55, 1.515],
      ],
      [
        'body/classes/ApiPermissionGroup-1.html',
        [
          0, 0.529, 1, 2.071, 2, 0.628, 3, 0.151, 4, 0.134, 5, 0.134, 6, 1.516,
          22, 0.014, 23, 2.867, 39, 2.494, 42, 1.977, 45, 0.263, 46, 2.283, 47,
          2.179, 51, 0.267, 53, 0.01, 54, 0.01, 56, 2.179, 57, 1.977, 58, 3.002,
          59, 2.755, 60, 3.153, 61, 2.755, 62, 3.153, 63, 3.153, 64, 2.048, 65,
          3.153, 66, 2.699, 67, 3.153, 68, 2.283, 69, 3.153, 70, 2.083, 71,
          3.153, 72, 3.153, 73, 2.397, 74, 2.397, 75, 2.641, 76, 1.139, 77,
          2.179,
        ],
      ],
      ['title/guards/ApiPermissionGuard.html', [157, 3.209, 158, 2.948]],
      [
        'body/guards/ApiPermissionGuard.html',
        [
          0, 0.213, 1, 0.988, 3, 0.106, 4, 0.094, 5, 0.094, 8, 0.308, 12, 0.98,
          16, 4.306, 18, 3.955, 19, 1.986, 21, 0.451, 22, 0.014, 26, 1.948, 27,
          0.672, 29, 1.341, 42, 1.539, 45, 0.202, 51, 0.106, 53, 0.008, 54,
          0.008, 57, 1.804, 61, 2.362, 76, 1.863, 85, 1.771, 86, 1.616, 96,
          1.558, 97, 1.129, 99, 1.063, 111, 1.681, 113, 1.771, 115, 0.888, 133,
          1.528, 134, 1.103, 139, 1.82, 158, 4.636, 159, 3.164, 160, 4.774, 161,
          2.754, 162, 2.425, 163, 6.04, 164, 1.461, 165, 1.871, 166, 3.38, 167,
          3.164, 168, 2.233, 169, 4.635, 170, 4.047, 171, 3.164, 172, 3.164,
          173, 2.91, 174, 1.678, 175, 2.12, 176, 3.164, 177, 1.341, 178, 5.595,
          179, 2.483, 180, 1.528, 181, 1.986, 182, 4.635, 183, 2.754, 184,
          4.047, 185, 2.754, 186, 1.871, 187, 2.968, 188, 2.754, 189, 2.282,
          190, 2.12, 191, 1.913, 192, 3.791, 193, 2.282, 194, 4.034, 195, 3.164,
          196, 2.97, 197, 4.635, 198, 4.635, 199, 3.164, 200, 3.164, 201, 2.754,
          202, 3.164, 203, 3.164, 204, 3.164, 205, 3.164, 206, 4.635, 207,
          3.164, 208, 2.168, 209, 3.164, 210, 3.164, 211, 3.164, 212, 3.164,
          213, 2.12, 214, 3.164, 215, 3.164, 216, 6.04, 217, 3.164, 218, 3.164,
          219, 3.164, 220, 2.594, 221, 3.164, 222, 3.955, 223, 3.164, 224,
          3.164, 225, 3.164, 226, 3.164, 227, 2.754, 228, 5.486, 229, 5.486,
          230, 3.676, 231, 4.306, 232, 4.774, 233, 6.04, 234, 4.635, 235, 3.164,
          236, 3.164, 237, 3.164, 238, 1.965,
        ],
      ],
      ['title/classes/ApiPermissionIdExistDto.html', [0, 0.275, 101, 2.74]],
      [
        'body/classes/ApiPermissionIdExistDto.html',
        [
          0, 0.442, 2, 0.738, 3, 0.177, 4, 0.157, 5, 0.157, 8, 0.516, 9, 1.202,
          13, 1.386, 14, 1.512, 21, 0.516, 22, 0.014, 24, 1.12, 27, 0.769, 32,
          1.032, 45, 0.239, 48, 2.055, 50, 1.161, 51, 0.177, 53, 0.011, 54,
          0.011, 64, 1.913, 81, 3.681, 101, 4.408, 239, 5.725, 240, 3.553, 241,
          4.614, 242, 5.725, 243, 4.743, 244, 5.163, 245, 5.163, 246, 5.163,
          247, 5.163, 248, 5.163, 249, 5.302, 250, 2.967, 251, 3.328, 252,
          3.328, 253, 3.681, 254, 1.994, 255, 5.302,
        ],
      ],
      ['title/modules/ApiPermissionModule.html', [256, 1.808, 257, 2.74]],
      [
        'body/modules/ApiPermissionModule.html',
        [
          0, 0.368, 3, 0.183, 4, 0.163, 5, 0.163, 22, 0.014, 45, 0.243, 51,
          0.183, 53, 0.011, 54, 0.011, 79, 4.84, 80, 2.645, 81, 3.066, 82,
          3.671, 85, 3.756, 115, 1.537, 116, 4.958, 117, 3.95, 256, 3.209, 257,
          5.293, 258, 2.911, 259, 2.911, 260, 3.24, 261, 3.24, 262, 2.772, 263,
          4.061, 264, 3.24, 265, 4.768, 266, 4.768, 267, 3.969, 268, 3.24, 269,
          3.24, 270, 5.479, 271, 4.768,
        ],
      ],
      ['title/injectables/ApiPermissionService.html', [116, 2.566, 174, 1.48]],
      [
        'body/injectables/ApiPermissionService.html',
        [
          0, 0.233, 1, 2.082, 3, 0.116, 4, 0.103, 5, 0.103, 8, 0.337, 10, 5.026,
          12, 1.331, 14, 1.31, 15, 2.719, 19, 4.183, 21, 0.694, 22, 0.014, 26,
          1.87, 27, 0.914, 32, 0.906, 45, 0.232, 51, 0.116, 53, 0.008, 54,
          0.008, 76, 1.749, 81, 3.729, 82, 4.466, 85, 2.77, 86, 1.726, 87, 2.77,
          88, 2.77, 89, 2.77, 90, 3.569, 91, 4.222, 96, 2.117, 97, 1.623, 98,
          1.599, 99, 1.941, 105, 4.308, 106, 4.644, 109, 1.939, 110, 3.107, 115,
          0.972, 116, 3.107, 118, 1.939, 128, 1.939, 129, 2.719, 133, 1.673,
          134, 1.208, 139, 1.74, 162, 3.283, 164, 1.599, 165, 2.049, 166, 3.525,
          168, 2.351, 174, 1.792, 180, 1.673, 187, 2.909, 192, 3.625, 193,
          2.498, 208, 1.082, 272, 1.939, 273, 3.015, 274, 3.465, 275, 3.465,
          276, 2.666, 277, 3.569, 278, 3.465, 279, 3.465, 280, 2.719, 281,
          3.465, 282, 3.465, 283, 2.175, 284, 2.049, 285, 3.317, 286, 3.317,
          287, 3.569, 288, 3.317, 289, 3.015, 290, 3.465, 291, 2.188, 292,
          3.465, 293, 3.465, 294, 3.465, 295, 3.465, 296, 3.465, 297, 3.465,
          298, 3.465, 299, 3.107, 300, 3.465, 301, 3.465, 302, 2.719, 303,
          3.465,
        ],
      ],
      ['title/modules/AppModule.html', [256, 1.808, 304, 2.74]],
      [
        'body/modules/AppModule.html',
        [
          0, 0.236, 3, 0.117, 4, 0.104, 5, 0.104, 18, 4.197, 22, 0.014, 26,
          1.954, 45, 0.267, 51, 0.117, 53, 0.008, 54, 0.008, 76, 0.887, 82,
          2.355, 115, 0.986, 139, 1.059, 166, 3.548, 168, 1.43, 180, 2.414, 191,
          2.211, 238, 1.49, 256, 2.573, 257, 3.351, 258, 1.867, 259, 1.867, 260,
          2.078, 261, 2.078, 262, 1.778, 263, 2.798, 264, 2.078, 267, 2.957,
          268, 2.078, 269, 2.078, 304, 5.174, 305, 3.058, 306, 3.058, 307,
          4.371, 308, 4.666, 309, 4.666, 310, 4.666, 311, 2.758, 312, 3.924,
          313, 4.352, 314, 3.514, 315, 3.058, 316, 3.058, 317, 3.514, 318,
          6.341, 319, 2.758, 320, 3.514, 321, 5, 322, 3.514, 323, 3.514, 324,
          3.514, 325, 3.514, 326, 3.514, 327, 3.514, 328, 3.514, 329, 3.514,
          330, 5, 331, 3.514, 332, 3.058, 333, 3.058, 334, 5, 335, 4.352, 336,
          4.831, 337, 2.078, 338, 3.514, 339, 3.058, 340, 3.514, 341, 3.514,
          342, 5.066, 343, 4.572, 344, 2.534, 345, 3.514, 346, 3.058, 347,
          2.206, 348, 3.514, 349, 3.924, 350, 3.924, 351, 3.514, 352, 3.514,
          353, 2.758, 354, 3.058, 355, 3.514, 356, 3.514, 357, 5.821, 358,
          3.514, 359, 3.514, 360, 3.058, 361, 3.514, 362, 3.514, 363, 3.514,
          364, 3.514, 365, 3.514, 366, 3.514, 367, 3.058, 368, 3.514, 369,
          3.514, 370, 3.514, 371, 3.514, 372, 3.514, 373, 3.924, 374, 3.058,
          375, 3.514, 376, 3.514, 377, 3.058, 378, 2.206, 379, 3.514, 380,
          3.514, 381, 3.514,
        ],
      ],
      ['title/interfaces/BuildWhereOptions.html', [382, 1.808, 383, 2.418]],
      [
        'body/interfaces/BuildWhereOptions.html',
        [
          0, 0.334, 3, 0.09, 4, 0.08, 5, 0.08, 8, 0.261, 9, 0.749, 12, 0.866,
          13, 1.072, 14, 0.528, 21, 0.615, 22, 0.014, 26, 0.754, 32, 0.421, 36,
          2.816, 45, 0.186, 48, 1.554, 50, 0.588, 51, 0.2, 53, 0.007, 54, 0.007,
          55, 1.187, 76, 1.513, 98, 1.893, 134, 0.936, 139, 2.292, 190, 3.333,
          191, 0.936, 196, 1.813, 208, 0.839, 238, 2.36, 254, 1.01, 283, 3.494,
          284, 2.941, 286, 2.747, 287, 1.936, 291, 1.813, 378, 3.122, 382,
          1.187, 383, 2.941, 384, 1.686, 385, 1.936, 386, 4.013, 387, 1.936,
          388, 3.568, 389, 4.328, 390, 2.337, 391, 2.337, 392, 2.337, 393,
          1.799, 394, 1.799, 395, 1.686, 396, 3.218, 397, 3.586, 398, 3.903,
          399, 3.903, 400, 3.903, 401, 3.218, 402, 3.122, 403, 4.328, 404,
          2.074, 405, 3.903, 406, 3.972, 407, 2.337, 408, 2.573, 409, 3.568,
          410, 2.747, 411, 2.747, 412, 2.424, 413, 2.337, 414, 3.169, 415,
          3.568, 416, 2.178, 417, 2.401, 418, 2.337, 419, 2.337, 420, 1.686,
          421, 1.686, 422, 1.686, 423, 1.686, 424, 1.936, 425, 2.178, 426,
          1.799, 427, 1.799, 428, 3.568, 429, 4.328, 430, 1.799, 431, 1.799,
          432, 2.337, 433, 2.337, 434, 3.568, 435, 3.568, 436, 3.568, 437,
          3.568, 438, 3.568, 439, 3.568, 440, 3.568, 441, 3.568, 442, 2.337,
          443, 2.337, 444, 1.799, 445, 1.799, 446, 2.337, 447, 2.337, 448,
          2.337, 449, 4.328, 450, 2.337, 451, 3.568, 452, 2.337, 453, 1.799,
          454, 1.98, 455, 1.799, 456, 2.337, 457, 2.337, 458, 2.337, 459, 5.899,
          460, 5.899, 461, 1.799, 462, 3.568, 463, 2.337, 464, 2.337, 465,
          2.337, 466, 1.936, 467, 2.337, 468, 3.568, 469, 1.686, 470, 1.799,
        ],
      ],
      ['title/classes/CreatePermissionDto.html', [0, 0.275, 471, 2.418]],
      [
        'body/classes/CreatePermissionDto.html',
        [
          0, 0.372, 2, 0.566, 3, 0.136, 4, 0.121, 5, 0.121, 8, 0.395, 9, 1.011,
          12, 1.604, 13, 1.95, 14, 1.328, 21, 0.757, 22, 0.014, 24, 1.427, 26,
          1.553, 27, 0.979, 32, 1.222, 45, 0.236, 48, 2.207, 50, 0.89, 51,
          0.136, 53, 0.009, 54, 0.009, 97, 1.533, 115, 1.141, 250, 2.275, 251,
          2.552, 252, 2.552, 253, 2.275, 254, 1.529, 285, 4.216, 288, 4.216,
          422, 2.552, 423, 3.474, 471, 3.272, 472, 6.149, 473, 2.404, 474,
          4.065, 475, 5.546, 476, 4.065, 477, 4.065, 478, 4.065, 479, 4.065,
          480, 5.878, 481, 4.87, 482, 5.534, 483, 5.301, 484, 6.754, 485, 4.065,
          486, 4.065, 487, 4.065, 488, 4.065, 489, 3.191, 490, 4.065, 491,
          2.931, 492, 4.065, 493, 3.721, 494, 3.343, 495, 3.538, 496, 4.065,
          497, 4.065, 498, 5.534, 499, 5.534, 500, 3.191, 501, 4.065,
        ],
      ],
      ['title/classes/CreateRoleDto.html', [0, 0.275, 502, 2.566]],
      [
        'body/classes/CreateRoleDto.html',
        [
          0, 0.425, 2, 0.693, 3, 0.167, 4, 0.148, 5, 0.148, 8, 0.484, 9, 1.155,
          13, 1.817, 21, 0.711, 22, 0.014, 24, 1.545, 26, 1.775, 27, 1.06, 32,
          1.245, 45, 0.167, 51, 0.167, 53, 0.01, 54, 0.01, 97, 1.693, 253,
          2.787, 254, 1.873, 480, 6.364, 481, 5.272, 493, 4.324, 494, 3.885,
          502, 3.97, 503, 6.569, 504, 3.591, 505, 6.95, 506, 6.95, 507, 6.325,
          508, 4.98, 509, 4.334, 510, 4.98, 511, 4.98, 512, 4.98,
        ],
      ],
      ['title/classes/CreateUserDto.html', [0, 0.275, 513, 2.566]],
      [
        'body/classes/CreateUserDto.html',
        [
          0, 0.348, 2, 0.513, 3, 0.123, 4, 0.109, 5, 0.109, 8, 0.358, 9, 0.945,
          12, 1.646, 13, 1.938, 14, 1.017, 21, 0.721, 22, 0.014, 24, 1.566, 27,
          1.075, 32, 1.24, 45, 0.2, 48, 2.353, 50, 0.807, 51, 0.123, 53, 0.009,
          54, 0.009, 97, 1.455, 177, 1.562, 196, 1.629, 253, 2.893, 254, 1.386,
          424, 3.728, 475, 5.7, 493, 4.295, 494, 3.441, 513, 3.246, 514, 6.556,
          515, 2.657, 516, 5.199, 517, 4.689, 518, 3.343, 519, 3.533, 520,
          4.689, 521, 4.307, 522, 3.533, 523, 3.685, 524, 3.685, 525, 3.685,
          526, 3.685, 527, 3.685, 528, 3.685, 529, 3.685, 530, 5.171, 531,
          3.685, 532, 3.685, 533, 5.171, 534, 5.199, 535, 5.171, 536, 3.685,
          537, 3.685, 538, 3.685, 539, 3.207, 540, 3.685, 541, 5.974, 542,
          3.685, 543, 3.465, 544, 3.685, 545, 3.685, 546, 4.058, 547, 3.207,
          548, 3.685, 549, 5.171, 550, 3.685, 551, 3.685, 552, 3.207, 553,
          3.685, 554, 3.685, 555, 3.685,
        ],
      ],
      ['title/injectables/DBValidationPipe.html', [174, 1.48, 347, 2.566]],
      [
        'body/injectables/DBValidationPipe.html',
        [
          0, 0.167, 3, 0.083, 4, 0.074, 5, 0.074, 8, 0.241, 9, 0.705, 12, 0.816,
          21, 0.643, 22, 0.014, 26, 1.328, 27, 0.774, 32, 0.606, 36, 1.256, 45,
          0.179, 51, 0.214, 53, 0.006, 54, 0.006, 76, 1.892, 86, 1.346, 96,
          1.297, 97, 0.94, 99, 1.297, 104, 2.792, 111, 1.319, 113, 1.389, 115,
          0.697, 134, 2.017, 139, 2.129, 162, 2.093, 164, 2.185, 165, 1.468,
          168, 2.354, 170, 3.578, 173, 2.422, 174, 1.397, 175, 3.578, 177,
          1.052, 181, 1.558, 186, 2.282, 187, 2.185, 191, 2.017, 196, 1.706,
          208, 1.479, 220, 1.389, 238, 1.052, 272, 1.389, 276, 2.465, 336,
          4.608, 337, 1.468, 347, 2.972, 378, 2.422, 382, 1.706, 393, 1.663,
          394, 1.663, 395, 1.558, 404, 2.701, 406, 2.837, 414, 2.801, 444,
          1.663, 445, 1.663, 454, 2.792, 556, 1.468, 557, 4.415, 558, 3.843,
          559, 2.482, 560, 2.482, 561, 2.16, 562, 2.783, 563, 3.414, 564, 3.85,
          565, 2.482, 566, 1.198, 567, 3.029, 568, 2.482, 569, 2.282, 570, 3.85,
          571, 1.948, 572, 2.783, 573, 1.948, 574, 4.282, 575, 1.558, 576,
          4.282, 577, 1.79, 578, 3.578, 579, 2.8, 580, 1.79, 581, 3.876, 582,
          2.586, 583, 1.389, 584, 1.948, 585, 3.172, 586, 3.716, 587, 1.468,
          588, 2.8, 589, 1.79, 590, 3.414, 591, 1.948, 592, 1.663, 593, 3.414,
          594, 3.414, 595, 3.716, 596, 3.029, 597, 3.029, 598, 1.948, 599,
          1.948, 600, 1.948, 601, 3.716, 602, 3.716, 603, 1.948, 604, 1.948,
          605, 3.029, 606, 1.948, 607, 1.948, 608, 3.029, 609, 1.948, 610,
          2.783, 611, 1.948, 612, 1.948, 613, 1.948, 614, 3.029, 615, 1.948,
          616, 1.948, 617, 1.948, 618, 1.948, 619, 3.029, 620, 1.948, 621, 1.79,
          622, 1.948, 623, 1.948, 624, 1.948, 625, 1.468, 626, 1.948, 627,
          1.948, 628, 2.783, 629, 1.948, 630, 1.663, 631, 3.414, 632, 3.414,
          633, 1.79, 634, 1.663, 635, 1.79, 636, 1.663, 637, 1.79,
        ],
      ],
      ['title/interfaces/IAppConfig.html', [382, 1.808, 638, 3.209]],
      [
        'body/interfaces/IAppConfig.html',
        [
          3, 0.157, 4, 0.139, 5, 0.139, 8, 0.455, 9, 1.111, 13, 1.225, 21,
          0.738, 22, 0.014, 32, 1.287, 45, 0.157, 51, 0.226, 53, 0.01, 54, 0.01,
          76, 1.182, 139, 1.411, 180, 2.936, 319, 3.676, 350, 3.676, 353, 3.676,
          354, 6.445, 382, 2.071, 384, 2.94, 417, 3.26, 421, 2.94, 566, 2.261,
          628, 3.377, 638, 5.299, 639, 3.676, 640, 3.676, 641, 7.406, 642,
          7.406, 643, 7.406, 644, 7.406, 645, 6.445, 646, 4.684, 647, 3.676,
          648, 4.524, 649, 4.684, 650, 4.684, 651, 4.684, 652, 4.684, 653,
          4.684, 654, 4.684, 655, 4.684, 656, 4.684, 657, 4.684,
        ],
      ],
      ['title/controllers/IamController.html', [78, 1.974, 658, 2.948]],
      [
        'body/controllers/IamController.html',
        [
          0, 0.263, 3, 0.131, 4, 0.116, 5, 0.116, 8, 0.38, 12, 1.303, 21, 0.6,
          22, 0.014, 24, 1.303, 27, 0.894, 32, 1.131, 45, 0.255, 50, 0.857, 51,
          0.131, 53, 0.009, 54, 0.009, 57, 2.022, 78, 1.889, 80, 1.889, 84,
          2.621, 86, 1.88, 96, 2.072, 97, 1.502, 99, 2.072, 104, 3.209, 111,
          2.078, 112, 2.621, 115, 1.098, 119, 4.453, 121, 3.612, 123, 3.612,
          133, 1.889, 134, 1.364, 137, 4.132, 139, 1.858, 162, 3.375, 177,
          1.658, 184, 4.453, 276, 2.847, 658, 3.887, 659, 3.404, 660, 3.912,
          661, 4.691, 662, 5.39, 663, 4.691, 664, 3.404, 665, 4.453, 666, 5.784,
          667, 3.912, 668, 3.912, 669, 4.84, 670, 3.912, 671, 3.912, 672, 3.912,
          673, 3.404, 674, 4.453, 675, 3.912, 676, 3.912, 677, 3.647, 678,
          3.404, 679, 4.691, 680, 3.404, 681, 3.404, 682, 3.07, 683, 6.167, 684,
          3.912, 685, 4.231, 686, 3.912, 687, 4.231, 688, 3.912, 689, 3.912,
          690, 3.912, 691, 3.912, 692, 3.912, 693, 3.912, 694, 3.912, 695,
          3.912, 696, 3.912, 697, 3.912, 698, 3.912,
        ],
      ],
      ['title/modules/IamModule.html', [256, 1.808, 307, 2.566]],
      [
        'body/modules/IamModule.html',
        [
          0, 0.342, 3, 0.17, 4, 0.151, 5, 0.151, 22, 0.014, 45, 0.254, 51, 0.17,
          53, 0.011, 54, 0.011, 80, 3.093, 115, 1.426, 158, 4.62, 256, 3.102,
          258, 2.701, 259, 2.701, 260, 3.006, 261, 3.006, 262, 2.571, 263,
          3.926, 264, 4.149, 267, 3.789, 268, 3.006, 269, 3.006, 307, 4.941,
          337, 3.006, 373, 3.989, 374, 4.423, 658, 5.059, 677, 4.839, 678,
          4.423, 699, 4.423, 700, 4.423, 701, 4.423, 702, 5.083, 703, 5.083,
          704, 6.407, 705, 5.083, 706, 5.083,
        ],
      ],
      ['title/injectables/IamService.html', [174, 1.48, 677, 2.418]],
      [
        'body/injectables/IamService.html',
        [
          0, 0.151, 3, 0.075, 4, 0.067, 5, 0.067, 8, 0.219, 12, 1.425, 13,
          0.934, 14, 0.702, 21, 0.656, 22, 0.014, 27, 0.998, 29, 0.954, 32,
          1.197, 42, 0.631, 45, 0.225, 51, 0.075, 53, 0.006, 54, 0.006, 57,
          2.152, 58, 1.138, 76, 1.661, 86, 1.246, 96, 2.266, 97, 1.676, 99,
          2.266, 104, 1.725, 115, 0.631, 133, 1.086, 139, 1.77, 162, 3.498, 164,
          1.039, 165, 1.33, 166, 2.831, 168, 1.808, 173, 3.175, 174, 1.293, 177,
          0.954, 180, 1.086, 181, 1.412, 184, 4.126, 186, 1.33, 187, 3.323, 188,
          1.958, 189, 2.576, 190, 1.508, 191, 2.147, 208, 1.388, 220, 3.088,
          222, 1.622, 230, 2.977, 231, 3.97, 272, 1.259, 276, 2.547, 299, 2.242,
          412, 1.33, 466, 1.622, 518, 2.486, 519, 2.627, 522, 2.112, 557, 4.235,
          569, 1.33, 661, 3.109, 663, 3.109, 664, 3.109, 665, 3.39, 666, 5.868,
          669, 3.487, 673, 3.109, 674, 3.39, 677, 2.112, 679, 3.109, 680, 1.958,
          681, 1.958, 707, 1.958, 708, 3.572, 709, 3.572, 710, 3.572, 711,
          5.873, 712, 3.572, 713, 3.572, 714, 3.572, 715, 2.25, 716, 3.572, 717,
          2.25, 718, 3.572, 719, 3.572, 720, 2.25, 721, 3.572, 722, 2.25, 723,
          3.572, 724, 2.25, 725, 2.25, 726, 3.572, 727, 2.25, 728, 2.25, 729,
          3.572, 730, 2.25, 731, 2.25, 732, 3.572, 733, 2.25, 734, 2.25, 735,
          3.109, 736, 1.958, 737, 1.958, 738, 2.804, 739, 2.25, 740, 2.25, 741,
          1.622, 742, 2.25, 743, 1.766, 744, 2.25, 745, 2.25, 746, 3.572, 747,
          1.958, 748, 2.25, 749, 2.25, 750, 3.572, 751, 2.25, 752, 2.25, 753,
          2.25, 754, 3.572, 755, 2.25, 756, 2.25, 757, 2.25, 758, 1.958, 759,
          2.25, 760, 2.25, 761, 2.804, 762, 2.25, 763, 1.958, 764, 1.958, 765,
          3.109, 766, 1.958, 767, 3.572, 768, 4.442, 769, 3.109, 770, 2.25, 771,
          2.25, 772, 2.25, 773, 2.25, 774, 1.958, 775, 1.958, 776, 2.25, 777,
          3.109, 778, 1.958, 779, 4.442, 780, 1.766, 781, 1.958, 782, 3.572,
          783, 3.572, 784, 3.572, 785, 3.572, 786, 3.109, 787, 3.572, 788,
          3.572, 789, 3.572, 790, 3.572, 791, 3.572, 792, 2.25, 793, 2.25, 794,
          2.25, 795, 2.25, 796, 2.25,
        ],
      ],
      ['title/classes/InitUtil.html', [0, 0.275, 741, 2.948]],
      [
        'body/classes/InitUtil.html',
        [
          0, 0.332, 2, 0.688, 3, 0.165, 4, 0.147, 5, 0.147, 8, 0.481, 12, 1.33,
          21, 0.612, 22, 0.014, 27, 1.004, 32, 1.228, 45, 0.165, 51, 0.165, 53,
          0.01, 54, 0.01, 76, 1.247, 86, 2.195, 96, 2.115, 97, 1.533, 99, 2.115,
          139, 1.897, 191, 1.724, 346, 5.478, 406, 3.344, 469, 4.91, 561, 4.301,
          566, 2.386, 741, 4.994, 797, 3.879, 798, 6.554, 799, 6.294, 800,
          5.478, 801, 6.294, 802, 4.942, 803, 6.294, 804, 4.942, 805, 4.942,
          806, 4.942, 807, 4.942, 808, 5.478, 809, 4.301, 810, 4.301, 811,
          3.879, 812, 4.942, 813, 4.942, 814, 4.942, 815, 4.942, 816, 4.942,
        ],
      ],
      ['title/classes/ListResult.html', [0, 0.275, 817, 2.566]],
      [
        'body/classes/ListResult.html',
        [
          0, 0.33, 2, 0.683, 3, 0.164, 4, 0.146, 5, 0.146, 8, 0.477, 9, 1.144,
          13, 2.009, 21, 0.759, 22, 0.014, 24, 1.458, 27, 1.054, 30, 3.051, 45,
          0.164, 48, 2.272, 50, 1.074, 51, 0.164, 53, 0.01, 54, 0.01, 208,
          2.156, 291, 3.051, 404, 3.169, 416, 3.667, 417, 3.932, 425, 3.667,
          817, 3.932, 818, 6.539, 819, 4.269, 820, 7.271, 821, 4.906, 822,
          4.906, 823, 4.906, 824, 4.906,
        ],
      ],
      ['title/classes/OperationLog.html', [0, 0.275, 39, 1.538]],
      [
        'body/classes/OperationLog.html',
        [
          0, 0.529, 1, 2.071, 2, 0.628, 3, 0.151, 4, 0.134, 5, 0.134, 6, 1.516,
          22, 0.014, 23, 2.699, 39, 2.65, 42, 1.977, 45, 0.263, 46, 2.283, 47,
          2.179, 51, 0.267, 53, 0.01, 54, 0.01, 56, 2.179, 57, 1.977, 58, 3.002,
          59, 2.755, 60, 3.153, 61, 2.755, 62, 3.153, 63, 3.153, 64, 2.048, 65,
          3.153, 66, 2.699, 67, 3.153, 68, 2.283, 69, 3.153, 70, 2.083, 71,
          3.153, 72, 3.153, 73, 2.397, 74, 2.397, 75, 2.641, 76, 1.139, 77,
          2.179,
        ],
      ],
      ['title/classes/OperationLog-1.html', [0, 0.23, 39, 1.289, 55, 1.515]],
      [
        'body/classes/OperationLog-1.html',
        [
          0, 0.262, 1, 2.349, 2, 0.544, 3, 0.131, 4, 0.116, 5, 0.116, 6, 2.595,
          8, 0.38, 9, 0.983, 11, 3.273, 12, 1.138, 14, 1.211, 20, 3.273, 21,
          0.789, 22, 0.014, 24, 1.613, 27, 1.106, 29, 3.334, 30, 3.324, 32,
          1.264, 33, 2.074, 39, 2.025, 45, 0.206, 48, 2.384, 49, 2.86, 50,
          0.855, 51, 0.131, 53, 0.009, 54, 0.009, 57, 2.141, 70, 1.802, 148,
          2.974, 208, 1.924, 230, 4.128, 232, 5.361, 825, 3.398, 826, 3.904,
          827, 3.904, 828, 3.904, 829, 3.904, 830, 3.904, 831, 3.904, 832,
          3.904, 833, 3.904, 834, 3.904,
        ],
      ],
      ['title/classes/PaginationApiPermissionDto.html', [0, 0.275, 91, 2.74]],
      [
        'body/classes/PaginationApiPermissionDto.html',
        [
          0, 0.277, 2, 0.377, 3, 0.091, 4, 0.08, 5, 0.08, 8, 0.263, 9, 0.754,
          12, 1.471, 13, 1.307, 14, 1.336, 21, 0.735, 22, 0.014, 24, 1.271, 26,
          1.907, 27, 1.047, 32, 1.163, 45, 0.167, 48, 1.746, 50, 0.593, 51,
          0.091, 52, 3.183, 53, 0.007, 54, 0.007, 55, 2.471, 75, 1.386, 81,
          3.128, 85, 3.689, 86, 1.439, 91, 2.765, 96, 2.13, 97, 1.544, 98, 3.38,
          99, 2.022, 134, 1.439, 191, 0.944, 196, 1.824, 208, 1.289, 238, 3.011,
          243, 4.571, 244, 2.125, 245, 4.387, 246, 4.387, 247, 4.387, 248,
          2.125, 254, 1.019, 285, 3.349, 288, 3.349, 291, 2.21, 383, 2.44, 402,
          2.59, 404, 2.828, 406, 2.192, 408, 1.699, 410, 2.765, 411, 2.765, 414,
          2.119, 416, 2.656, 417, 3.361, 420, 1.699, 421, 1.699, 422, 1.699,
          423, 1.699, 424, 4.031, 425, 2.656, 426, 3.349, 427, 1.814, 430,
          1.814, 431, 1.814, 453, 1.814, 454, 2.699, 455, 1.814, 461, 3.349,
          469, 2.59, 470, 2.765, 473, 1.601, 481, 2.975, 493, 3.305, 494, 2.97,
          566, 1.307, 583, 4.228, 587, 1.601, 625, 1.601, 835, 4.865, 836,
          2.975, 837, 2.975, 838, 2.975, 839, 2.708, 840, 2.708, 841, 4.976,
          842, 2.708, 843, 3.591, 844, 4.126, 845, 4.126, 846, 4.126, 847,
          3.591, 848, 5.59, 849, 5.59, 850, 2.708, 851, 2.708, 852, 2.975, 853,
          1.952, 854, 1.952, 855, 4.018, 856, 2.125, 857, 1.952, 858, 1.952,
          859, 2.125, 860, 2.125, 861, 2.125, 862, 2.125, 863, 2.125, 864,
          2.125, 865, 2.125, 866, 1.952, 867, 1.952, 868, 1.952, 869, 2.708,
          870, 2.708, 871, 4.126, 872, 4.126, 873, 4.126, 874, 4.126, 875,
          2.356, 876, 2.356, 877, 2.356, 878, 2.356, 879, 2.356, 880, 2.356,
        ],
      ],
      [
        'title/classes/PaginationApiPermissionResponseDto.html',
        [0, 0.275, 94, 2.948],
      ],
      [
        'body/classes/PaginationApiPermissionResponseDto.html',
        [
          0, 0.325, 1, 2.336, 2, 0.673, 3, 0.162, 4, 0.144, 5, 0.144, 8, 0.47,
          9, 1.134, 13, 1.792, 21, 0.727, 22, 0.014, 24, 1.528, 26, 1.741, 27,
          1.049, 30, 3.197, 45, 0.229, 48, 1.938, 50, 1.059, 51, 0.162, 52,
          2.996, 53, 0.01, 54, 0.01, 75, 2.085, 81, 2.705, 85, 2.705, 94, 4.474,
          128, 2.705, 129, 3.793, 208, 2.141, 291, 2.743, 416, 3.297, 417,
          3.695, 425, 3.297, 817, 4.885, 855, 4.276, 881, 4.206, 882, 4.206,
          883, 4.87, 884, 3.793, 885, 3.793, 886, 3.793, 887, 3.793,
        ],
      ],
      ['title/classes/PaginationDto.html', [0, 0.275, 98, 1.887]],
      [
        'body/classes/PaginationDto.html',
        [
          0, 0.298, 2, 0.311, 3, 0.075, 4, 0.066, 5, 0.066, 8, 0.218, 9, 0.65,
          12, 0.935, 13, 0.93, 14, 0.44, 21, 0.69, 22, 0.014, 24, 0.751, 26,
          0.628, 27, 0.924, 32, 0.791, 36, 1.799, 45, 0.169, 48, 1.383, 50,
          0.49, 51, 0.184, 53, 0.006, 54, 0.006, 55, 0.989, 76, 1.389, 86, 1.24,
          96, 1.969, 97, 1.078, 98, 2.328, 99, 1.849, 134, 1.543, 139, 2.213,
          190, 2.966, 191, 1.24, 196, 1.572, 208, 1.383, 238, 2.703, 254, 0.842,
          283, 1.404, 284, 2.617, 286, 2.383, 287, 1.613, 291, 2.433, 378,
          2.778, 382, 0.989, 383, 2.982, 385, 1.613, 386, 1.613, 387, 1.613,
          388, 3.095, 389, 3.852, 390, 1.947, 391, 1.947, 392, 1.947, 393,
          1.499, 394, 1.499, 395, 1.404, 396, 2.791, 397, 3.191, 398, 3.474,
          399, 3.474, 400, 3.474, 401, 2.791, 402, 3.454, 403, 3.852, 404,
          2.964, 405, 3.474, 406, 3.903, 407, 1.947, 408, 2.778, 409, 3.095,
          410, 3.379, 411, 3.379, 412, 2.103, 413, 1.947, 414, 3.142, 415,
          3.095, 416, 2.924, 417, 3.375, 418, 1.947, 419, 1.947, 420, 2.232,
          421, 2.232, 422, 2.232, 423, 2.232, 424, 1.613, 425, 2.924, 426,
          3.379, 427, 2.383, 428, 3.095, 429, 3.852, 430, 2.383, 431, 2.383,
          432, 1.947, 433, 1.947, 434, 3.095, 435, 3.095, 436, 3.095, 437,
          3.095, 438, 3.095, 439, 3.095, 440, 3.095, 441, 3.095, 442, 1.947,
          443, 1.947, 444, 1.499, 445, 1.499, 446, 1.947, 447, 1.947, 448,
          1.947, 449, 3.852, 450, 1.947, 451, 3.095, 452, 1.947, 453, 2.383,
          454, 2.829, 455, 2.383, 456, 1.947, 457, 1.947, 458, 1.947, 459,
          5.548, 460, 5.548, 461, 3.379, 462, 3.095, 463, 1.947, 464, 1.947,
          465, 1.947, 466, 1.613, 467, 1.947, 468, 3.095, 469, 2.778, 470,
          2.966, 566, 1.08, 587, 1.323, 625, 1.323, 836, 2.564, 837, 2.564, 838,
          2.564, 852, 2.564, 853, 1.613, 854, 1.613, 857, 1.613, 858, 1.613,
          866, 1.613, 867, 1.613, 888, 2.237, 889, 2.237, 890, 2.237, 891,
          2.237, 892, 2.237, 893, 2.237, 894, 2.237, 895, 2.237,
        ],
      ],
      ['title/classes/PaginationPermissionDto.html', [0, 0.275, 896, 2.74]],
      [
        'body/classes/PaginationPermissionDto.html',
        [
          0, 0.379, 2, 0.785, 3, 0.188, 4, 0.167, 5, 0.167, 13, 1.473, 22,
          0.014, 45, 0.246, 50, 1.234, 51, 0.228, 53, 0.011, 54, 0.011, 75,
          2.295, 76, 1.723, 98, 3.392, 110, 3.537, 471, 3.332, 473, 3.332, 868,
          4.063, 896, 4.576, 897, 4.423, 898, 5.298, 899, 5.767, 900, 5.635,
          901, 4.576, 902, 2.851, 903, 4.904,
        ],
      ],
      [
        'title/classes/PaginationPermissionResponse.html',
        [0, 0.275, 904, 2.948],
      ],
      [
        'body/classes/PaginationPermissionResponse.html',
        [
          0, 0.327, 2, 0.676, 3, 0.162, 4, 0.144, 5, 0.144, 8, 0.472, 9, 1.137,
          13, 1.796, 21, 0.728, 22, 0.014, 24, 1.531, 26, 1.747, 27, 1.05, 30,
          3.203, 45, 0.23, 48, 1.945, 50, 1.064, 51, 0.162, 52, 3.005, 53, 0.01,
          54, 0.01, 64, 2.178, 75, 2.092, 128, 2.718, 208, 2.146, 291, 2.752,
          416, 3.307, 417, 3.7, 425, 3.307, 817, 4.891, 855, 4.284, 883, 4.886,
          884, 3.812, 885, 3.812, 886, 3.812, 887, 3.812, 904, 4.488, 905,
          4.227, 906, 4.227, 907, 4.227,
        ],
      ],
      ['title/classes/PaginationRoleDto.html', [0, 0.275, 908, 2.74]],
      [
        'body/classes/PaginationRoleDto.html',
        [
          0, 0.345, 2, 0.506, 3, 0.122, 4, 0.108, 5, 0.108, 8, 0.354, 9, 0.936,
          12, 1.529, 21, 0.74, 22, 0.014, 24, 1.361, 27, 1.104, 32, 1.065, 36,
          2.592, 45, 0.171, 51, 0.122, 53, 0.008, 54, 0.008, 75, 1.722, 86,
          1.787, 96, 2.366, 97, 1.716, 98, 3.587, 99, 2.281, 134, 1.787, 191,
          1.268, 208, 1.601, 238, 2.73, 254, 1.368, 291, 2.622, 383, 3.03, 402,
          3.216, 404, 3.258, 406, 2.722, 408, 2.283, 410, 3.433, 411, 3.433,
          414, 2.515, 416, 3.152, 417, 3.626, 420, 2.283, 421, 2.283, 422,
          2.283, 423, 2.283, 425, 3.152, 426, 3.975, 427, 2.437, 430, 2.437,
          431, 2.437, 453, 2.437, 454, 3.109, 455, 2.437, 461, 3.975, 469,
          3.216, 470, 3.433, 493, 3.508, 494, 2.722, 504, 2.623, 509, 3.166,
          566, 1.756, 587, 2.151, 625, 2.151, 836, 3.694, 837, 3.694, 838,
          3.694, 852, 3.694, 853, 2.623, 854, 2.623, 855, 4.369, 856, 2.855,
          857, 2.623, 858, 2.623, 859, 2.855, 860, 2.855, 861, 2.855, 862,
          2.855, 863, 2.855, 864, 2.855, 865, 2.855, 866, 2.623, 867, 2.623,
          868, 2.623, 908, 3.433, 909, 5.162, 910, 3.637, 911, 3.637, 912,
          3.637, 913, 4.459,
        ],
      ],
      ['title/classes/PaginationRoleResponse.html', [0, 0.275, 914, 2.948]],
      [
        'body/classes/PaginationRoleResponse.html',
        [
          0, 0.327, 2, 0.676, 3, 0.162, 4, 0.144, 5, 0.144, 8, 0.472, 9, 1.137,
          13, 1.796, 21, 0.728, 22, 0.014, 24, 1.531, 26, 1.747, 27, 1.05, 30,
          3.203, 42, 2.102, 45, 0.23, 48, 1.945, 50, 1.064, 51, 0.162, 52,
          3.005, 53, 0.01, 54, 0.01, 75, 2.092, 128, 2.718, 208, 2.146, 291,
          2.752, 416, 3.307, 417, 3.7, 425, 3.307, 817, 4.891, 855, 4.284, 883,
          4.886, 884, 3.812, 885, 3.812, 886, 3.812, 887, 3.812, 914, 4.488,
          915, 4.227, 916, 4.227, 917, 3.812,
        ],
      ],
      ['title/classes/PaginationUserDto.html', [0, 0.275, 918, 2.74]],
      [
        'body/classes/PaginationUserDto.html',
        [
          0, 0.3, 2, 0.418, 3, 0.1, 4, 0.089, 5, 0.089, 8, 0.292, 9, 0.815, 12,
          1.599, 13, 1.645, 14, 1.342, 21, 0.736, 22, 0.014, 24, 1.443, 27,
          1.097, 32, 1.161, 45, 0.197, 48, 2.06, 50, 0.658, 51, 0.1, 53, 0.007,
          54, 0.007, 75, 1.499, 86, 1.556, 96, 2.216, 97, 1.606, 98, 3.457, 99,
          2.115, 134, 1.556, 177, 1.274, 191, 1.048, 208, 1.394, 238, 3.238,
          253, 2.978, 254, 1.13, 291, 2.353, 383, 2.639, 402, 2.801, 404, 2.98,
          406, 2.371, 408, 1.886, 410, 2.99, 411, 2.99, 414, 2.257, 416, 2.828,
          417, 3.459, 420, 1.886, 421, 1.886, 422, 1.886, 423, 1.886, 425,
          2.828, 426, 3.567, 427, 2.014, 430, 2.014, 431, 2.014, 453, 2.014,
          454, 2.844, 455, 2.014, 461, 3.567, 469, 2.801, 470, 2.99, 493, 3.9,
          494, 2.828, 515, 2.167, 518, 2.978, 521, 3.838, 522, 3.148, 539,
          3.883, 543, 2.99, 547, 2.615, 566, 1.451, 587, 1.777, 625, 1.777, 836,
          3.217, 837, 3.217, 838, 3.217, 841, 5.722, 852, 3.217, 853, 2.167,
          854, 2.167, 855, 4.147, 856, 2.358, 857, 2.167, 858, 2.167, 859,
          2.358, 860, 2.358, 861, 2.358, 862, 2.358, 863, 2.358, 864, 2.358,
          865, 2.358, 866, 2.167, 867, 2.167, 868, 2.167, 918, 2.99, 919, 5.739,
          920, 4.462, 921, 3.005, 922, 3.005, 923, 3.005, 924, 3.005, 925,
          5.477, 926, 3.005, 927, 3.005, 928, 3.005,
        ],
      ],
      ['title/classes/Permission.html', [0, 0.275, 64, 1.189]],
      [
        'body/classes/Permission.html',
        [
          0, 0.529, 1, 2.071, 2, 0.628, 3, 0.151, 4, 0.134, 5, 0.134, 6, 1.516,
          22, 0.014, 23, 2.699, 39, 2.494, 42, 1.977, 45, 0.263, 46, 2.283, 47,
          2.179, 51, 0.267, 53, 0.01, 54, 0.01, 56, 2.179, 57, 1.977, 58, 3.002,
          59, 2.755, 60, 3.153, 61, 2.755, 62, 3.153, 63, 3.153, 64, 2.128, 65,
          3.153, 66, 2.699, 67, 3.153, 68, 2.283, 69, 3.153, 70, 2.083, 71,
          3.153, 72, 3.153, 73, 2.397, 74, 2.397, 75, 2.641, 76, 1.139, 77,
          2.179,
        ],
      ],
      ['title/classes/Permission-1.html', [0, 0.23, 55, 1.515, 64, 0.996]],
      [
        'body/classes/Permission-1.html',
        [
          0, 0.267, 2, 0.552, 3, 0.133, 4, 0.118, 5, 0.118, 6, 2.573, 8, 0.386,
          9, 0.994, 11, 3.301, 12, 1.413, 13, 1.624, 14, 1.221, 19, 3.899, 20,
          3.301, 21, 0.791, 22, 0.014, 24, 1.595, 25, 3.416, 26, 1.876, 27,
          1.094, 29, 3.343, 30, 2.956, 32, 1.238, 33, 2.892, 42, 2.031, 45,
          0.208, 48, 2.315, 49, 3.301, 50, 0.869, 51, 0.133, 52, 2.628, 53,
          0.009, 54, 0.009, 64, 1.582, 66, 2.851, 68, 2.007, 97, 1.513, 148,
          2.999, 302, 4.876, 929, 3.452, 930, 3.967, 931, 3.967, 932, 3.967,
          933, 3.967, 934, 3.967, 935, 3.967, 936, 3.967, 937, 3.967,
        ],
      ],
      ['title/controllers/PermissionController.html', [78, 1.974, 938, 2.948]],
      [
        'body/controllers/PermissionController.html',
        [
          0, 0.229, 3, 0.114, 4, 0.101, 5, 0.101, 8, 0.331, 12, 1.399, 14,
          0.669, 21, 0.73, 22, 0.014, 24, 1.399, 27, 0.96, 45, 0.251, 50, 0.746,
          51, 0.114, 53, 0.008, 54, 0.008, 64, 2.15, 78, 1.644, 80, 1.644, 84,
          2.282, 86, 1.705, 87, 2.735, 88, 2.735, 89, 2.735, 96, 2.224, 97,
          1.613, 99, 2.224, 100, 2.455, 104, 3.018, 109, 1.905, 110, 3.59, 111,
          1.809, 112, 2.282, 113, 1.905, 115, 0.955, 117, 2.455, 118, 1.905,
          119, 4.617, 120, 5.408, 121, 3.276, 122, 3.837, 123, 3.276, 125,
          1.905, 126, 2.672, 128, 1.905, 133, 1.644, 134, 1.187, 135, 2.672,
          137, 4.436, 138, 2.672, 139, 1.995, 141, 2.455, 142, 2.455, 144,
          2.455, 145, 2.455, 471, 4.075, 896, 4.188, 902, 2.473, 904, 4.507,
          907, 2.963, 938, 3.525, 939, 2.963, 940, 3.068, 941, 2.963, 942,
          2.672, 943, 5.761, 944, 3.405, 945, 2.963, 946, 2.963, 947, 3.405,
          948, 4.254, 949, 4.756, 950, 2.672, 951, 3.405, 952, 2.672, 953,
          2.672, 954, 4.188, 955, 3.405, 956, 3.405, 957, 4.756, 958, 2.672,
          959, 3.405, 960, 3.59, 961, 2.137, 962, 3.405, 963, 3.405, 964, 2.963,
          965, 2.963, 966, 3.405, 967, 2.672, 968, 2.672, 969, 3.405, 970,
          3.405, 971, 3.405, 972, 3.405, 973, 3.405, 974, 2.672, 975, 2.672,
          976, 3.405,
        ],
      ],
      ['title/classes/PermissionGroup.html', [0, 0.275, 66, 1.664]],
      [
        'body/classes/PermissionGroup.html',
        [
          0, 0.529, 1, 2.071, 2, 0.628, 3, 0.151, 4, 0.134, 5, 0.134, 6, 1.516,
          22, 0.014, 23, 2.699, 39, 2.494, 42, 1.977, 45, 0.263, 46, 2.283, 47,
          2.179, 51, 0.267, 53, 0.01, 54, 0.01, 56, 2.179, 57, 1.977, 58, 3.002,
          59, 2.755, 60, 3.153, 61, 2.755, 62, 3.153, 63, 3.153, 64, 2.048, 65,
          3.153, 66, 2.867, 67, 3.153, 68, 2.283, 69, 3.153, 70, 2.083, 71,
          3.153, 72, 3.153, 73, 2.397, 74, 2.397, 75, 2.641, 76, 1.139, 77,
          2.179,
        ],
      ],
      ['title/classes/PermissionGroup-1.html', [0, 0.23, 55, 1.515, 66, 1.395]],
      [
        'body/classes/PermissionGroup-1.html',
        [
          0, 0.284, 2, 0.589, 3, 0.141, 4, 0.126, 5, 0.126, 6, 2.574, 8, 0.411,
          9, 1.039, 11, 3.412, 12, 1.451, 13, 1.679, 14, 1.262, 20, 3.412, 21,
          0.788, 22, 0.014, 24, 1.593, 25, 2.656, 26, 1.595, 27, 1.093, 29,
          3.378, 30, 3.035, 32, 1.251, 33, 3.021, 45, 0.19, 48, 2.304, 49,
          3.412, 50, 0.927, 51, 0.141, 52, 2.043, 53, 0.009, 54, 0.009, 64,
          2.145, 66, 2.314, 97, 1.564, 148, 3.1, 149, 4.303, 977, 3.682, 978,
          4.231, 979, 4.231, 980, 4.231, 981, 4.231, 982, 4.231, 983, 4.231,
          984, 4.231,
        ],
      ],
      ['title/classes/PermissionIdExistDto.html', [0, 0.275, 949, 2.74]],
      [
        'body/classes/PermissionIdExistDto.html',
        [
          0, 0.462, 2, 0.794, 3, 0.191, 4, 0.169, 5, 0.169, 8, 0.554, 9, 1.256,
          14, 1.543, 21, 0.554, 22, 0.014, 24, 1.205, 27, 0.827, 32, 1.079, 45,
          0.23, 51, 0.191, 53, 0.011, 54, 0.011, 240, 3.82, 250, 3.19, 251,
          3.578, 252, 3.578, 253, 3.848, 254, 2.145, 949, 4.608, 985, 5.985,
          986, 5.701, 987, 4.474, 988, 5.701,
        ],
      ],
      ['title/modules/PermissionModule.html', [256, 1.808, 308, 2.74]],
      [
        'body/modules/PermissionModule.html',
        [
          0, 0.37, 3, 0.184, 4, 0.164, 5, 0.164, 22, 0.014, 45, 0.243, 51,
          0.184, 53, 0.011, 54, 0.011, 80, 3.252, 115, 1.546, 117, 3.972, 256,
          3.216, 258, 2.927, 259, 2.927, 260, 3.258, 261, 3.258, 262, 2.787,
          263, 4.071, 264, 3.258, 267, 3.983, 268, 3.258, 269, 3.258, 271,
          4.795, 308, 5.3, 938, 5.246, 960, 4.965, 989, 4.795, 990, 4.795, 991,
          5.509,
        ],
      ],
      ['title/injectables/PermissionService.html', [174, 1.48, 960, 2.566]],
      [
        'body/injectables/PermissionService.html',
        [
          0, 0.197, 3, 0.098, 4, 0.087, 5, 0.087, 8, 0.285, 12, 1.38, 13, 1.145,
          14, 1.424, 19, 4.25, 21, 0.692, 22, 0.014, 26, 1.953, 27, 0.947, 29,
          1.242, 32, 1.117, 45, 0.218, 51, 0.098, 53, 0.007, 54, 0.007, 64,
          1.899, 76, 1.649, 86, 1.527, 87, 2.45, 88, 2.45, 89, 2.45, 96, 2.195,
          97, 1.734, 99, 2.092, 109, 1.639, 110, 3.291, 115, 0.822, 118, 1.639,
          133, 1.414, 134, 1.021, 139, 1.876, 148, 2.114, 149, 1.963, 162,
          3.388, 164, 1.352, 165, 1.732, 166, 3.255, 168, 2.368, 174, 1.585,
          177, 1.242, 180, 1.414, 186, 1.732, 187, 3.016, 191, 1.021, 192,
          3.651, 208, 1.817, 213, 1.963, 238, 1.242, 272, 1.639, 276, 2.874,
          277, 3.157, 283, 1.838, 284, 1.732, 285, 1.963, 286, 2.934, 287,
          3.157, 288, 1.963, 291, 1.935, 299, 2.748, 302, 5.314, 386, 2.112,
          471, 3.682, 896, 3.898, 902, 2.215, 940, 2.748, 941, 3.81, 945, 3.81,
          948, 2.549, 957, 4.537, 960, 2.748, 961, 1.838, 992, 2.549, 993,
          2.929, 994, 2.929, 995, 2.929, 996, 2.929, 997, 3.436, 998, 2.929,
          999, 3.436, 1000, 2.929, 1001, 2.929, 1002, 2.929, 1003, 2.929, 1004,
          2.929, 1005, 2.929, 1006, 2.929, 1007, 2.929, 1008, 2.549, 1009,
          2.929, 1010, 2.929, 1011, 2.929, 1012, 2.929, 1013, 4.378, 1014,
          2.929, 1015, 2.929, 1016, 2.929, 1017, 3.81, 1018, 2.929, 1019, 2.929,
          1020, 2.929,
        ],
      ],
      ['title/classes/Profile.html', [0, 0.275, 59, 1.599]],
      [
        'body/classes/Profile.html',
        [
          0, 0.529, 1, 2.071, 2, 0.628, 3, 0.151, 4, 0.134, 5, 0.134, 6, 1.516,
          22, 0.014, 23, 2.699, 39, 2.494, 42, 1.977, 45, 0.263, 46, 2.283, 47,
          2.179, 51, 0.267, 53, 0.01, 54, 0.01, 56, 2.179, 57, 1.977, 58, 3.002,
          59, 2.862, 60, 3.153, 61, 2.755, 62, 3.153, 63, 3.153, 64, 2.048, 65,
          3.153, 66, 2.699, 67, 3.153, 68, 2.283, 69, 3.153, 70, 2.083, 71,
          3.153, 72, 3.153, 73, 2.397, 74, 2.397, 75, 2.641, 76, 1.139, 77,
          2.179,
        ],
      ],
      ['title/classes/Profile-1.html', [0, 0.23, 55, 1.515, 59, 1.34]],
      [
        'body/classes/Profile-1.html',
        [
          0, 0.264, 2, 0.547, 3, 0.131, 4, 0.117, 5, 0.117, 6, 2.598, 8, 0.382,
          9, 0.987, 11, 3.283, 12, 1.591, 14, 1.215, 20, 3.283, 21, 0.79, 22,
          0.014, 24, 1.615, 27, 1.108, 29, 3.338, 30, 3.086, 32, 1.283, 33,
          3.537, 45, 0.181, 48, 2.254, 49, 3.709, 50, 0.86, 51, 0.131, 53,
          0.009, 54, 0.009, 57, 2.144, 59, 2.114, 148, 2.984, 230, 4.141, 516,
          5.378, 517, 4.85, 520, 4.85, 1021, 3.418, 1022, 3.927, 1023, 3.927,
          1024, 3.927, 1025, 3.927, 1026, 3.927, 1027, 3.927, 1028, 3.927, 1029,
          3.927, 1030, 3.927,
        ],
      ],
      ['title/classes/Role.html', [0, 0.275, 42, 1.147]],
      [
        'body/classes/Role.html',
        [
          0, 0.529, 1, 2.071, 2, 0.628, 3, 0.151, 4, 0.134, 5, 0.134, 6, 1.516,
          22, 0.014, 23, 2.699, 39, 2.494, 42, 2.053, 45, 0.263, 46, 2.283, 47,
          2.179, 51, 0.267, 53, 0.01, 54, 0.01, 56, 2.179, 57, 1.977, 58, 3.002,
          59, 2.755, 60, 3.153, 61, 2.755, 62, 3.153, 63, 3.153, 64, 2.048, 65,
          3.153, 66, 2.699, 67, 3.153, 68, 2.283, 69, 3.153, 70, 2.083, 71,
          3.153, 72, 3.153, 73, 2.397, 74, 2.397, 75, 2.641, 76, 1.139, 77,
          2.179,
        ],
      ],
      ['title/classes/Role-1.html', [0, 0.23, 42, 0.961, 55, 1.515]],
      [
        'body/classes/Role-1.html',
        [
          0, 0.227, 1, 2.059, 2, 0.469, 3, 0.113, 4, 0.1, 5, 0.1, 6, 2.574, 8,
          0.328, 9, 0.886, 11, 3.021, 12, 1.315, 13, 1.487, 14, 1.118, 20,
          3.021, 21, 0.791, 22, 0.014, 24, 1.602, 25, 3.569, 26, 2.032, 27,
          1.099, 29, 3.248, 30, 2.915, 32, 1.202, 33, 2.578, 36, 3.147, 42,
          1.362, 45, 0.22, 48, 2.339, 49, 3.021, 50, 0.738, 51, 0.113, 52,
          2.745, 53, 0.008, 54, 0.008, 57, 2.07, 64, 1.996, 70, 1.556, 97,
          1.385, 148, 2.745, 149, 3.81, 177, 1.429, 193, 4.1, 414, 2.057, 522,
          3.363, 543, 2.258, 566, 2.343, 1031, 2.933, 1032, 4.949, 1033, 3.37,
          1034, 3.37, 1035, 3.37, 1036, 3.37, 1037, 3.37, 1038, 3.37, 1039,
          3.37, 1040, 3.37, 1041, 7.076, 1042, 4.852, 1043, 2.645, 1044, 4.223,
          1045, 3.37, 1046, 3.37, 1047, 3.37,
        ],
      ],
      ['title/controllers/RoleController.html', [78, 1.974, 1048, 2.948]],
      [
        'body/controllers/RoleController.html',
        [
          0, 0.228, 3, 0.113, 4, 0.101, 5, 0.101, 8, 0.33, 12, 1.397, 14, 0.959,
          21, 0.729, 22, 0.014, 24, 1.397, 27, 0.958, 42, 2.036, 45, 0.254, 50,
          0.743, 51, 0.113, 53, 0.008, 54, 0.008, 78, 1.638, 80, 1.638, 84,
          2.274, 86, 1.701, 87, 2.729, 88, 2.729, 89, 2.729, 90, 2.447, 96,
          2.221, 97, 1.61, 98, 2.251, 99, 2.221, 100, 2.447, 104, 3.013, 109,
          1.899, 111, 1.803, 112, 2.274, 113, 1.899, 115, 0.952, 118, 1.899,
          119, 4.612, 120, 5.402, 121, 3.268, 122, 2.663, 123, 3.268, 125,
          2.729, 126, 2.663, 128, 1.899, 133, 1.638, 134, 1.183, 137, 4.43, 139,
          1.992, 141, 2.447, 142, 2.447, 144, 2.447, 145, 2.447, 502, 4.32, 902,
          2.467, 908, 4.182, 914, 4.5, 917, 2.663, 940, 3.061, 942, 2.663, 943,
          5.753, 950, 2.663, 952, 2.663, 953, 2.663, 954, 3.825, 958, 2.663,
          961, 2.13, 964, 2.953, 965, 2.953, 967, 2.663, 968, 2.663, 974, 2.663,
          975, 2.663, 1048, 3.516, 1049, 2.953, 1050, 2.953, 1051, 3.393, 1052,
          3.393, 1053, 3.393, 1054, 3.917, 1055, 3.393, 1056, 4.182, 1057,
          3.393, 1058, 3.393, 1059, 4.751, 1060, 3.393, 1061, 3.583, 1062,
          2.953, 1063, 4.48, 1064, 3.393, 1065, 3.393, 1066, 3.393, 1067, 3.393,
          1068, 3.393, 1069, 3.393, 1070, 3.393, 1071, 3.393, 1072, 3.393, 1073,
          3.393, 1074, 3.393, 1075, 3.393,
        ],
      ],
      ['title/classes/RoleIdExistDto.html', [0, 0.275, 1056, 2.74]],
      [
        'body/classes/RoleIdExistDto.html',
        [
          0, 0.462, 2, 0.794, 3, 0.191, 4, 0.169, 5, 0.169, 8, 0.554, 9, 1.256,
          14, 1.543, 21, 0.554, 22, 0.014, 24, 1.205, 27, 0.827, 32, 1.079, 45,
          0.23, 51, 0.191, 53, 0.011, 54, 0.011, 240, 3.82, 250, 3.19, 251,
          3.578, 252, 3.578, 253, 3.848, 254, 2.145, 500, 4.474, 987, 4.474,
          1056, 4.608, 1076, 5.985, 1077, 5.701,
        ],
      ],
      ['title/modules/RoleModule.html', [256, 1.808, 309, 2.74]],
      [
        'body/modules/RoleModule.html',
        [
          0, 0.37, 3, 0.184, 4, 0.164, 5, 0.164, 22, 0.014, 45, 0.243, 51,
          0.184, 53, 0.011, 54, 0.011, 80, 3.252, 115, 1.546, 256, 3.216, 258,
          2.927, 259, 2.927, 260, 3.258, 261, 3.258, 262, 2.787, 263, 4.071,
          264, 3.258, 267, 3.983, 268, 3.258, 269, 3.258, 309, 5.3, 1048, 5.246,
          1061, 4.965, 1062, 4.795, 1078, 4.795, 1079, 4.795, 1080, 5.509, 1081,
          5.509,
        ],
      ],
      ['title/injectables/RoleService.html', [174, 1.48, 1061, 2.566]],
      [
        'body/injectables/RoleService.html',
        [
          0, 0.156, 1, 0.723, 3, 0.077, 4, 0.069, 5, 0.069, 8, 0.225, 12, 1.256,
          13, 0.955, 14, 1.363, 19, 2.292, 21, 0.605, 22, 0.014, 26, 1.908, 27,
          0.862, 29, 0.981, 32, 1.042, 42, 1.908, 45, 0.208, 51, 0.077, 53,
          0.006, 54, 0.006, 64, 1.062, 76, 1.675, 86, 1.273, 87, 2.043, 88,
          2.043, 89, 2.043, 96, 1.997, 97, 1.617, 99, 1.879, 104, 1.117, 109,
          1.294, 115, 0.649, 118, 1.294, 128, 1.294, 133, 1.117, 134, 0.807,
          139, 1.791, 148, 2.184, 149, 4.646, 162, 3.238, 164, 1.068, 165,
          1.368, 166, 2.875, 168, 2.091, 174, 1.322, 177, 0.981, 180, 1.117,
          186, 2.159, 187, 3.302, 191, 2.17, 192, 3.511, 193, 5.084, 201, 4.471,
          208, 1.413, 213, 1.55, 220, 3.326, 222, 2.633, 238, 2.371, 272, 1.294,
          276, 2.582, 277, 2.633, 283, 1.452, 284, 1.368, 289, 3.178, 291,
          2.271, 299, 2.292, 386, 1.668, 412, 3.814, 502, 3.511, 569, 1.368,
          583, 1.294, 747, 3.178, 902, 1.847, 908, 3.443, 917, 1.816, 940,
          2.292, 961, 1.452, 997, 2.866, 999, 2.866, 1008, 3.178, 1017, 3.178,
          1050, 3.178, 1059, 4.17, 1061, 2.292, 1063, 3.551, 1082, 2.013, 1083,
          2.313, 1084, 2.313, 1085, 3.178, 1086, 2.313, 1087, 2.313, 1088,
          2.313, 1089, 2.313, 1090, 3.652, 1091, 5.944, 1092, 2.313, 1093,
          3.652, 1094, 3.652, 1095, 5.944, 1096, 2.313, 1097, 3.652, 1098,
          2.313, 1099, 2.313, 1100, 2.313, 1101, 2.313, 1102, 3.652, 1103,
          3.652, 1104, 2.313, 1105, 2.013, 1106, 2.013, 1107, 3.652, 1108,
          3.652, 1109, 3.652, 1110, 2.313, 1111, 3.652, 1112, 2.313, 1113,
          3.652, 1114, 2.313, 1115, 2.313,
        ],
      ],
      ['title/interfaces/Route.html', [382, 1.808, 1116, 2.948]],
      [
        'body/interfaces/Route.html',
        [
          3, 0.13, 4, 0.116, 5, 0.116, 8, 0.379, 9, 0.982, 14, 0.766, 16, 5.648,
          18, 5.189, 21, 0.523, 22, 0.014, 32, 1.129, 45, 0.18, 51, 0.13, 53,
          0.009, 54, 0.009, 76, 1.948, 115, 1.093, 139, 1.174, 162, 1.723, 166,
          2.18, 168, 2.188, 175, 2.611, 180, 1.881, 187, 2.841, 196, 1.723, 208,
          1.217, 382, 1.723, 384, 2.446, 412, 3.923, 588, 2.304, 621, 3.876,
          809, 3.391, 1116, 5.189, 1117, 3.058, 1118, 3.058, 1119, 4.678, 1120,
          3.391, 1121, 3.058, 1122, 3.896, 1123, 3.896, 1124, 3.896, 1125,
          3.896, 1126, 3.896, 1127, 3.896, 1128, 3.896, 1129, 3.896, 1130,
          3.896, 1131, 3.896, 1132, 3.896, 1133, 3.896, 1134, 3.896, 1135,
          3.896, 1136, 3.896, 1137, 3.896, 1138, 3.896, 1139, 5.375, 1140,
          3.896, 1141, 3.896, 1142, 3.896, 1143, 3.896, 1144, 3.896, 1145,
          3.896, 1146, 3.896, 1147, 3.896, 1148, 3.896, 1149, 3.896, 1150,
          3.896, 1151, 5.375, 1152, 6.635, 1153, 6.961, 1154, 5.566, 1155,
          5.375, 1156, 3.896, 1157, 3.896, 1158, 5.375, 1159, 3.896, 1160,
          3.896, 1161, 3.896, 1162, 3.896, 1163, 3.896, 1164, 6.154, 1165,
          3.896, 1166, 3.896, 1167, 3.896,
        ],
      ],
      ['title/classes/Session.html', [0, 0.275, 61, 1.599]],
      [
        'body/classes/Session.html',
        [
          0, 0.529, 1, 2.071, 2, 0.628, 3, 0.151, 4, 0.134, 5, 0.134, 6, 1.516,
          22, 0.014, 23, 2.699, 39, 2.494, 42, 1.977, 45, 0.263, 46, 2.283, 47,
          2.179, 51, 0.267, 53, 0.01, 54, 0.01, 56, 2.179, 57, 1.977, 58, 3.002,
          59, 2.755, 60, 3.153, 61, 2.862, 62, 3.153, 63, 3.153, 64, 2.048, 65,
          3.153, 66, 2.699, 67, 3.153, 68, 2.283, 69, 3.153, 70, 2.083, 71,
          3.153, 72, 3.153, 73, 2.397, 74, 2.397, 75, 2.641, 76, 1.139, 77,
          2.179,
        ],
      ],
      ['title/classes/Session-1.html', [0, 0.23, 55, 1.515, 61, 1.34]],
      [
        'body/classes/Session-1.html',
        [
          0, 0.266, 2, 0.551, 3, 0.132, 4, 0.118, 5, 0.118, 6, 2.602, 8, 0.385,
          9, 0.993, 11, 3.297, 12, 1.412, 13, 1.622, 14, 1.22, 20, 3.297, 21,
          0.79, 22, 0.014, 24, 1.617, 27, 1.11, 29, 3.419, 30, 3.274, 32, 1.266,
          33, 2.888, 45, 0.182, 48, 2.357, 49, 3.297, 50, 0.867, 51, 0.132, 53,
          0.009, 54, 0.009, 57, 2.148, 61, 2.126, 148, 2.996, 184, 4.158, 189,
          4.475, 230, 4.158, 1168, 3.446, 1169, 3.959, 1170, 3.959, 1171, 3.959,
          1172, 3.959, 1173, 3.959, 1174, 3.959, 1175, 3.959, 1176, 3.959, 1177,
          3.959,
        ],
      ],
      ['title/classes/SignInDto.html', [0, 0.275, 665, 2.74]],
      [
        'body/classes/SignInDto.html',
        [
          0, 0.455, 2, 0.774, 3, 0.186, 4, 0.165, 5, 0.165, 8, 0.54, 9, 1.237,
          21, 0.658, 22, 0.014, 24, 1.431, 27, 0.982, 32, 1.193, 45, 0.186, 51,
          0.186, 53, 0.011, 54, 0.011, 254, 2.09, 494, 3.597, 518, 4.086, 519,
          4.318, 546, 5.314, 665, 4.537, 1178, 5.731, 1179, 4.835, 1180, 4.835,
          1181, 5.556, 1182, 5.556, 1183, 5.556, 1184, 6.355,
        ],
      ],
      ['title/classes/SignUpDto.html', [0, 0.275, 674, 2.74]],
      [
        'body/classes/SignUpDto.html',
        [
          0, 0.452, 2, 0.765, 3, 0.184, 4, 0.163, 5, 0.163, 8, 0.534, 9, 1.228,
          21, 0.654, 22, 0.014, 24, 1.421, 27, 0.975, 32, 1.188, 45, 0.184, 51,
          0.184, 53, 0.011, 54, 0.011, 254, 2.067, 475, 4.312, 494, 3.573, 495,
          4.781, 518, 4.066, 519, 4.297, 534, 4.781, 546, 5.277, 552, 4.781,
          674, 4.506, 1178, 5.703, 1180, 4.781, 1184, 6.324, 1185, 4.781, 1186,
          5.494, 1187, 5.494, 1188, 5.494,
        ],
      ],
      ['title/classes/SuccessOperationResponse.html', [0, 0.275, 954, 2.74]],
      [
        'body/classes/SuccessOperationResponse.html',
        [
          0, 0.39, 2, 0.808, 3, 0.194, 4, 0.172, 5, 0.172, 8, 0.564, 9, 1.27,
          21, 0.564, 22, 0.014, 24, 1.226, 27, 0.841, 32, 1.091, 45, 0.194, 48,
          2.171, 50, 1.271, 51, 0.194, 53, 0.011, 54, 0.011, 196, 2.565, 213,
          3.887, 543, 3.887, 583, 4.163, 954, 4.657, 1043, 4.553, 1189, 6.048,
          1190, 5.049, 1191, 5.801,
        ],
      ],
      ['title/classes/TestHelper.html', [0, 0.275, 1192, 3.209]],
      [
        'body/classes/TestHelper.html',
        [
          0, 0.185, 2, 0.384, 3, 0.092, 4, 0.082, 5, 0.082, 8, 0.268, 9, 0.764,
          12, 1.068, 14, 0.822, 21, 0.681, 22, 0.014, 26, 1.418, 27, 0.991, 32,
          1.002, 42, 1.918, 45, 0.239, 51, 0.092, 53, 0.007, 54, 0.007, 57,
          1.583, 76, 1.725, 86, 1.459, 96, 1.698, 97, 1.477, 99, 1.405, 115,
          0.774, 139, 1.7, 162, 2.822, 164, 1.931, 173, 1.73, 177, 1.169, 178,
          4.91, 179, 2.164, 184, 1.847, 187, 3.434, 189, 1.988, 191, 1.762, 192,
          1.73, 208, 1.307, 231, 2.164, 262, 1.395, 263, 1.543, 276, 1.931, 299,
          2.625, 304, 2.803, 312, 2.164, 313, 3.64, 335, 3.64, 337, 1.63, 373,
          2.164, 377, 2.399, 378, 1.73, 414, 1.169, 454, 2.44, 483, 4.76, 518,
          2.828, 519, 1.63, 558, 4.164, 566, 1.331, 610, 1.988, 648, 3.387, 736,
          2.399, 737, 2.399, 758, 2.399, 761, 2.164, 763, 2.399, 764, 2.399,
          765, 3.64, 766, 2.399, 798, 2.399, 800, 3.64, 1116, 1.988, 1121,
          2.164, 1154, 1.988, 1192, 3.283, 1193, 6.09, 1194, 2.399, 1195, 6.384,
          1196, 5.054, 1197, 5.054, 1198, 4.183, 1199, 5.054, 1200, 2.757, 1201,
          4.183, 1202, 5.054, 1203, 4.399, 1204, 2.757, 1205, 5.054, 1206,
          2.757, 1207, 2.757, 1208, 4.183, 1209, 2.757, 1210, 2.757, 1211, 3.64,
          1212, 2.757, 1213, 2.757, 1214, 2.757, 1215, 2.399, 1216, 2.757, 1217,
          2.757, 1218, 2.399, 1219, 2.164, 1220, 2.757, 1221, 2.757, 1222,
          2.757, 1223, 2.757, 1224, 4.183, 1225, 2.757, 1226, 2.757, 1227,
          2.757, 1228, 2.757, 1229, 2.757, 1230, 4.183, 1231, 2.757, 1232,
          2.757, 1233, 2.757, 1234, 2.757, 1235, 4.183, 1236, 2.757, 1237,
          4.183, 1238, 4.183, 1239, 2.757, 1240, 2.757, 1241, 5.642, 1242,
          4.183, 1243, 4.183, 1244, 2.757, 1245, 2.757, 1246, 2.757, 1247,
          2.757, 1248, 2.757, 1249, 5.054, 1250, 2.757, 1251, 2.757, 1252,
          2.757, 1253, 2.757, 1254, 2.757, 1255, 2.757, 1256, 2.757,
        ],
      ],
      ['title/classes/UpdateApiPermissionDto.html', [0, 0.275, 106, 2.74]],
      [
        'body/classes/UpdateApiPermissionDto.html',
        [
          0, 0.343, 2, 0.504, 3, 0.121, 4, 0.107, 5, 0.107, 8, 0.352, 9, 0.932,
          12, 1.486, 13, 1.546, 14, 1.526, 15, 5.042, 21, 0.739, 22, 0.014, 24,
          1.357, 26, 2.134, 27, 0.931, 32, 1.177, 36, 3.25, 45, 0.215, 48,
          2.007, 50, 0.792, 51, 0.121, 52, 3.488, 53, 0.008, 54, 0.008, 64,
          1.052, 75, 1.715, 81, 3.594, 85, 3.791, 101, 4.305, 106, 3.42, 125,
          2.024, 196, 2.256, 238, 2.98, 241, 3.148, 242, 3.148, 243, 5.209, 244,
          4.006, 245, 5.317, 246, 5.317, 247, 5.317, 248, 4.006, 250, 2.024,
          251, 2.271, 252, 2.271, 254, 1.361, 285, 3.963, 288, 3.963, 473,
          2.139, 481, 3.68, 493, 3.799, 494, 3.142, 500, 2.839, 583, 4.198, 841,
          5.517, 843, 4.442, 847, 3.148, 855, 2.139, 875, 3.148, 876, 3.148,
          877, 3.148, 878, 3.148, 879, 3.148, 880, 3.148, 913, 4.442, 1257,
          5.591, 1258, 3.617, 1259, 3.617, 1260, 3.617, 1261, 5.104, 1262,
          3.617, 1263, 3.617, 1264, 3.617, 1265, 3.617, 1266, 3.617,
        ],
      ],
      ['title/classes/UpdatePermissionDto.html', [0, 0.275, 957, 2.74]],
      [
        'body/classes/UpdatePermissionDto.html',
        [
          0, 0.388, 2, 0.803, 3, 0.193, 4, 0.171, 5, 0.171, 14, 1.134, 22,
          0.014, 45, 0.248, 50, 1.263, 51, 0.193, 53, 0.011, 54, 0.011, 64,
          1.677, 75, 2.327, 110, 3.62, 125, 3.227, 471, 3.41, 473, 3.41, 898,
          5.351, 901, 3.865, 902, 2.918, 949, 4.973, 957, 4.64, 1267, 5.019,
          1268, 6.925,
        ],
      ],
      ['title/classes/UpdateRoleDto.html', [0, 0.275, 1059, 2.74]],
      [
        'body/classes/UpdateRoleDto.html',
        [
          0, 0.388, 2, 0.803, 3, 0.193, 4, 0.171, 5, 0.171, 14, 1.134, 22,
          0.014, 42, 1.618, 45, 0.248, 50, 1.263, 51, 0.193, 53, 0.011, 54,
          0.011, 75, 2.327, 125, 3.227, 502, 3.62, 504, 4.158, 898, 5.351, 901,
          3.865, 902, 2.918, 1056, 4.973, 1059, 4.64, 1063, 4.527, 1269, 5.019,
          1270, 6.925,
        ],
      ],
      ['title/classes/UpdateUserDto.html', [0, 0.275, 1271, 2.74]],
      [
        'body/classes/UpdateUserDto.html',
        [
          0, 0.388, 2, 0.803, 3, 0.193, 4, 0.171, 5, 0.171, 14, 1.134, 22,
          0.014, 45, 0.248, 50, 1.263, 51, 0.193, 53, 0.011, 54, 0.011, 57,
          1.618, 75, 2.327, 125, 3.227, 513, 3.62, 515, 4.158, 898, 5.351, 901,
          3.865, 902, 2.918, 1054, 4.658, 1271, 4.64, 1272, 5.019, 1273, 6.925,
          1274, 4.527,
        ],
      ],
      ['title/classes/User.html', [0, 0.275, 57, 1.147]],
      [
        'body/classes/User.html',
        [
          0, 0.529, 1, 2.071, 2, 0.628, 3, 0.151, 4, 0.134, 5, 0.134, 6, 1.516,
          22, 0.014, 23, 2.699, 39, 2.494, 42, 1.977, 45, 0.263, 46, 2.283, 47,
          2.179, 51, 0.267, 53, 0.01, 54, 0.01, 56, 2.179, 57, 2.053, 58, 3.002,
          59, 2.755, 60, 3.153, 61, 2.755, 62, 3.153, 63, 3.153, 64, 2.048, 65,
          3.153, 66, 2.699, 67, 3.153, 68, 2.283, 69, 3.153, 70, 2.083, 71,
          3.153, 72, 3.153, 73, 2.397, 74, 2.397, 75, 2.641, 76, 1.139, 77,
          2.179,
        ],
      ],
      ['title/classes/User-1.html', [0, 0.23, 55, 1.515, 57, 0.961]],
      [
        'body/classes/User-1.html',
        [
          0, 0.213, 2, 0.441, 3, 0.106, 4, 0.094, 5, 0.094, 6, 2.591, 8, 0.308,
          9, 0.848, 11, 2.917, 12, 1.42, 14, 1.079, 20, 2.917, 21, 0.792, 22,
          0.014, 24, 1.616, 25, 2.913, 26, 1.696, 27, 1.108, 29, 3.21, 30, 3.07,
          32, 1.251, 33, 2.917, 39, 2.679, 42, 2.039, 45, 0.225, 47, 1.53, 48,
          2.338, 49, 3.211, 50, 0.694, 51, 0.106, 52, 2.241, 53, 0.008, 54,
          0.008, 57, 1.302, 59, 2.842, 61, 2.842, 97, 1.338, 148, 2.651, 177,
          1.344, 414, 1.344, 518, 3.072, 519, 3.247, 521, 3.959, 522, 3.247,
          543, 2.124, 566, 1.53, 925, 6.044, 1043, 2.487, 1044, 4.039, 1275,
          2.758, 1276, 3.169, 1277, 3.169, 1278, 3.169, 1279, 3.169, 1280,
          3.169, 1281, 3.169, 1282, 3.169, 1283, 3.169, 1284, 3.169, 1285,
          3.169, 1286, 3.169, 1287, 4.641, 1288, 3.169, 1289, 3.169,
        ],
      ],
      ['title/controllers/UserController.html', [78, 1.974, 1290, 2.948]],
      [
        'body/controllers/UserController.html',
        [
          0, 0.252, 3, 0.125, 4, 0.111, 5, 0.111, 8, 0.364, 12, 1.449, 14,
          0.735, 21, 0.667, 22, 0.014, 24, 1.449, 27, 0.995, 45, 0.244, 50,
          0.819, 51, 0.125, 53, 0.009, 54, 0.009, 57, 1.05, 78, 1.806, 80,
          1.806, 84, 2.507, 86, 1.822, 87, 2.924, 88, 2.924, 89, 2.924, 90,
          2.697, 96, 2.305, 97, 1.671, 98, 2.412, 99, 2.305, 100, 2.697, 104,
          3.148, 109, 2.093, 111, 1.988, 112, 2.507, 113, 2.093, 115, 1.05, 118,
          2.093, 119, 4.762, 121, 3.502, 123, 3.502, 125, 2.093, 133, 1.806,
          134, 1.305, 135, 2.936, 137, 4.596, 138, 2.936, 139, 2.067, 141,
          2.697, 142, 2.697, 144, 2.697, 145, 2.697, 513, 4.46, 902, 2.644, 918,
          4.369, 940, 3.28, 942, 2.936, 946, 3.256, 950, 2.936, 952, 2.936, 953,
          2.936, 958, 2.936, 961, 2.348, 967, 2.936, 968, 2.936, 974, 2.936,
          975, 2.936, 1054, 4.578, 1271, 4.887, 1274, 4.727, 1290, 3.768, 1291,
          3.256, 1292, 3.256, 1293, 3.741, 1294, 3.741, 1295, 3.741, 1296,
          3.741, 1297, 3.741, 1298, 3.741, 1299, 3.78, 1300, 3.256, 1301, 3.741,
          1302, 3.741, 1303, 3.741, 1304, 3.741, 1305, 3.741, 1306, 3.741, 1307,
          3.741,
        ],
      ],
      ['title/classes/UserIdExistDto.html', [0, 0.275, 1054, 2.566]],
      [
        'body/classes/UserIdExistDto.html',
        [
          0, 0.462, 2, 0.794, 3, 0.191, 4, 0.169, 5, 0.169, 8, 0.554, 9, 1.256,
          14, 1.543, 21, 0.554, 22, 0.014, 24, 1.205, 27, 0.827, 32, 1.079, 45,
          0.23, 51, 0.191, 53, 0.011, 54, 0.011, 240, 3.82, 250, 3.19, 251,
          3.578, 252, 3.578, 253, 3.848, 254, 2.145, 987, 4.474, 1054, 4.316,
          1308, 5.985, 1309, 5.701, 1310, 5.701,
        ],
      ],
      ['title/modules/UserModule.html', [256, 1.808, 310, 2.74]],
      [
        'body/modules/UserModule.html',
        [
          0, 0.355, 3, 0.176, 4, 0.157, 5, 0.157, 22, 0.014, 45, 0.25, 51,
          0.176, 53, 0.011, 54, 0.011, 80, 3.165, 115, 1.48, 256, 3.154, 258,
          2.802, 259, 2.802, 260, 3.118, 261, 3.118, 262, 2.668, 263, 3.992,
          264, 3.118, 267, 3.877, 268, 3.118, 269, 3.118, 307, 4.912, 310,
          5.374, 312, 5.146, 1290, 5.145, 1299, 4.912, 1300, 4.589, 1311, 4.589,
          1312, 4.589, 1313, 5.273, 1314, 5.273, 1315, 5.273, 1316, 5.273,
        ],
      ],
      ['title/injectables/UserService.html', [174, 1.48, 1299, 2.566]],
      [
        'body/injectables/UserService.html',
        [
          0, 0.175, 3, 0.087, 4, 0.077, 5, 0.077, 8, 0.253, 12, 1.318, 14,
          1.381, 21, 0.695, 22, 0.014, 26, 1.972, 27, 0.905, 29, 1.102, 32,
          1.08, 39, 0.978, 42, 1.536, 45, 0.209, 51, 0.087, 53, 0.007, 54,
          0.007, 57, 1.824, 59, 2.311, 76, 1.773, 86, 1.395, 87, 2.238, 88,
          2.238, 89, 2.728, 96, 2.097, 97, 1.712, 99, 1.985, 104, 1.255, 109,
          1.455, 115, 0.73, 118, 1.455, 134, 1.395, 139, 1.781, 148, 1.255, 162,
          3.315, 164, 1.847, 165, 1.538, 166, 3.063, 168, 1.984, 174, 1.448,
          180, 1.255, 187, 3.3, 191, 1.909, 192, 3.06, 196, 1.15, 208, 1.71,
          213, 1.742, 220, 2.728, 222, 2.884, 272, 1.455, 276, 2.728, 277,
          2.884, 283, 1.632, 284, 2.883, 291, 1.768, 299, 1.632, 397, 2.884,
          408, 3.06, 454, 1.931, 466, 1.875, 513, 3.709, 517, 3.14, 518, 3.063,
          519, 3.69, 520, 3.14, 521, 2.884, 522, 2.883, 569, 1.538, 583, 1.455,
          677, 3.843, 769, 4.243, 774, 2.263, 775, 2.263, 777, 3.481, 778,
          2.263, 780, 2.041, 781, 2.263, 902, 2.466, 918, 3.668, 940, 2.511,
          961, 1.632, 997, 3.14, 999, 3.14, 1085, 3.481, 1105, 2.263, 1106,
          2.263, 1271, 4.355, 1274, 3.826, 1292, 3.481, 1299, 2.511, 1317,
          2.263, 1318, 2.6, 1319, 2.6, 1320, 2.6, 1321, 2.6, 1322, 2.6, 1323,
          2.6, 1324, 2.6, 1325, 4, 1326, 5.473, 1327, 4, 1328, 2.6, 1329, 2.6,
          1330, 2.6, 1331, 4, 1332, 2.6, 1333, 2.6, 1334, 2.6, 1335, 2.6, 1336,
          2.6, 1337, 2.6, 1338, 4, 1339, 4, 1340, 2.6, 1341, 2.6, 1342, 2.6,
          1343, 2.6, 1344, 2.6, 1345, 2.6, 1346, 2.6, 1347, 2.6,
        ],
      ],
      ['title/interfaces/ValidateInDBOptions.html', [382, 1.808, 579, 2.418]],
      [
        'body/interfaces/ValidateInDBOptions.html',
        [
          0, 0.179, 3, 0.089, 4, 0.079, 5, 0.079, 8, 0.258, 9, 0.743, 21, 0.637,
          22, 0.014, 26, 1.386, 32, 0.869, 36, 1.344, 45, 0.185, 51, 0.219, 53,
          0.007, 54, 0.007, 76, 1.916, 104, 2.88, 111, 1.411, 113, 1.486, 115,
          0.745, 134, 1.723, 139, 2.166, 162, 1.174, 164, 1.877, 168, 2.253,
          170, 3.709, 173, 2.552, 174, 1.472, 175, 2.725, 177, 1.126, 181,
          1.667, 186, 2.404, 187, 2.28, 191, 1.93, 196, 1.798, 208, 1.543, 220,
          1.486, 238, 1.126, 276, 2.28, 336, 3.562, 337, 1.571, 347, 2.552, 382,
          1.798, 384, 1.667, 393, 1.78, 394, 1.78, 395, 1.667, 404, 2.8, 406,
          2.941, 414, 2.668, 444, 1.78, 445, 1.78, 454, 2.385, 556, 1.571, 557,
          3.562, 558, 3.474, 562, 1.915, 563, 1.915, 564, 2.932, 567, 2.085,
          569, 2.404, 570, 3.991, 571, 2.085, 572, 2.932, 573, 2.085, 574,
          4.388, 575, 1.667, 576, 4.388, 577, 1.915, 578, 3.709, 579, 3.273,
          580, 1.915, 581, 3.998, 582, 2.725, 583, 3.097, 584, 2.085, 585, 3.31,
          586, 3.877, 587, 1.571, 588, 2.921, 589, 1.915, 590, 3.562, 591,
          2.085, 592, 1.78, 593, 3.562, 594, 3.562, 595, 3.877, 596, 3.191, 597,
          3.191, 598, 2.085, 599, 2.085, 600, 2.085, 601, 3.877, 602, 3.877,
          603, 2.085, 604, 2.085, 605, 3.191, 606, 2.085, 607, 2.085, 608,
          3.191, 609, 2.085, 610, 2.932, 611, 2.085, 612, 2.085, 613, 2.085,
          614, 3.191, 615, 2.085, 616, 2.085, 617, 2.085, 618, 2.085, 619,
          3.191, 620, 2.085, 621, 1.915, 622, 2.085, 623, 2.085, 624, 2.085,
          625, 1.571, 626, 2.085, 627, 2.085, 628, 2.932, 629, 2.085, 630, 1.78,
          631, 3.562, 632, 3.562, 633, 1.915, 634, 1.78, 635, 1.915, 636, 1.78,
          637, 1.915,
        ],
      ],
      ['title/interfaces/ValidateInDBResult.html', [382, 1.808, 585, 2.74]],
      [
        'body/interfaces/ValidateInDBResult.html',
        [
          0, 0.177, 3, 0.088, 4, 0.078, 5, 0.078, 8, 0.256, 9, 0.737, 21, 0.655,
          22, 0.014, 26, 1.378, 32, 0.634, 36, 1.331, 45, 0.184, 51, 0.218, 53,
          0.007, 54, 0.007, 76, 1.913, 104, 3.251, 111, 1.398, 113, 1.473, 115,
          0.738, 134, 1.713, 139, 2.161, 162, 1.163, 164, 1.864, 168, 2.242,
          170, 3.691, 173, 2.534, 174, 1.462, 175, 2.705, 177, 1.116, 181,
          1.652, 186, 2.387, 187, 2.267, 191, 1.921, 196, 1.785, 208, 1.534,
          220, 1.473, 238, 1.116, 276, 2.267, 336, 3.541, 337, 1.556, 347,
          2.534, 382, 1.785, 384, 1.652, 393, 1.763, 394, 1.763, 395, 1.652,
          404, 3.172, 406, 2.926, 414, 2.658, 444, 1.763, 445, 1.763, 454,
          2.371, 556, 1.556, 557, 3.541, 558, 3.457, 562, 1.897, 563, 1.897,
          564, 2.911, 567, 2.065, 569, 2.387, 570, 3.971, 571, 2.065, 572,
          2.911, 573, 2.065, 574, 4.374, 575, 1.652, 576, 4.374, 577, 1.897,
          578, 3.691, 579, 2.904, 580, 1.897, 581, 3.981, 582, 2.705, 583,
          1.473, 584, 2.065, 585, 3.691, 586, 4.92, 587, 2.904, 588, 2.904, 589,
          1.897, 590, 3.541, 591, 2.065, 592, 1.763, 593, 3.541, 594, 3.541,
          595, 3.855, 596, 3.168, 597, 3.168, 598, 2.065, 599, 2.065, 600,
          2.065, 601, 3.855, 602, 3.855, 603, 2.065, 604, 2.065, 605, 3.168,
          606, 2.065, 607, 2.065, 608, 3.168, 609, 2.065, 610, 2.911, 611,
          2.065, 612, 2.065, 613, 2.065, 614, 3.168, 615, 2.065, 616, 2.065,
          617, 2.065, 618, 2.065, 619, 3.168, 620, 2.065, 621, 1.897, 622,
          2.065, 623, 2.065, 624, 2.065, 625, 1.556, 626, 2.065, 627, 2.065,
          628, 2.911, 629, 2.065, 630, 1.763, 631, 3.541, 632, 3.541, 633,
          1.897, 634, 1.763, 635, 1.897, 636, 1.763, 637, 1.897,
        ],
      ],
      ['title/injectables/ValidationI18nPipe.html', [174, 1.48, 344, 2.948]],
      [
        'body/injectables/ValidationI18nPipe.html',
        [
          0, 0.42, 3, 0.134, 4, 0.119, 5, 0.119, 8, 0.39, 12, 1.32, 21, 0.607,
          22, 0.014, 27, 0.906, 32, 0.629, 36, 3.159, 45, 0.224, 51, 0.134, 53,
          0.009, 54, 0.009, 76, 1.774, 86, 1.911, 96, 2.099, 97, 1.521, 99,
          1.841, 115, 1.125, 133, 1.935, 134, 1.397, 139, 2.119, 162, 2.761,
          164, 1.85, 174, 1.984, 180, 1.935, 181, 2.515, 187, 2.883, 191, 1.397,
          196, 1.772, 220, 2.242, 254, 1.508, 272, 2.242, 276, 1.85, 342, 5.843,
          343, 5.358, 344, 3.951, 378, 3.44, 387, 2.89, 412, 2.37, 414, 2.846,
          417, 1.935, 454, 3.015, 483, 3.145, 562, 3.951, 564, 4.841, 569, 2.37,
          572, 3.951, 580, 2.89, 588, 3.97, 594, 3.951, 1348, 5.843, 1349,
          3.488, 1350, 5.48, 1351, 4.007, 1352, 4.007, 1353, 5.48, 1354, 4.007,
          1355, 6.245, 1356, 4.007, 1357, 4.007, 1358, 4.007, 1359, 4.007, 1360,
          4.007, 1361, 4.007, 1362, 4.007, 1363, 4.007, 1364, 4.007, 1365, 5.48,
          1366, 4.007, 1367, 4.007, 1368, 4.007, 1369, 4.007, 1370, 4.007, 1371,
          4.007, 1372, 4.007, 1373, 4.007, 1374, 4.007, 1375, 4.007, 1376,
          4.007, 1377, 4.007,
        ],
      ],
      ['title/coverage.html', [1378, 4.36]],
      [
        'body/coverage.html',
        [
          0, 0.544, 1, 1.07, 5, 0.063, 6, 2.508, 7, 1.858, 14, 0.965, 21, 0.208,
          22, 0.014, 23, 1.394, 39, 1.289, 42, 0.961, 53, 0.006, 54, 0.006, 56,
          3.204, 57, 0.961, 59, 1.34, 61, 1.34, 64, 1.248, 66, 1.394, 77, 1.031,
          78, 2.596, 79, 1.54, 81, 3.212, 82, 2.296, 83, 1.858, 85, 2.401, 91,
          1.431, 94, 1.54, 98, 0.986, 101, 1.431, 106, 1.431, 116, 1.34, 147,
          1.858, 157, 1.676, 158, 1.54, 160, 1.858, 161, 1.858, 168, 1.394, 174,
          2.183, 191, 0.745, 239, 1.858, 240, 3.29, 250, 1.195, 262, 1.08, 273,
          1.858, 280, 1.676, 311, 1.676, 343, 1.54, 344, 1.54, 347, 1.34, 349,
          1.676, 382, 2.377, 383, 1.263, 385, 2.47, 412, 4.953, 471, 1.263, 472,
          1.858, 473, 3.394, 489, 1.676, 491, 2.47, 502, 1.34, 503, 1.858, 504,
          3.094, 513, 1.34, 514, 1.858, 515, 3.094, 556, 4.009, 574, 1.431, 575,
          1.34, 576, 1.431, 578, 1.431, 579, 1.263, 585, 1.431, 588, 3.824, 592,
          1.431, 630, 1.431, 634, 1.431, 636, 1.431, 638, 1.676, 639, 2.689,
          640, 2.689, 647, 1.676, 658, 1.54, 659, 1.858, 665, 1.431, 674, 1.431,
          677, 1.263, 682, 1.676, 685, 1.676, 687, 1.676, 707, 1.858, 738,
          1.676, 741, 1.54, 743, 1.676, 797, 2.689, 811, 1.676, 817, 1.34, 818,
          1.858, 819, 1.858, 825, 1.858, 835, 1.858, 881, 1.858, 882, 1.858,
          896, 1.431, 897, 2.689, 899, 1.676, 904, 1.54, 905, 1.858, 906, 1.858,
          908, 1.431, 909, 1.858, 914, 1.54, 915, 1.858, 916, 1.858, 918, 1.431,
          919, 1.858, 929, 1.858, 938, 1.54, 939, 1.858, 949, 1.431, 954, 1.431,
          957, 1.431, 960, 1.34, 977, 1.858, 985, 1.858, 992, 1.858, 1021,
          1.858, 1031, 1.858, 1048, 1.54, 1049, 1.858, 1054, 1.34, 1056, 1.431,
          1059, 1.431, 1061, 1.34, 1076, 1.858, 1082, 1.858, 1116, 1.54, 1117,
          2.689, 1118, 2.689, 1154, 1.54, 1168, 1.858, 1178, 2.689, 1179, 1.858,
          1185, 1.858, 1189, 1.858, 1190, 1.858, 1192, 1.676, 1193, 1.858, 1194,
          1.858, 1219, 1.676, 1257, 1.858, 1267, 1.858, 1269, 1.858, 1271,
          1.431, 1272, 1.858, 1275, 1.858, 1290, 1.54, 1291, 1.858, 1299, 1.34,
          1308, 1.858, 1317, 1.858, 1348, 1.858, 1349, 1.858, 1378, 1.676, 1379,
          2.135, 1380, 2.135, 1381, 2.135, 1382, 1.858, 1383, 1.858, 1384,
          8.063, 1385, 3.426, 1386, 4.291, 1387, 7.463, 1388, 4.291, 1389,
          4.291, 1390, 4.291, 1391, 3.426, 1392, 2.689, 1393, 2.689, 1394,
          1.858, 1395, 1.858, 1396, 1.858, 1397, 2.689, 1398, 2.689, 1399, 6.03,
          1400, 4.291, 1401, 6.467, 1402, 5.739, 1403, 4.91, 1404, 2.982, 1405,
          1.858, 1406, 1.858, 1407, 1.858, 1408, 1.858, 1409, 3.734, 1410,
          1.858, 1411, 1.858, 1412, 1.858, 1413, 4.291, 1414, 1.676, 1415,
          2.135, 1416, 2.135,
        ],
      ],
      ['title/dependencies.html', [259, 2.609, 1417, 2.982]],
      [
        'body/dependencies.html',
        [
          0, 0.461, 22, 0.014, 50, 1.059, 53, 0.01, 54, 0.01, 115, 1.356, 168,
          2.526, 177, 2.049, 179, 3.793, 180, 2.996, 254, 1.818, 259, 2.568,
          315, 4.206, 316, 4.206, 319, 3.793, 332, 4.206, 333, 5.4, 337, 2.858,
          339, 4.206, 343, 3.485, 387, 3.485, 395, 3.034, 563, 3.485, 645,
          4.206, 735, 4.206, 810, 4.206, 1218, 5.4, 1418, 4.833, 1419, 4.833,
          1420, 6.854, 1421, 4.833, 1422, 4.833, 1423, 4.833, 1424, 6.205, 1425,
          4.833, 1426, 4.833, 1427, 4.833, 1428, 4.833, 1429, 4.833, 1430,
          4.833, 1431, 4.833, 1432, 4.833, 1433, 4.833, 1434, 4.833, 1435,
          4.833, 1436, 4.833, 1437, 4.833, 1438, 4.833, 1439, 4.833, 1440,
          4.833, 1441, 4.833, 1442, 4.833, 1443, 4.833, 1444, 4.833, 1445,
          4.833, 1446, 4.833, 1447, 4.833, 1448, 4.833, 1449, 4.206, 1450,
          6.205, 1451, 4.833, 1452, 4.833, 1453, 4.833, 1454, 4.833, 1455,
          4.833, 1456, 4.833, 1457, 4.833, 1458, 4.833, 1459, 4.833,
        ],
      ],
      ['title/miscellaneous/functions.html', [1460, 2.151, 1461, 4.274]],
      [
        'body/miscellaneous/functions.html',
        [
          8, 0.435, 12, 1.639, 21, 0.754, 22, 0.013, 32, 1.102, 53, 0.01, 54,
          0.01, 96, 2.606, 97, 1.889, 99, 1.502, 168, 1.82, 250, 3.301, 262,
          2.984, 280, 4.63, 404, 3.339, 414, 2.501, 489, 4.63, 491, 4.253, 556,
          2.644, 558, 3.702, 575, 3.702, 579, 3.488, 581, 4.423, 582, 3.953,
          589, 3.224, 590, 3.224, 592, 3.953, 593, 5.712, 648, 3.953, 669, 4.63,
          1117, 3.509, 1118, 4.63, 1119, 5.134, 1120, 3.891, 1154, 4.253, 1203,
          5.134, 1219, 5.181, 1382, 3.891, 1383, 5.134, 1392, 3.509, 1393, 4.63,
          1397, 3.509, 1398, 4.63, 1404, 3.891, 1414, 3.509, 1460, 2.807, 1461,
          3.891, 1462, 4.63, 1463, 5.899, 1464, 3.891, 1465, 3.891, 1466, 3.891,
          1467, 4.471, 1468, 4.471, 1469, 4.471, 1470, 4.471, 1471, 4.471, 1472,
          4.471, 1473, 3.891, 1474, 4.471, 1475, 5.899, 1476, 4.471, 1477,
          4.471,
        ],
      ],
      ['title/index.html', [8, 0.333, 1478, 3.426, 1479, 3.426]],
      [
        'body/index.html',
        [
          4, 0.148, 13, 1.299, 22, 0.014, 53, 0.01, 54, 0.01, 243, 5.006, 353,
          3.899, 360, 4.323, 367, 4.323, 405, 4.956, 648, 3.329, 786, 4.323,
          1121, 3.899, 1215, 5.496, 1378, 3.899, 1449, 6.042, 1480, 4.967, 1481,
          4.967, 1482, 6.315, 1483, 4.967, 1484, 4.967, 1485, 4.967, 1486,
          4.967, 1487, 4.967, 1488, 4.967, 1489, 4.967, 1490, 4.967, 1491,
          7.832, 1492, 4.967, 1493, 7.708, 1494, 4.967, 1495, 4.967, 1496,
          4.967, 1497, 4.967, 1498, 6.315, 1499, 4.967, 1500, 4.967, 1501,
          4.967, 1502, 5.496, 1503, 6.315, 1504, 4.967, 1505, 4.967, 1506,
          4.967, 1507, 4.967, 1508, 4.967, 1509, 4.323, 1510, 4.967, 1511,
          4.967, 1512, 4.967, 1513, 4.967, 1514, 4.967, 1515, 4.967, 1516,
          4.967, 1517, 4.967, 1518, 4.967, 1519, 4.967, 1520, 4.323, 1521,
          4.967, 1522, 4.967, 1523, 4.967, 1524, 4.967, 1525, 4.967, 1526,
          4.967, 1527, 4.323,
        ],
      ],
      ['title/modules.html', [258, 2.952]],
      [
        'body/modules.html',
        [
          22, 0.012, 53, 0.012, 54, 0.012, 257, 3.969, 258, 3.147, 304, 3.969,
          307, 3.718, 308, 3.969, 309, 3.969, 310, 3.969, 1509, 7.001, 1528,
          8.044, 1529, 8.044, 1530, 8.044,
        ],
      ],
      ['title/overview.html', [1531, 4.835]],
      [
        'body/overview.html',
        [
          2, 0.675, 22, 0.014, 53, 0.01, 54, 0.01, 55, 2.142, 80, 2.339, 116,
          4.307, 157, 3.803, 256, 2.142, 257, 4.85, 258, 2.574, 259, 2.574, 260,
          2.865, 261, 2.865, 262, 2.451, 263, 2.711, 264, 2.865, 265, 4.217,
          266, 4.217, 267, 3.675, 268, 2.865, 269, 2.865, 272, 2.711, 304,
          5.382, 305, 4.217, 306, 4.217, 307, 4.888, 308, 5.015, 309, 5.015,
          310, 5.218, 384, 3.041, 420, 3.901, 677, 4.605, 699, 4.217, 700,
          4.217, 701, 4.217, 761, 3.803, 960, 4.307, 989, 4.217, 990, 4.217,
          1061, 4.307, 1078, 4.217, 1079, 4.217, 1299, 4.307, 1311, 4.217, 1312,
          4.217, 1531, 4.217, 1532, 4.845, 1533, 4.845,
        ],
      ],
      ['title/properties.html', [9, 0.897, 1417, 2.982]],
      [
        'body/properties.html',
        [
          9, 1.148, 13, 1.642, 22, 0.013, 53, 0.012, 54, 0.012, 1502, 5.467,
          1520, 5.467, 1527, 5.467, 1534, 6.282, 1535, 6.282, 1536, 6.282,
        ],
      ],
      ['title/miscellaneous/typealiases.html', [1460, 2.151, 1537, 4.911]],
      [
        'body/miscellaneous/typealiases.html',
        [
          8, 0.55, 21, 0.665, 22, 0.014, 53, 0.011, 54, 0.011, 164, 3.158, 190,
          3.787, 284, 3.342, 286, 3.787, 385, 4.075, 396, 5.369, 397, 4.075,
          398, 4.436, 399, 4.436, 400, 4.436, 401, 5.369, 402, 4.294, 556,
          3.342, 581, 4.584, 582, 4.584, 588, 4.045, 1211, 4.918, 1414, 4.436,
          1460, 3.547, 1462, 5.774, 1464, 4.918, 1473, 5.954, 1538, 5.651, 1539,
          7.357,
        ],
      ],
      ['title/miscellaneous/variables.html', [1460, 2.151, 1540, 4.274]],
      [
        'body/miscellaneous/variables.html',
        [
          1, 0.984, 6, 1.058, 8, 0.306, 13, 1.575, 21, 0.674, 22, 0.014, 23,
          1.282, 32, 1.007, 39, 1.185, 42, 0.884, 53, 0.008, 54, 0.008, 56,
          1.52, 57, 1.296, 59, 1.232, 61, 1.232, 64, 0.916, 66, 1.282, 76,
          1.521, 77, 2.23, 97, 1.333, 139, 2.088, 168, 2.453, 170, 4.494, 183,
          4.761, 185, 2.741, 191, 1.908, 194, 2.741, 208, 1.709, 227, 2.741,
          238, 2.319, 276, 3.096, 311, 2.472, 349, 3.625, 350, 2.472, 414,
          3.363, 473, 2.731, 491, 3.331, 522, 3.235, 556, 1.862, 558, 2.899,
          566, 3.83, 570, 4.836, 574, 3.095, 575, 1.977, 576, 3.095, 577, 2.271,
          578, 3.095, 579, 1.862, 630, 3.095, 631, 3.944, 632, 3.944, 633,
          2.271, 634, 3.095, 635, 2.271, 636, 3.095, 637, 2.271, 639, 2.472,
          640, 3.625, 647, 3.625, 648, 2.11, 682, 3.625, 685, 3.625, 687, 3.625,
          738, 3.625, 743, 3.625, 780, 4.294, 797, 2.472, 808, 2.741, 811,
          3.625, 897, 2.472, 899, 3.625, 901, 2.11, 903, 2.741, 1032, 4.761,
          1392, 2.472, 1393, 3.625, 1394, 2.741, 1395, 4.02, 1396, 4.02, 1397,
          2.472, 1398, 3.625, 1405, 2.741, 1406, 4.02, 1407, 2.741, 1408, 4.02,
          1409, 4.761, 1410, 4.02, 1411, 4.02, 1412, 4.02, 1460, 1.977, 1462,
          5.264, 1465, 2.741, 1466, 2.741, 1540, 2.741, 1541, 3.149, 1542,
          3.149, 1543, 3.149, 1544, 3.149, 1545, 3.149, 1546, 5.471, 1547,
          3.149, 1548, 3.149, 1549, 3.149, 1550, 3.149, 1551, 3.149, 1552,
          3.149, 1553, 5.471, 1554, 5.471, 1555, 3.149, 1556, 3.149, 1557,
          3.149, 1558, 5.471, 1559, 3.149,
        ],
      ],
    ],
    invertedIndex: [
      [
        '',
        {
          _index: 22,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        '0',
        {
          _index: 412,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/IamService.html': {},
            'classes/PaginationDto.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['0.0.1', { _index: 1535, title: {}, body: { 'properties.html': {} } }],
      ['0.1.6', { _index: 1422, title: {}, body: { 'dependencies.html': {} } }],
      [
        '0.14.1',
        { _index: 1438, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['0.2.0', { _index: 1457, title: {}, body: { 'dependencies.html': {} } }],
      ['0.2.9', { _index: 1455, title: {}, body: { 'dependencies.html': {} } }],
      [
        '0.23.0',
        { _index: 1453, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['0.5.1', { _index: 1437, title: {}, body: { 'dependencies.html': {} } }],
      ['0/1', { _index: 1384, title: {}, body: { 'coverage.html': {} } }],
      ['0/10', { _index: 1388, title: {}, body: { 'coverage.html': {} } }],
      ['0/11', { _index: 1385, title: {}, body: { 'coverage.html': {} } }],
      ['0/12', { _index: 1390, title: {}, body: { 'coverage.html': {} } }],
      ['0/14', { _index: 1391, title: {}, body: { 'coverage.html': {} } }],
      ['0/2', { _index: 1402, title: {}, body: { 'coverage.html': {} } }],
      ['0/3', { _index: 1399, title: {}, body: { 'coverage.html': {} } }],
      ['0/4', { _index: 1400, title: {}, body: { 'coverage.html': {} } }],
      ['0/5', { _index: 1401, title: {}, body: { 'coverage.html': {} } }],
      ['0/6', { _index: 1413, title: {}, body: { 'coverage.html': {} } }],
      ['0/7', { _index: 1403, title: {}, body: { 'coverage.html': {} } }],
      ['0/8', { _index: 1386, title: {}, body: { 'coverage.html': {} } }],
      ['0/9', { _index: 1389, title: {}, body: { 'coverage.html': {} } }],
      [
        '0})@apiproperty({description',
        {
          _index: 853,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        '0})@max(100)@min(5)@isint()@apiproperty({description',
        {
          _index: 857,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        '1',
        {
          _index: 55,
          title: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'classes/Session-1.html': {},
            'classes/User-1.html': {},
          },
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        '1.0.0',
        { _index: 655, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        '1.10.0',
        { _index: 1451, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['1.4.6', { _index: 1443, title: {}, body: { 'dependencies.html': {} } }],
      ['1.7.2', { _index: 1431, title: {}, body: { 'dependencies.html': {} } }],
      ['1.7.4', { _index: 1440, title: {}, body: { 'dependencies.html': {} } }],
      [
        '10',
        {
          _index: 421,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'interfaces/IAppConfig.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        '10.0.0',
        { _index: 1420, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '10.3.10',
        { _index: 1424, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '10.4.5',
        { _index: 1452, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '100',
        {
          _index: 424,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreateUserDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        "100)'})@transform",
        {
          _index: 858,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        '1000',
        {
          _index: 764,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      [
        '12',
        { _index: 530, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        '123e4567',
        {
          _index: 244,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        '12d3',
        {
          _index: 246,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        '18',
        { _index: 533, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      ['2.2.2', { _index: 1419, title: {}, body: { 'dependencies.html': {} } }],
      [
        '2.30.1',
        { _index: 1448, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '20',
        {
          _index: 422,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        "20})@isnotsamenameindatabase('permission",
        {
          _index: 478,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        '223e4567',
        {
          _index: 875,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        '24',
        {
          _index: 766,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      ['3.0.2', { _index: 1418, title: {}, body: { 'dependencies.html': {} } }],
      [
        '3.13.1',
        { _index: 1459, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['3.2.3', { _index: 1421, title: {}, body: { 'dependencies.html': {} } }],
      [
        '3000',
        { _index: 651, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        '323e4567',
        {
          _index: 877,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      ['4', { _index: 1436, title: {}, body: { 'dependencies.html': {} } }],
      ['4.1.0', { _index: 1426, title: {}, body: { 'dependencies.html': {} } }],
      [
        '4.17.21',
        { _index: 1446, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '423e4567',
        {
          _index: 879,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        '426614174000',
        {
          _index: 248,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        '426614174001',
        {
          _index: 876,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        '426614174002',
        {
          _index: 878,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        '426614174003',
        {
          _index: 880,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      ['43', { _index: 1533, title: {}, body: { 'overview.html': {} } }],
      [
        '5',
        {
          _index: 420,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'overview.html': {},
          },
        },
      ],
      ['5.1.1', { _index: 1432, title: {}, body: { 'dependencies.html': {} } }],
      [
        '5.17.0',
        { _index: 1429, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['5.7.3', { _index: 1434, title: {}, body: { 'dependencies.html': {} } }],
      [
        '50',
        {
          _index: 423,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      ['6', { _index: 1532, title: {}, body: { 'overview.html': {} } }],
      [
        '60',
        {
          _index: 765,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      [
        '6000',
        { _index: 355, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        '7',
        {
          _index: 761,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'classes/TestHelper.html': {},
            'overview.html': {},
          },
        },
      ],
      ['7.0.3', { _index: 1445, title: {}, body: { 'dependencies.html': {} } }],
      ['7.4.0', { _index: 1427, title: {}, body: { 'dependencies.html': {} } }],
      ['7.8.1', { _index: 1458, title: {}, body: { 'dependencies.html': {} } }],
      [
        '8',
        { _index: 535, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        '_apipermission',
        {
          _index: 69,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        '_apipermissiongroup',
        {
          _index: 71,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        '_ctx',
        {
          _index: 632,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        '_data',
        {
          _index: 631,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        '_gen/prisma',
        {
          _index: 128,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        '_model',
        {
          _index: 1550,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '_operationlog',
        {
          _index: 72,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        '_permission',
        {
          _index: 65,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        '_permissiongroup',
        {
          _index: 67,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        '_profile',
        {
          _index: 60,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        '_role',
        {
          _index: 63,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        '_session',
        {
          _index: 62,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        '_token',
        { _index: 734, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        '_user',
        {
          _index: 58,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'injectables/IamService.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'a456',
        {
          _index: 247,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        'abstract',
        { _index: 820, title: {}, body: { 'classes/ListResult.html': {} } },
      ],
      [
        'accessors',
        {
          _index: 800,
          title: {},
          body: { 'classes/InitUtil.html': {}, 'classes/TestHelper.html': {} },
        },
      ],
      [
        'active',
        {
          _index: 780,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'injectables/UserService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'admin',
        {
          _index: 227,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'afterall(async',
        { _index: 1244, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'aftereach(async',
        { _index: 1240, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'agent',
        {
          _index: 1556,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'aliases',
        {
          _index: 1538,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'allowinfinity',
        {
          _index: 410,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'allownan',
        {
          _index: 409,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'already',
        {
          _index: 774,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['amazing', { _index: 1510, title: {}, body: { 'index.html': {} } }],
      [
        'ands',
        {
          _index: 434,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'api',
        {
          _index: 85,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'guards/ApiPermissionGuard.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'api.id',
        {
          _index: 233,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'api.ispublic',
        {
          _index: 219,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'api_permission',
        {
          _index: 70,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'api_permission_group',
        {
          _index: 46,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'apibearerauth',
        {
          _index: 123,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/IamController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'apiextramodels',
        {
          _index: 122,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'apiextramodels(apipermission',
        {
          _index: 132,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'apiextramodels(successoperationresponse',
        {
          _index: 1068,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'apiokresponse',
        {
          _index: 120,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'apiokresponse({type',
        {
          _index: 943,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'apioperation',
        {
          _index: 119,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/IamController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'apipermission',
        {
          _index: 1,
          title: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
          },
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'injectables/RoleService.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'apipermissioncontroller',
        {
          _index: 79,
          title: { 'controllers/ApiPermissionController.html': {} },
          body: {
            'controllers/ApiPermissionController.html': {},
            'modules/ApiPermissionModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'apipermissiongroup',
        {
          _index: 23,
          title: {
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
          },
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'apipermissiongroups',
        {
          _index: 10,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'injectables/ApiPermissionService.html': {},
          },
        },
      ],
      [
        'apipermissionguard',
        {
          _index: 158,
          title: { 'guards/ApiPermissionGuard.html': {} },
          body: {
            'guards/ApiPermissionGuard.html': {},
            'modules/IamModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'apipermissionid',
        {
          _index: 232,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'classes/OperationLog-1.html': {},
          },
        },
      ],
      [
        'apipermissionidexistdto',
        {
          _index: 101,
          title: { 'classes/ApiPermissionIdExistDto.html': {} },
          body: {
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'apipermissionidexistdto:12',
        {
          _index: 1266,
          title: {},
          body: { 'classes/UpdateApiPermissionDto.html': {} },
        },
      ],
      [
        'apipermissionids',
        { _index: 505, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'apipermissionmodule',
        {
          _index: 257,
          title: { 'modules/ApiPermissionModule.html': {} },
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'apipermissions',
        {
          _index: 193,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/Role-1.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'apipermissions.length',
        {
          _index: 1091,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'apipermissionservice',
        {
          _index: 116,
          title: { 'injectables/ApiPermissionService.html': {} },
          body: {
            'controllers/ApiPermissionController.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'apiproperty',
        {
          _index: 48,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'classes/Session-1.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'apiproperty({enum',
        {
          _index: 1043,
          title: {},
          body: {
            'classes/Role-1.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'apiproperty({isarray',
        {
          _index: 25,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Role-1.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'apiproperty({type',
        {
          _index: 30,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'classes/Session-1.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'apipropertyoptional',
        {
          _index: 49,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'classes/Session-1.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'apipropertyoptional({type',
        {
          _index: 33,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'classes/Session-1.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'apiresponse',
        {
          _index: 1396,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'apitags',
        {
          _index: 121,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/IamController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "apitags('api",
        {
          _index: 130,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        "api权限'})@apiokresponse({type",
        {
          _index: 93,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'api权限id',
        {
          _index: 242,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        "api权限名称必须是字符串'})@apiproperty({description",
        {
          _index: 840,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'app',
        {
          _index: 648,
          title: {},
          body: {
            'interfaces/IAppConfig.html': {},
            'classes/TestHelper.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'app.get(prismaservice',
        { _index: 1123, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'app.gethttpserver',
        { _index: 1122, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'app.module',
        { _index: 1217, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'app_config_token',
        {
          _index: 647,
          title: {},
          body: {
            'interfaces/IAppConfig.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'app_guard',
        { _index: 704, title: {}, body: { 'modules/IamModule.html': {} } },
      ],
      [
        'app_interceptor',
        { _index: 334, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'app_pipe',
        {
          _index: 335,
          title: {},
          body: { 'modules/AppModule.html': {}, 'classes/TestHelper.html': {} },
        },
      ],
      [
        'appconfig',
        { _index: 321, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'appdescription',
        { _index: 641, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'apphost',
        { _index: 642, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      ['applications', { _index: 1487, title: {}, body: { 'index.html': {} } }],
      [
        'applydecorators(apiokresponse',
        {
          _index: 1552,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'appmodule',
        {
          _index: 304,
          title: { 'modules/AppModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'classes/TestHelper.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'appname',
        { _index: 643, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'appversion',
        { _index: 644, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'args',
        {
          _index: 580,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'argumentmetadata',
        {
          _index: 564,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'array',
        {
          _index: 483,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/TestHelper.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'arraymaxsize',
        {
          _index: 870,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'arraymaxsize(100',
        {
          _index: 873,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'arrayminsize',
        {
          _index: 869,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'arrayminsize(1',
        {
          _index: 871,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'async',
        {
          _index: 162,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/TestHelper.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'author',
        {
          _index: 1520,
          title: {},
          body: { 'index.html': {}, 'properties.html': {} },
        },
      ],
      [
        'availableroutes',
        { _index: 1126, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'availableroutes.filter',
        { _index: 1145, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'availableroutes.map((route',
        { _index: 1142, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'avatar',
        {
          _index: 516,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/Profile-1.html': {},
          },
        },
      ],
      [
        'await',
        {
          _index: 187,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/TestHelper.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      ['axios', { _index: 1430, title: {}, body: { 'dependencies.html': {} } }],
      ['backers', { _index: 1511, title: {}, body: { 'index.html': {} } }],
      [
        'badrequestexception',
        {
          _index: 569,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        "badrequestexception('invalid",
        { _index: 772, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        "badrequestexception('role",
        {
          _index: 1108,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        "badrequestexception('user",
        {
          _index: 769,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'badrequestexception(errormessages',
        {
          _index: 627,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'badrequestexception(messages.flat',
        {
          _index: 1375,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'bcrypt',
        {
          _index: 735,
          title: {},
          body: { 'injectables/IamService.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'bcrypt.compare(str',
        { _index: 753, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'bcrypt.gensalt(10',
        { _index: 751, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'bcrypt.hash(str',
        { _index: 752, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'before_all_db_validation_key',
        {
          _index: 574,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'beforeall(async',
        { _index: 1223, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'beforealldbvalidation',
        {
          _index: 575,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'beforealldbvalidation(func',
        {
          _index: 589,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'beforealldbvalidationfunc',
        {
          _index: 582,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'beforeallfunc',
        {
          _index: 600,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'beforeallfunc(value',
        {
          _index: 604,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'behaviorsubject',
        {
          _index: 808,
          title: {},
          body: {
            'classes/InitUtil.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'bio',
        {
          _index: 517,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/Profile-1.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'body',
        {
          _index: 111,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'body(dbvalidationpipe',
        {
          _index: 633,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'boolean',
        {
          _index: 36,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/Role-1.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'bootstrap',
        {
          _index: 262,
          title: {},
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'classes/TestHelper.html': {},
            'modules/UserModule.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'bootstrap(app',
        {
          _index: 1470,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'bootstrap(server',
        { _index: 1234, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      ['browse', { _index: 1530, title: {}, body: { 'modules.html': {} } }],
      ['browser', { _index: 1528, title: {}, body: { 'modules.html': {} } }],
      ['building', { _index: 1483, title: {}, body: { 'index.html': {} } }],
      [
        'buildresponse',
        {
          _index: 836,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'buildresponse(data',
        {
          _index: 453,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'buildwhere',
        {
          _index: 837,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'buildwhere(options',
        {
          _index: 431,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'buildwhereoptions',
        {
          _index: 383,
          title: { 'interfaces/BuildWhereOptions.html': {} },
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['cache', { _index: 1433, title: {}, body: { 'dependencies.html': {} } }],
      [
        'cacheinterceptor',
        { _index: 330, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'cachemodule',
        { _index: 331, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'cachemodule.register',
        { _index: 361, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'callback',
        { _index: 1241, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'canactivate',
        {
          _index: 163,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'canactivate(context',
        {
          _index: 169,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'case',
        {
          _index: 459,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'catch',
        { _index: 1237, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      ['chalk', { _index: 1435, title: {}, body: { 'dependencies.html': {} } }],
      [
        'class',
        {
          _index: 0,
          title: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'classes/UserIdExistDto.html': {},
          },
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'class/api_permission',
        {
          _index: 129,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
          },
        },
      ],
      [
        'class/api_permission.ts',
        {
          _index: 7,
          title: {},
          body: { 'classes/ApiPermission.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'class/api_permission.ts:11',
        { _index: 41, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'class/api_permission.ts:14',
        { _index: 38, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'class/api_permission.ts:17',
        { _index: 34, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'class/api_permission.ts:20',
        { _index: 37, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'class/api_permission.ts:23',
        { _index: 31, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'class/api_permission.ts:26',
        { _index: 44, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'class/api_permission.ts:29',
        { _index: 28, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'class/api_permission.ts:32',
        { _index: 40, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'class/api_permission.ts:35',
        { _index: 43, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'class/api_permission.ts:8',
        { _index: 35, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'class/api_permission_group.ts',
        {
          _index: 147,
          title: {},
          body: { 'classes/ApiPermissionGroup.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'class/api_permission_group.ts:12',
        {
          _index: 152,
          title: {},
          body: { 'classes/ApiPermissionGroup.html': {} },
        },
      ],
      [
        'class/api_permission_group.ts:15',
        {
          _index: 155,
          title: {},
          body: { 'classes/ApiPermissionGroup.html': {} },
        },
      ],
      [
        'class/api_permission_group.ts:18',
        {
          _index: 150,
          title: {},
          body: { 'classes/ApiPermissionGroup.html': {} },
        },
      ],
      [
        'class/api_permission_group.ts:21',
        {
          _index: 156,
          title: {},
          body: { 'classes/ApiPermissionGroup.html': {} },
        },
      ],
      [
        'class/api_permission_group.ts:24',
        {
          _index: 151,
          title: {},
          body: { 'classes/ApiPermissionGroup.html': {} },
        },
      ],
      [
        'class/api_permission_group.ts:6',
        {
          _index: 153,
          title: {},
          body: { 'classes/ApiPermissionGroup.html': {} },
        },
      ],
      [
        'class/api_permission_group.ts:9',
        {
          _index: 154,
          title: {},
          body: { 'classes/ApiPermissionGroup.html': {} },
        },
      ],
      [
        'class/index.ts',
        {
          _index: 56,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'class/operation_log.ts',
        {
          _index: 825,
          title: {},
          body: { 'classes/OperationLog-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'class/operation_log.ts:10',
        { _index: 834, title: {}, body: { 'classes/OperationLog-1.html': {} } },
      ],
      [
        'class/operation_log.ts:13',
        { _index: 833, title: {}, body: { 'classes/OperationLog-1.html': {} } },
      ],
      [
        'class/operation_log.ts:16',
        { _index: 828, title: {}, body: { 'classes/OperationLog-1.html': {} } },
      ],
      [
        'class/operation_log.ts:19',
        { _index: 832, title: {}, body: { 'classes/OperationLog-1.html': {} } },
      ],
      [
        'class/operation_log.ts:22',
        { _index: 830, title: {}, body: { 'classes/OperationLog-1.html': {} } },
      ],
      [
        'class/operation_log.ts:25',
        { _index: 826, title: {}, body: { 'classes/OperationLog-1.html': {} } },
      ],
      [
        'class/operation_log.ts:28',
        { _index: 827, title: {}, body: { 'classes/OperationLog-1.html': {} } },
      ],
      [
        'class/operation_log.ts:31',
        { _index: 829, title: {}, body: { 'classes/OperationLog-1.html': {} } },
      ],
      [
        'class/operation_log.ts:7',
        { _index: 831, title: {}, body: { 'classes/OperationLog-1.html': {} } },
      ],
      [
        'class/permission',
        {
          _index: 907,
          title: {},
          body: {
            'classes/PaginationPermissionResponse.html': {},
            'controllers/PermissionController.html': {},
          },
        },
      ],
      [
        'class/permission.ts',
        {
          _index: 929,
          title: {},
          body: { 'classes/Permission-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'class/permission.ts:10',
        { _index: 934, title: {}, body: { 'classes/Permission-1.html': {} } },
      ],
      [
        'class/permission.ts:13',
        { _index: 932, title: {}, body: { 'classes/Permission-1.html': {} } },
      ],
      [
        'class/permission.ts:16',
        { _index: 936, title: {}, body: { 'classes/Permission-1.html': {} } },
      ],
      [
        'class/permission.ts:19',
        { _index: 935, title: {}, body: { 'classes/Permission-1.html': {} } },
      ],
      [
        'class/permission.ts:22',
        { _index: 930, title: {}, body: { 'classes/Permission-1.html': {} } },
      ],
      [
        'class/permission.ts:25',
        { _index: 937, title: {}, body: { 'classes/Permission-1.html': {} } },
      ],
      [
        'class/permission.ts:28',
        { _index: 931, title: {}, body: { 'classes/Permission-1.html': {} } },
      ],
      [
        'class/permission.ts:7',
        { _index: 933, title: {}, body: { 'classes/Permission-1.html': {} } },
      ],
      [
        'class/permission_group.ts',
        {
          _index: 977,
          title: {},
          body: { 'classes/PermissionGroup-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'class/permission_group.ts:12',
        {
          _index: 980,
          title: {},
          body: { 'classes/PermissionGroup-1.html': {} },
        },
      ],
      [
        'class/permission_group.ts:15',
        {
          _index: 983,
          title: {},
          body: { 'classes/PermissionGroup-1.html': {} },
        },
      ],
      [
        'class/permission_group.ts:18',
        {
          _index: 978,
          title: {},
          body: { 'classes/PermissionGroup-1.html': {} },
        },
      ],
      [
        'class/permission_group.ts:21',
        {
          _index: 984,
          title: {},
          body: { 'classes/PermissionGroup-1.html': {} },
        },
      ],
      [
        'class/permission_group.ts:24',
        {
          _index: 979,
          title: {},
          body: { 'classes/PermissionGroup-1.html': {} },
        },
      ],
      [
        'class/permission_group.ts:6',
        {
          _index: 981,
          title: {},
          body: { 'classes/PermissionGroup-1.html': {} },
        },
      ],
      [
        'class/permission_group.ts:9',
        {
          _index: 982,
          title: {},
          body: { 'classes/PermissionGroup-1.html': {} },
        },
      ],
      [
        'class/profile.ts',
        {
          _index: 1021,
          title: {},
          body: { 'classes/Profile-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'class/profile.ts:12',
        { _index: 1022, title: {}, body: { 'classes/Profile-1.html': {} } },
      ],
      [
        'class/profile.ts:15',
        { _index: 1027, title: {}, body: { 'classes/Profile-1.html': {} } },
      ],
      [
        'class/profile.ts:18',
        { _index: 1029, title: {}, body: { 'classes/Profile-1.html': {} } },
      ],
      [
        'class/profile.ts:21',
        { _index: 1030, title: {}, body: { 'classes/Profile-1.html': {} } },
      ],
      [
        'class/profile.ts:24',
        { _index: 1024, title: {}, body: { 'classes/Profile-1.html': {} } },
      ],
      [
        'class/profile.ts:27',
        { _index: 1028, title: {}, body: { 'classes/Profile-1.html': {} } },
      ],
      [
        'class/profile.ts:30',
        { _index: 1025, title: {}, body: { 'classes/Profile-1.html': {} } },
      ],
      [
        'class/profile.ts:6',
        { _index: 1026, title: {}, body: { 'classes/Profile-1.html': {} } },
      ],
      [
        'class/profile.ts:9',
        { _index: 1023, title: {}, body: { 'classes/Profile-1.html': {} } },
      ],
      [
        'class/role',
        {
          _index: 917,
          title: {},
          body: {
            'classes/PaginationRoleResponse.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'class/role.ts',
        {
          _index: 1031,
          title: {},
          body: { 'classes/Role-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'class/role.ts:12',
        { _index: 1039, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/role.ts:15',
        { _index: 1037, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/role.ts:18',
        { _index: 1047, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/role.ts:21',
        { _index: 1040, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/role.ts:24',
        { _index: 1033, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/role.ts:27',
        { _index: 1045, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/role.ts:30',
        { _index: 1035, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/role.ts:33',
        { _index: 1034, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/role.ts:36',
        { _index: 1046, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/role.ts:39',
        { _index: 1036, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/role.ts:9',
        { _index: 1038, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'class/session.ts',
        {
          _index: 1168,
          title: {},
          body: { 'classes/Session-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'class/session.ts:12',
        { _index: 1169, title: {}, body: { 'classes/Session-1.html': {} } },
      ],
      [
        'class/session.ts:15',
        { _index: 1175, title: {}, body: { 'classes/Session-1.html': {} } },
      ],
      [
        'class/session.ts:18',
        { _index: 1170, title: {}, body: { 'classes/Session-1.html': {} } },
      ],
      [
        'class/session.ts:21',
        { _index: 1172, title: {}, body: { 'classes/Session-1.html': {} } },
      ],
      [
        'class/session.ts:24',
        { _index: 1171, title: {}, body: { 'classes/Session-1.html': {} } },
      ],
      [
        'class/session.ts:27',
        { _index: 1176, title: {}, body: { 'classes/Session-1.html': {} } },
      ],
      [
        'class/session.ts:30',
        { _index: 1177, title: {}, body: { 'classes/Session-1.html': {} } },
      ],
      [
        'class/session.ts:6',
        { _index: 1173, title: {}, body: { 'classes/Session-1.html': {} } },
      ],
      [
        'class/session.ts:9',
        { _index: 1174, title: {}, body: { 'classes/Session-1.html': {} } },
      ],
      [
        'class/user.ts',
        {
          _index: 1275,
          title: {},
          body: { 'classes/User-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'class/user.ts:10',
        { _index: 1279, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:13',
        { _index: 1278, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:16',
        { _index: 1280, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:19',
        { _index: 1282, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:22',
        { _index: 1288, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:25',
        { _index: 1283, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:28',
        { _index: 1286, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:31',
        { _index: 1284, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:34',
        { _index: 1285, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:37',
        { _index: 1276, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:40',
        { _index: 1289, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:43',
        { _index: 1277, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'class/user.ts:46',
        { _index: 1281, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'classes',
        {
          _index: 2,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'classes/UserIdExistDto.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'cleanupcallbacks',
        { _index: 1196, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'clone',
        {
          _index: 462,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'clone[key',
        {
          _index: 467,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'clonedeep',
        {
          _index: 392,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'clonedeep(this',
        {
          _index: 463,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'cluster_apipermissionmodule',
        {
          _index: 265,
          title: {},
          body: { 'modules/ApiPermissionModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_apipermissionmodule_providers',
        {
          _index: 266,
          title: {},
          body: { 'modules/ApiPermissionModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_appmodule',
        {
          _index: 305,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_appmodule_imports',
        {
          _index: 306,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_iammodule',
        {
          _index: 699,
          title: {},
          body: { 'modules/IamModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_iammodule_exports',
        {
          _index: 700,
          title: {},
          body: { 'modules/IamModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_iammodule_providers',
        {
          _index: 701,
          title: {},
          body: { 'modules/IamModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_permissionmodule',
        {
          _index: 989,
          title: {},
          body: { 'modules/PermissionModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_permissionmodule_providers',
        {
          _index: 990,
          title: {},
          body: { 'modules/PermissionModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_rolemodule',
        {
          _index: 1078,
          title: {},
          body: { 'modules/RoleModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_rolemodule_providers',
        {
          _index: 1079,
          title: {},
          body: { 'modules/RoleModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_usermodule',
        {
          _index: 1311,
          title: {},
          body: { 'modules/UserModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_usermodule_imports',
        { _index: 1313, title: {}, body: { 'modules/UserModule.html': {} } },
      ],
      [
        'cluster_usermodule_providers',
        {
          _index: 1312,
          title: {},
          body: { 'modules/UserModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'commons/decorators/all',
        {
          _index: 251,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UserIdExistDto.html': {},
          },
        },
      ],
      [
        'commons/decorators/not',
        {
          _index: 490,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'commons/dtos/pagination.dto',
        {
          _index: 868,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'commons/pipes/validation',
        { _index: 345, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'commons/slices/dbvalidation',
        { _index: 348, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'commons/types/list',
        {
          _index: 886,
          title: {},
          body: {
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
          },
        },
      ],
      [
        'commons/types/success',
        {
          _index: 964,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'compare',
        { _index: 708, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'compare(str',
        { _index: 716, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'compression',
        { _index: 1439, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'condition',
        {
          _index: 1472,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'config',
        { _index: 323, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'config.ts',
        {
          _index: 640,
          title: {},
          body: {
            'interfaces/IAppConfig.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'configmodule',
        { _index: 317, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'configmodule.forroot',
        { _index: 356, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'configs/app',
        { _index: 322, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'configservice',
        { _index: 318, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'connect',
        {
          _index: 299,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'console.error(e',
        { _index: 1239, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'console.log(key',
        {
          _index: 443,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'console.log(value',
        {
          _index: 456,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'const',
        {
          _index: 76,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/OperationLog.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session.html': {},
            'classes/TestHelper.html': {},
            'classes/User.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'constants/iam',
        { _index: 744, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'constants/preset',
        { _index: 739, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'constraint',
        {
          _index: 1371,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'constraints',
        {
          _index: 1368,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'constraints.map(async',
        {
          _index: 1370,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'constructor',
        {
          _index: 164,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'constructor(i18n',
        {
          _index: 1351,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'constructor(mockproviders',
        { _index: 1200, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'constructor(prisma',
        {
          _index: 165,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'constructor(private',
        {
          _index: 133,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'constructor)[key',
        {
          _index: 608,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'contains',
        {
          _index: 284,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'context',
        {
          _index: 172,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'context.switchtohttp().getrequest',
        {
          _index: 182,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'controller',
        {
          _index: 78,
          title: {
            'controllers/ApiPermissionController.html': {},
            'controllers/IamController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/IamController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "controller('api",
        {
          _index: 131,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        "controller('iam",
        {
          _index: 689,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        "controller('permission",
        {
          _index: 966,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        "controller('role",
        {
          _index: 1067,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        "controller('user",
        {
          _index: 1302,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'controllers',
        {
          _index: 80,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'modules/ApiPermissionModule.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'controllers/PermissionController.html': {},
            'modules/PermissionModule.html': {},
            'controllers/RoleController.html': {},
            'modules/RoleModule.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'cookie',
        { _index: 1441, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'count',
        { _index: 746, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'coverage',
        {
          _index: 1378,
          title: { 'coverage.html': {} },
          body: { 'coverage.html': {}, 'index.html': {} },
        },
      ],
      [
        'create',
        {
          _index: 902,
          title: {},
          body: {
            'classes/PaginationPermissionDto.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'create(@body',
        {
          _index: 968,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'create(createpermissiondto',
        {
          _index: 941,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
          },
        },
      ],
      [
        'create(createroledto',
        {
          _index: 1050,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'create(createuserdto',
        {
          _index: 1292,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'createdat',
        {
          _index: 11,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'classes/Session-1.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'createdres',
        { _index: 1160, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'createdres.count',
        { _index: 1164, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'createnestapplication',
        { _index: 1232, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'createparamdecorator',
        {
          _index: 570,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'createpermissiondto',
        {
          _index: 471,
          title: { 'classes/CreatePermissionDto.html': {} },
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'classes/UpdatePermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createpermissiondto.description',
        {
          _index: 1003,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'createpermissiondto.name',
        {
          _index: 1002,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'createpermissiondto.permissiongroupids?.map((id',
        {
          _index: 1005,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'createpermissiondto.roleids?.map((id',
        {
          _index: 1004,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'createpermissiondtofiltertype',
        {
          _index: 899,
          title: {},
          body: {
            'classes/PaginationPermissionDto.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'createroledto',
        {
          _index: 502,
          title: { 'classes/CreateRoleDto.html': {} },
          body: {
            'classes/CreateRoleDto.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateRoleDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createroledto.apipermissionids',
        {
          _index: 1090,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'createroledto.apipermissionids.length',
        {
          _index: 1092,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'createroledto.description',
        {
          _index: 1100,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'createroledto.name',
        {
          _index: 1099,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'createroledto.permissionids',
        {
          _index: 1094,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'createroledto.permissionids.length',
        {
          _index: 1096,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'createuserdto',
        {
          _index: 513,
          title: { 'classes/CreateUserDto.html': {} },
          body: {
            'classes/CreateUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createuserdto.bio',
        {
          _index: 1333,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'createuserdto.email',
        {
          _index: 1327,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'createuserdto.name',
        {
          _index: 1329,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'createuserdto.phone',
        {
          _index: 1332,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'createuserdto.roleid',
        {
          _index: 1331,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'createuserdto.status',
        {
          _index: 1330,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      ['cross', { _index: 1444, title: {}, body: { 'dependencies.html': {} } }],
      [
        'crypto',
        {
          _index: 737,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      [
        'ctx',
        {
          _index: 1553,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'ctx.switchtohttp().getrequest',
        {
          _index: 1554,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'data',
        {
          _index: 208,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/TestHelper.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'data.success',
        {
          _index: 228,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'data:\\n',
        {
          _index: 215,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'date',
        {
          _index: 29,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/IamService.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'injectables/RoleService.html': {},
            'classes/Session-1.html': {},
            'classes/User-1.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'date(date.now',
        {
          _index: 763,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      [
        'days',
        { _index: 762, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'db.decorator',
        {
          _index: 252,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UserIdExistDto.html': {},
          },
        },
      ],
      [
        'db.decorator.ts',
        {
          _index: 1393,
          title: {},
          body: {
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'dbdata',
        {
          _index: 586,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'dbvalidationbody',
        {
          _index: 630,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'dbvalidationparam',
        {
          _index: 634,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'dbvalidationpipe',
        {
          _index: 347,
          title: { 'injectables/DBValidationPipe.html': {} },
          body: {
            'modules/AppModule.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'dbvalidationpipe(prismaservice',
        { _index: 379, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'dbvalidationquery',
        {
          _index: 636,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'declarations',
        {
          _index: 261,
          title: {},
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'decorators',
        {
          _index: 24,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/IamController.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
          },
        },
      ],
      [
        'decorators/get',
        {
          _index: 683,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'default',
        {
          _index: 566,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'classes/InitUtil.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Role-1.html': {},
            'classes/TestHelper.html': {},
            'classes/User-1.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'defined',
        {
          _index: 27,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'injectables/RoleService.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'injectables/UserService.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'deletable',
        {
          _index: 1032,
          title: {},
          body: {
            'classes/Role-1.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'delete',
        {
          _index: 466,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/IamService.html': {},
            'classes/PaginationDto.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'deletedat',
        {
          _index: 148,
          title: {},
          body: {
            'classes/ApiPermissionGroup.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'injectables/RoleService.html': {},
            'classes/Session-1.html': {},
            'classes/User-1.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'deletedres',
        { _index: 1147, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'deletedres.count',
        { _index: 1152, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'deletedroutes',
        { _index: 1140, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'deletedroutes.map((route',
        { _index: 1149, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'dependencies',
        {
          _index: 259,
          title: { 'dependencies.html': {} },
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'dependencies.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'description',
        {
          _index: 13,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/IAppConfig.html': {},
            'injectables/IamService.html': {},
            'classes/ListResult.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'injectables/PermissionService.html': {},
            'classes/Role-1.html': {},
            'injectables/RoleService.html': {},
            'classes/Session-1.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'index.html': {},
            'properties.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'development',
        {
          _index: 353,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'interfaces/IAppConfig.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'device',
        { _index: 760, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'devtoolsmodule',
        { _index: 314, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'devtoolsmodule.register',
        { _index: 351, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'disable',
        { _index: 783, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'disableerrormessages',
        { _index: 376, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'documentation',
        { _index: 1379, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'dto',
        {
          _index: 104,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'dto.all',
        {
          _index: 1101,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'dto.buildresponse(roles',
        {
          _index: 1103,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'dto.buildresponse(users',
        {
          _index: 1337,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'dto.buildwhere',
        {
          _index: 1105,
          title: {},
          body: {
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'dto.email',
        { _index: 768, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'dto.toskipandtake',
        {
          _index: 1106,
          title: {},
          body: {
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'dto/api',
        {
          _index: 124,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'dto/create',
        {
          _index: 961,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'dto/pagination',
        {
          _index: 109,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'dto/permission',
        {
          _index: 962,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'dto/role',
        {
          _index: 1064,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'dto/update',
        {
          _index: 118,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'dto/user',
        {
          _index: 1301,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'dtos/sign',
        {
          _index: 679,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
          },
        },
      ],
      [
        'dv',
        {
          _index: 280,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'dv(condition',
        {
          _index: 1471,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'dv(permissiongroupids',
        {
          _index: 301,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'dv(roleids',
        {
          _index: 298,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'e',
        { _index: 1238, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      ['e2e', { _index: 1499, title: {}, body: { 'index.html': {} } }],
      [
        'e89b',
        {
          _index: 245,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        'each',
        {
          _index: 481,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      ['efficient', { _index: 1484, title: {}, body: { 'index.html': {} } }],
      [
        'email',
        {
          _index: 518,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'injectables/IamService.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/TestHelper.html': {},
            'classes/User-1.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'emptyvalue',
        {
          _index: 1473,
          title: {},
          body: {
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'entityname',
        {
          _index: 1475,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'enum',
        {
          _index: 543,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Role-1.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'enumname',
        {
          _index: 1044,
          title: {},
          body: { 'classes/Role-1.html': {}, 'classes/User-1.html': {} },
        },
      ],
      [
        'enums',
        { _index: 545, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'enums.userstatus',
        { _index: 541, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'env',
        {
          _index: 645,
          title: {},
          body: { 'interfaces/IAppConfig.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'env.${envfilepath',
        { _index: 359, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'envfilepath',
        {
          _index: 349,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'eq',
        {
          _index: 397,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'injectables/UserService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'error',
        {
          _index: 1367,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        "error('apipermissionids",
        {
          _index: 1093,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        "error('not",
        { _index: 790, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        "error('permissionids",
        {
          _index: 1097,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'error.property',
        {
          _index: 1374,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'errormessages',
        {
          _index: 622,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'errors',
        {
          _index: 1361,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'errors.length',
        {
          _index: 1363,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'errors.map(async',
        {
          _index: 1366,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'eslint',
        { _index: 782, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'eslint/no',
        { _index: 787, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'example',
        {
          _index: 243,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'executioncontext',
        {
          _index: 170,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'exist.dto',
        {
          _index: 125,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'exist.dto.ts',
        {
          _index: 240,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/UserIdExistDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'exist.dto.ts:12',
        {
          _index: 249,
          title: {},
          body: { 'classes/ApiPermissionIdExistDto.html': {} },
        },
      ],
      [
        'exist.dto.ts:7',
        {
          _index: 987,
          title: {},
          body: {
            'classes/PermissionIdExistDto.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/UserIdExistDto.html': {},
          },
        },
      ],
      [
        'existingroutes',
        { _index: 1135, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'existingroutes.filter',
        { _index: 1141, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'existingroutes.map((route',
        { _index: 1138, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'existingroutespaths',
        { _index: 1137, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'existingroutespaths.includes(route.path',
        { _index: 1146, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'exists',
        {
          _index: 775,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'expired',
        {
          _index: 223,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'expiresat',
        {
          _index: 189,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/IamService.html': {},
            'classes/Session-1.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      [
        'export',
        {
          _index: 51,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'exports',
        {
          _index: 264,
          title: {},
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'express',
        {
          _index: 179,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'classes/TestHelper.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'extends',
        {
          _index: 75,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'extramodels',
        {
          _index: 77,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'fallbacklanguage',
        { _index: 363, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'false',
        {
          _index: 238,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'file',
        {
          _index: 5,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'filter',
        {
          _index: 809,
          title: {},
          body: { 'classes/InitUtil.html': {}, 'interfaces/Route.html': {} },
        },
      ],
      [
        'filter((item',
        {
          _index: 444,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'filter((key',
        {
          _index: 436,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'filter((keys',
        { _index: 814, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'findall',
        {
          _index: 87,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'findall(@body',
        {
          _index: 1071,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'findall(@query',
        {
          _index: 138,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'findall(dto',
        {
          _index: 1085,
          title: {},
          body: {
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'findall(paginate',
        {
          _index: 945,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
          },
        },
      ],
      [
        'findall(paginationdto',
        {
          _index: 90,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'findone',
        {
          _index: 88,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'findone(@query',
        {
          _index: 142,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'findone(dto',
        {
          _index: 100,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'findone(id',
        {
          _index: 277,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'format',
        {
          _index: 498,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'found',
        {
          _index: 222,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/IamService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['framework', { _index: 1482, title: {}, body: { 'index.html': {} } }],
      [
        'func',
        {
          _index: 590,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'func(data',
        {
          _index: 611,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'function',
        {
          _index: 588,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/Route.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'functions',
        {
          _index: 1461,
          title: { 'miscellaneous/functions.html': {} },
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'generator',
        { _index: 1454, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'gensession',
        { _index: 709, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'gensession(user',
        { _index: 719, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'gentoken',
        { _index: 1198, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'gentoken(role',
        { _index: 1208, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'genuser',
        { _index: 1199, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'genuser(undefined',
        { _index: 1210, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        "get('detail",
        {
          _index: 141,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "get('detail')@apioperation({summary",
        {
          _index: 950,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "get('detail')@httpcode(200)@apioperation({summary",
        {
          _index: 102,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        "get('list",
        {
          _index: 135,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "get('list')@apioperation({summary",
        {
          _index: 946,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "get('list')@httpcode(200)@apioperation({summary",
        {
          _index: 92,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'getinit',
        { _index: 806, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'getpaginationvalue',
        {
          _index: 461,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'getrequest',
        { _index: 1213, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'getsessionlist',
        { _index: 710, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'getsessionlist(user',
        { _index: 721, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      ['getting', { _index: 1478, title: { 'index.html': {} }, body: {} }],
      [
        'gettoken',
        {
          _index: 685,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'getua',
        {
          _index: 687,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'getuser',
        {
          _index: 682,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['grow', { _index: 1506, title: {}, body: { 'index.html': {} } }],
      [
        'gt',
        {
          _index: 190,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'injectables/IamService.html': {},
            'classes/PaginationDto.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'gte',
        {
          _index: 400,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'guard',
        {
          _index: 157,
          title: { 'guards/ApiPermissionGuard.html': {} },
          body: { 'coverage.html': {}, 'overview.html': {} },
        },
      ],
      [
        'guards',
        {
          _index: 159,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'guards/api',
        { _index: 705, title: {}, body: { 'modules/IamModule.html': {} } },
      ],
      [
        'guest',
        {
          _index: 1559,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'gylove1994',
        { _index: 1536, title: {}, body: { 'properties.html': {} } },
      ],
      [
        'hash',
        { _index: 711, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'hash(str',
        { _index: 723, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'hassamesession',
        { _index: 754, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'hassamesession.id',
        { _index: 757, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'headerresolver',
        { _index: 340, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        "headerresolver(['x",
        { _index: 369, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'helper.ts',
        {
          _index: 1194,
          title: {},
          body: { 'classes/TestHelper.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'helper.ts:107',
        { _index: 1209, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'helper.ts:13',
        { _index: 1206, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'helper.ts:14',
        { _index: 1204, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'helper.ts:15',
        { _index: 1207, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'helper.ts:16',
        { _index: 1201, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'helper.ts:80',
        { _index: 1214, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'helper.ts:84',
        { _index: 1212, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      ['here', { _index: 1517, title: {}, body: { 'index.html': {} } }],
      [
        'http',
        { _index: 352, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'httpcode',
        {
          _index: 114,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'httpcode(200',
        {
          _index: 136,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'httpmodule',
        { _index: 338, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'httpmodule.register',
        { _index: 372, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'https://nestjs.com',
        { _index: 1524, title: {}, body: { 'index.html': {} } },
      ],
      [
        'i18n',
        {
          _index: 343,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'i18nmodule',
        { _index: 341, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'i18nmodule.forroot',
        { _index: 362, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'i18nservice',
        {
          _index: 342,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'iam',
        {
          _index: 660,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'iam.controller',
        { _index: 703, title: {}, body: { 'modules/IamModule.html': {} } },
      ],
      [
        'iam.service',
        {
          _index: 678,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
          },
        },
      ],
      [
        'iam/iam.module',
        { _index: 1316, title: {}, body: { 'modules/UserModule.html': {} } },
      ],
      [
        'iam/iam.service',
        {
          _index: 1324,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'iam_init',
        {
          _index: 1557,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'iam_init_key',
        {
          _index: 743,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'iamcontroller',
        {
          _index: 658,
          title: { 'controllers/IamController.html': {} },
          body: {
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'iammodule',
        {
          _index: 307,
          title: { 'modules/IamModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/UserModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'iamservice',
        {
          _index: 677,
          title: { 'injectables/IamService.html': {} },
          body: {
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'iappconfig',
        {
          _index: 638,
          title: { 'interfaces/IAppConfig.html': {} },
          body: { 'interfaces/IAppConfig.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'id',
        {
          _index: 14,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/IamService.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session-1.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'identifier',
        { _index: 1380, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        "id列表必须是数组'})@arrayminsize(1",
        {
          _index: 844,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        "id列表必须是数组'})@isstring({each",
        {
          _index: 1261,
          title: {},
          body: { 'classes/UpdateApiPermissionDto.html': {} },
        },
      ],
      [
        'id列表最多允许100',
        {
          _index: 874,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        "id列表最多允许100个元素'})@isstring({each",
        {
          _index: 846,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'id列表至少需要1',
        {
          _index: 872,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        "id列表至少需要1个元素'})@arraymaxsize(100",
        {
          _index: 845,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        "id必须存在于数据库中'})@apiproperty({description",
        {
          _index: 1264,
          title: {},
          body: { 'classes/UpdateApiPermissionDto.html': {} },
        },
      ],
      [
        "id必须是字符串'})@apiproperty({description",
        {
          _index: 847,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        "id必须是字符串'})@isuuidsallindatabase('role",
        {
          _index: 1263,
          title: {},
          body: { 'classes/UpdateApiPermissionDto.html': {} },
        },
      ],
      [
        'implemented',
        { _index: 791, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'implements',
        {
          _index: 181,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'import',
        {
          _index: 45,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'imports',
        {
          _index: 312,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'classes/TestHelper.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'in.dto',
        {
          _index: 680,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
          },
        },
      ],
      [
        'in.dto.ts',
        {
          _index: 1179,
          title: {},
          body: { 'classes/SignInDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'in.dto.ts:10',
        { _index: 1183, title: {}, body: { 'classes/SignInDto.html': {} } },
      ],
      [
        'in.dto.ts:6',
        { _index: 1181, title: {}, body: { 'classes/SignInDto.html': {} } },
      ],
      [
        'include',
        {
          _index: 192,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'incoming',
        {
          _index: 198,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'index',
        {
          _index: 8,
          title: { 'index.html': {} },
          body: {
            'classes/ApiPermission.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'inestapplication',
        {
          _index: 1119,
          title: {},
          body: {
            'interfaces/Route.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'info',
        {
          _index: 3,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'inherited',
        {
          _index: 855,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        'init',
        {
          _index: 798,
          title: {},
          body: { 'classes/InitUtil.html': {}, 'classes/TestHelper.html': {} },
        },
      ],
      [
        'init(key',
        { _index: 801, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'init.constant',
        { _index: 745, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'init.constant.ts',
        {
          _index: 1406,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'initpipe',
        { _index: 799, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'initpipe(needkeys',
        { _index: 803, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'initsubject',
        {
          _index: 811,
          title: {},
          body: {
            'classes/InitUtil.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'initsubject.asobservable',
        { _index: 813, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'initsubject.next([...initsubject.value',
        { _index: 812, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'initutil',
        {
          _index: 741,
          title: { 'classes/InitUtil.html': {} },
          body: {
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'initutil.init(iam_init_key',
        { _index: 749, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'inject',
        { _index: 381, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'injectable',
        {
          _index: 174,
          title: {
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'injectables',
        {
          _index: 272,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'injected',
        {
          _index: 599,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      ['installation', { _index: 1490, title: {}, body: { 'index.html': {} } }],
      [
        'installrunning',
        { _index: 1492, title: {}, body: { 'index.html': {} } },
      ],
      [
        'integration',
        {
          _index: 316,
          title: {},
          body: { 'modules/AppModule.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'interface',
        {
          _index: 382,
          title: {
            'interfaces/BuildWhereOptions.html': {},
            'interfaces/IAppConfig.html': {},
            'interfaces/Route.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'classes/PaginationDto.html': {},
            'interfaces/Route.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'interfaces',
        {
          _index: 384,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'interfaces/IAppConfig.html': {},
            'interfaces/Route.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'intersectiontype',
        {
          _index: 898,
          title: {},
          body: {
            'classes/PaginationPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'invalid',
        {
          _index: 201,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'isarray',
        {
          _index: 52,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Role-1.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'isboolean',
        {
          _index: 913,
          title: {},
          body: {
            'classes/PaginationRoleDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        'isemail',
        {
          _index: 546,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
          },
        },
      ],
      [
        'isemail()@apiproperty({description',
        { _index: 527, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isemail()@isnotempty',
        {
          _index: 1180,
          title: {},
          body: { 'classes/SignInDto.html': {}, 'classes/SignUpDto.html': {} },
        },
      ],
      [
        'isempty',
        {
          _index: 393,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'isempty(item',
        {
          _index: 445,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'isempty(ors',
        {
          _index: 447,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'isenum',
        {
          _index: 547,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'isenum($enums.userstatus',
        { _index: 554, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isenum(userstatus',
        {
          _index: 928,
          title: {},
          body: { 'classes/PaginationUserDto.html': {} },
        },
      ],
      [
        'isglobal',
        { _index: 357, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'isint',
        {
          _index: 388,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'isnil',
        {
          _index: 394,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'isnil(beforeallfunc',
        {
          _index: 603,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'isnil(func',
        {
          _index: 609,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'isnil(options.props[key].mode',
        {
          _index: 442,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'isnotempty',
        {
          _index: 1184,
          title: {},
          body: { 'classes/SignInDto.html': {}, 'classes/SignUpDto.html': {} },
        },
      ],
      [
        'isnotsamenameindatabase',
        {
          _index: 489,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        "isnotsamenameindatabase('permission",
        {
          _index: 496,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'isnotsamenameindatabase(entityname',
        {
          _index: 1474,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'isnumber',
        {
          _index: 389,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'isnumber({allownan',
        {
          _index: 852,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'isoptional',
        {
          _index: 493,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        'isoptional()@isarray({message',
        {
          _index: 843,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        'isoptional()@isboolean',
        {
          _index: 910,
          title: {},
          body: { 'classes/PaginationRoleDto.html': {} },
        },
      ],
      [
        'isoptional()@isboolean({message',
        {
          _index: 1258,
          title: {},
          body: { 'classes/UpdateApiPermissionDto.html': {} },
        },
      ],
      [
        'isoptional()@isenum($enums.userstatus)@apiproperty({description',
        { _index: 542, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isoptional()@isenum(userstatus)@apiproperty({description',
        {
          _index: 926,
          title: {},
          body: { 'classes/PaginationUserDto.html': {} },
        },
      ],
      [
        "isoptional()@isphonenumber('cn')@apiproperty({description",
        { _index: 537, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isoptional()@isstring()@apiproperty({description',
        {
          _index: 920,
          title: {},
          body: { 'classes/PaginationUserDto.html': {} },
        },
      ],
      [
        'isoptional()@isstring()@maxlength(100)@apiproperty({description',
        { _index: 525, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isoptional()@isstring()@maxlength(12)@apiproperty({description',
        { _index: 529, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isoptional()@isstring({message',
        {
          _index: 839,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'isoptional()@isurl()@apiproperty({description',
        { _index: 523, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isoptional()@isuuid()@apiproperty({description',
        {
          _index: 539,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'isphonenumber',
        { _index: 548, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        "isphonenumber('cn",
        { _index: 553, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'ispublic',
        {
          _index: 15,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        "ispublic必须是布尔值'})@apiproperty({description",
        {
          _index: 1259,
          title: {},
          body: { 'classes/UpdateApiPermissionDto.html': {} },
        },
      ],
      [
        'isstring',
        {
          _index: 494,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        'isstring()@isnotempty',
        { _index: 1182, title: {}, body: { 'classes/SignInDto.html': {} } },
      ],
      [
        'isstring()@isnotempty()@maxlength(20)@minlength(8',
        { _index: 1187, title: {}, body: { 'classes/SignUpDto.html': {} } },
      ],
      [
        'isstring()@isoptional',
        {
          _index: 509,
          title: {},
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/PaginationRoleDto.html': {},
          },
        },
      ],
      [
        'isstring()@maxlength(18)@minlength(8)@apiproperty({description',
        { _index: 532, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isstring()@maxlength(20)@apiproperty({description',
        {
          _index: 477,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'isstring()@maxlength(50)@optional()@apiproperty({description',
        {
          _index: 474,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'isurl',
        { _index: 549, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isuserexist',
        {
          _index: 1325,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'isuuid',
        {
          _index: 253,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/UserIdExistDto.html': {},
          },
        },
      ],
      [
        "isuuid('4",
        {
          _index: 480,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
          },
        },
      ],
      [
        "isuuid()@isuuidsallindatabase('apipermission')@apiproperty({description",
        {
          _index: 241,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        "isuuid()@isuuidsallindatabase('permission",
        {
          _index: 986,
          title: {},
          body: { 'classes/PermissionIdExistDto.html': {} },
        },
      ],
      [
        "isuuid()@isuuidsallindatabase('role",
        {
          _index: 1077,
          title: {},
          body: { 'classes/RoleIdExistDto.html': {} },
        },
      ],
      [
        "isuuid()@isuuidsallindatabase('user",
        {
          _index: 1309,
          title: {},
          body: { 'classes/UserIdExistDto.html': {} },
        },
      ],
      [
        'isuuidsallindatabase',
        {
          _index: 250,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UserIdExistDto.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        "isuuidsallindatabase('apipermission",
        {
          _index: 255,
          title: {},
          body: { 'classes/ApiPermissionIdExistDto.html': {} },
        },
      ],
      [
        "isuuidsallindatabase('permission",
        {
          _index: 988,
          title: {},
          body: { 'classes/PermissionIdExistDto.html': {} },
        },
      ],
      [
        "isuuidsallindatabase('permissiongroup",
        {
          _index: 501,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        "isuuidsallindatabase('role",
        {
          _index: 500,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        "isuuidsallindatabase('user",
        {
          _index: 1310,
          title: {},
          body: { 'classes/UserIdExistDto.html': {} },
        },
      ],
      [
        'isuuidsallindatabase(entityname',
        {
          _index: 1476,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'isvalid',
        {
          _index: 619,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'item',
        {
          _index: 621,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/Route.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'item.route',
        { _index: 1134, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        "item.route.path.startswith('/sapi",
        { _index: 1132, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'items',
        {
          _index: 484,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      ['join', { _index: 1513, title: {}, body: { 'index.html': {} } }],
      [
        'json.stringify(data',
        {
          _index: 216,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'k',
        {
          _index: 587,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      ['kamil', { _index: 1521, title: {}, body: { 'index.html': {} } }],
      [
        'key',
        {
          _index: 406,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/InitUtil.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'keyof',
        {
          _index: 403,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'keys.includes(key',
        { _index: 816, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'lang',
        { _index: 370, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'layer.route',
        { _index: 1129, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'layer.route?.path',
        { _index: 1130, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'layer.route?.stack[0].method',
        { _index: 1131, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'legend',
        {
          _index: 260,
          title: {},
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'license',
        {
          _index: 1527,
          title: {},
          body: { 'index.html': {}, 'properties.html': {} },
        },
      ],
      ['licensed', { _index: 1503, title: {}, body: { 'index.html': {} } }],
      [
        'line',
        { _index: 785, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'listresult',
        {
          _index: 817,
          title: { 'classes/ListResult.html': {} },
          body: {
            'classes/ListResult.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'listresult:10',
        {
          _index: 884,
          title: {},
          body: {
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
          },
        },
      ],
      [
        'listresult:13',
        {
          _index: 885,
          title: {},
          body: {
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
          },
        },
      ],
      [
        'listresult:7',
        {
          _index: 883,
          title: {},
          body: {
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
          },
        },
      ],
      [
        'literal',
        {
          _index: 1211,
          title: {},
          body: {
            'classes/TestHelper.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'load',
        { _index: 358, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'loaderoptions',
        { _index: 365, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'localhost',
        { _index: 657, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'lodash',
        {
          _index: 395,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'logger',
        {
          _index: 175,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/Route.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'logger(dbvalidationpipe.name',
        {
          _index: 567,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'logger.log',
        {
          _index: 197,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        "logger.log('routes",
        { _index: 1166, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        "logger.log('syncing",
        { _index: 1159, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'logger.log(`created',
        { _index: 1165, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'logger.log(`creating',
        { _index: 1156, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'logger.log(`deleted',
        { _index: 1151, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'logger.log(`incoming',
        {
          _index: 214,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'logger.log(deletedroutes',
        { _index: 1155, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'logger.log(newroutes',
        { _index: 1158, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'lt',
        {
          _index: 398,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'lte',
        {
          _index: 399,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'main',
        {
          _index: 1219,
          title: {},
          body: {
            'classes/TestHelper.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'manager',
        {
          _index: 333,
          title: {},
          body: { 'modules/AppModule.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'map',
        {
          _index: 614,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'map(([key',
        {
          _index: 624,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'map((item',
        { _index: 1133, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'map((key',
        {
          _index: 438,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'map((layer',
        { _index: 1128, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'mapper',
        {
          _index: 287,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'injectables/PermissionService.html': {},
          },
        },
      ],
      [
        'matching',
        {
          _index: 54,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'max',
        {
          _index: 390,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'max(100',
        {
          _index: 418,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'maxdecimalplaces',
        {
          _index: 411,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'maxitems',
        {
          _index: 849,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'maxlength',
        {
          _index: 475,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/SignUpDto.html': {},
          },
        },
      ],
      [
        'maxlength(100',
        { _index: 555, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'maxlength(12',
        { _index: 550, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'maxlength(18',
        { _index: 551, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'maxlength(20',
        {
          _index: 495,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/SignUpDto.html': {},
          },
        },
      ],
      [
        'maxlength(50',
        {
          _index: 497,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'message',
        {
          _index: 583,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'injectables/RoleService.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'messages',
        {
          _index: 1364,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'metadata',
        {
          _index: 563,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'metadata.metatype',
        {
          _index: 602,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'metatype',
        {
          _index: 1355,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'method',
        {
          _index: 16,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'guards/ApiPermissionGuard.html': {},
            'interfaces/Route.html': {},
          },
        },
      ],
      [
        'method.tolowercase',
        {
          _index: 218,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'methods',
        {
          _index: 86,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'min',
        {
          _index: 391,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'min(1',
        {
          _index: 413,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'min(1)@transform',
        {
          _index: 854,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'min(5',
        {
          _index: 419,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'minitems',
        {
          _index: 848,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'minlength',
        {
          _index: 534,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/SignUpDto.html': {},
          },
        },
      ],
      [
        'minlength(8',
        {
          _index: 552,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/SignUpDto.html': {},
          },
        },
      ],
      [
        'miscellaneous',
        {
          _index: 1460,
          title: {
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
          body: {
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'mit',
        {
          _index: 1502,
          title: {},
          body: { 'index.html': {}, 'properties.html': {} },
        },
      ],
      [
        'mockproviders',
        { _index: 1202, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'mode',
        {
          _index: 405,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'modtype',
        {
          _index: 401,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'module',
        {
          _index: 256,
          title: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
          },
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'moduleref',
        { _index: 1197, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'modulerefbake',
        { _index: 1224, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'modulerefbake.compile',
        { _index: 1231, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'modules',
        {
          _index: 258,
          title: { 'modules.html': {} },
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'modules/api',
        { _index: 326, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'modules/iam/iam.module',
        { _index: 320, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'modules/permission/permission.module',
        { _index: 328, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'modules/role/role.module',
        { _index: 329, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'modules/user/user.module',
        { _index: 325, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'moment',
        { _index: 1447, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['more', { _index: 1516, title: {}, body: { 'index.html': {} } }],
      ['myśliwiec', { _index: 1522, title: {}, body: { 'index.html': {} } }],
      [
        'name',
        {
          _index: 97,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup-1.html': {},
            'injectables/PermissionService.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'name.decorator',
        {
          _index: 492,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'name.decorator.ts',
        {
          _index: 1398,
          title: {},
          body: {
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'namespace',
        {
          _index: 73,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'needkeys',
        { _index: 805, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'needkeys.every((key',
        { _index: 815, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'nest',
        {
          _index: 1449,
          title: {},
          body: { 'dependencies.html': {}, 'index.html': {} },
        },
      ],
      [
        'nestexpressapplication',
        {
          _index: 1203,
          title: {},
          body: {
            'classes/TestHelper.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'nestframework',
        { _index: 1526, title: {}, body: { 'index.html': {} } },
      ],
      [
        'nestjs',
        {
          _index: 180,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/IAppConfig.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'injectables/UserService.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/axios',
        {
          _index: 339,
          title: {},
          body: { 'modules/AppModule.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'nestjs/cache',
        {
          _index: 332,
          title: {},
          body: { 'modules/AppModule.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'nestjs/common',
        {
          _index: 115,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'guards/ApiPermissionGuard.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'classes/CreatePermissionDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'controllers/PermissionController.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/TestHelper.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/config',
        {
          _index: 319,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'interfaces/IAppConfig.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/core',
        {
          _index: 337,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/DBValidationPipe.html': {},
            'modules/IamModule.html': {},
            'classes/TestHelper.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/devtools',
        {
          _index: 315,
          title: {},
          body: { 'modules/AppModule.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'nestjs/platform',
        {
          _index: 1218,
          title: {},
          body: { 'classes/TestHelper.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'nestjs/schedule',
        { _index: 1425, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'nestjs/swagger',
        {
          _index: 50,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/IamController.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/Session-1.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/testing',
        { _index: 1216, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'nestjs/websockets',
        { _index: 1428, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'new',
        {
          _index: 191,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'newroutes',
        { _index: 1144, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'newroutes.length',
        { _index: 1157, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'newroutes.map((route',
        { _index: 1162, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'newuser',
        {
          _index: 777,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'newuser.password',
        {
          _index: 781,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'next',
        { _index: 784, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      ['node.js', { _index: 1481, title: {}, body: { 'index.html': {} } }],
      [
        'null',
        {
          _index: 186,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'number',
        {
          _index: 417,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'interfaces/IAppConfig.html': {},
            'classes/ListResult.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'number(value',
        {
          _index: 415,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'object',
        {
          _index: 594,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'object.assign',
        {
          _index: 448,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'object.constructor',
        {
          _index: 597,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'object.keys(item)[0',
        {
          _index: 617,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'object.keys(options.props',
        {
          _index: 435,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'object.keys(value).map(async',
        {
          _index: 607,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'object.values(error.constraints',
        {
          _index: 1369,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'object.values(item)[0',
        {
          _index: 618,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'omit',
        {
          _index: 408,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'omittype',
        {
          _index: 900,
          title: {},
          body: { 'classes/PaginationPermissionDto.html': {} },
        },
      ],
      [
        'omittype(createpermissiondto',
        {
          _index: 903,
          title: {},
          body: {
            'classes/PaginationPermissionDto.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'onapplicationbootstrap',
        {
          _index: 557,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      ['open', { _index: 1504, title: {}, body: { 'index.html': {} } }],
      [
        'operation.types',
        {
          _index: 965,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'operation.types.ts',
        {
          _index: 1190,
          title: {},
          body: {
            'classes/SuccessOperationResponse.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'operation.types.ts:5',
        {
          _index: 1191,
          title: {},
          body: { 'classes/SuccessOperationResponse.html': {} },
        },
      ],
      [
        'operation_log',
        {
          _index: 47,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'operationlog',
        {
          _index: 39,
          title: {
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
          },
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'operationlogs',
        { _index: 17, title: {}, body: { 'classes/ApiPermission.html': {} } },
      ],
      [
        'optional',
        {
          _index: 12,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup-1.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/Session-1.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'options',
        {
          _index: 625,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'options.props[key].mode',
        {
          _index: 437,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'options.withdeleted',
        {
          _index: 449,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'options?.message',
        {
          _index: 626,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'ors',
        {
          _index: 441,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'out',
        {
          _index: 269,
          title: {},
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'overrideprovider(provider.overrideprovider',
        { _index: 1228, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'overview',
        {
          _index: 1531,
          title: { 'overview.html': {} },
          body: { 'overview.html': {} },
        },
      ],
      [
        'p.id',
        {
          _index: 237,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'package',
        {
          _index: 1417,
          title: { 'dependencies.html': {}, 'properties.html': {} },
          body: {},
        },
      ],
      [
        'page',
        {
          _index: 416,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/ListResult.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'pagesize',
        {
          _index: 425,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/ListResult.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'paginate',
        {
          _index: 948,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
          },
        },
      ],
      [
        'paginate.buildresponse(permissions',
        {
          _index: 1011,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'paginate.buildwhere',
        {
          _index: 1007,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'paginate.toskipandtake',
        {
          _index: 1009,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'paginationapipermissiondto',
        {
          _index: 91,
          title: { 'classes/PaginationApiPermissionDto.html': {} },
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'paginationapipermissionresponsedto',
        {
          _index: 94,
          title: { 'classes/PaginationApiPermissionResponseDto.html': {} },
          body: {
            'controllers/ApiPermissionController.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'paginationdto',
        {
          _index: 98,
          title: { 'classes/PaginationDto.html': {} },
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'paginationdto.buildresponse(apipermissions',
        {
          _index: 293,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'paginationdto.buildwhere',
        {
          _index: 282,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'paginationdto.templatepaginationdtoinstance',
        {
          _index: 464,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'paginationdto.templatepaginationdtoinstance.hasownproperty(key',
        {
          _index: 465,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'paginationdto.toskipandtake',
        {
          _index: 290,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'paginationdto:103',
        {
          _index: 861,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'paginationdto:112',
        {
          _index: 865,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'paginationdto:171',
        {
          _index: 863,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'paginationdto:182',
        {
          _index: 860,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'paginationdto:44',
        {
          _index: 856,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'paginationdto:58',
        {
          _index: 859,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'paginationdto:60',
        {
          _index: 864,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'paginationdto:67',
        {
          _index: 862,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'paginationpermissiondto',
        {
          _index: 896,
          title: { 'classes/PaginationPermissionDto.html': {} },
          body: {
            'classes/PaginationPermissionDto.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'paginationpermissionresponse',
        {
          _index: 904,
          title: { 'classes/PaginationPermissionResponse.html': {} },
          body: {
            'classes/PaginationPermissionResponse.html': {},
            'controllers/PermissionController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'paginationroledto',
        {
          _index: 908,
          title: { 'classes/PaginationRoleDto.html': {} },
          body: {
            'classes/PaginationRoleDto.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'paginationroleresponse',
        {
          _index: 914,
          title: { 'classes/PaginationRoleResponse.html': {} },
          body: {
            'classes/PaginationRoleResponse.html': {},
            'controllers/RoleController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'paginationuserdto',
        {
          _index: 918,
          title: { 'classes/PaginationUserDto.html': {} },
          body: {
            'classes/PaginationUserDto.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'paginationvalue',
        {
          _index: 432,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'paginationvalue[key',
        {
          _index: 440,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'paginationvalue[options.withdeleted',
        {
          _index: 452,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'param',
        {
          _index: 571,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'param(dbvalidationpipe',
        {
          _index: 635,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'parameters',
        {
          _index: 96,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'params',
        {
          _index: 211,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'parseint(process.env.app_port',
        { _index: 650, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'parser',
        { _index: 1442, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'partial',
        {
          _index: 407,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'partialtype',
        {
          _index: 901,
          title: {},
          body: {
            'classes/PaginationPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'partialtype(createpermissiondto',
        {
          _index: 1268,
          title: {},
          body: { 'classes/UpdatePermissionDto.html': {} },
        },
      ],
      [
        'partialtype(createroledto',
        { _index: 1270, title: {}, body: { 'classes/UpdateRoleDto.html': {} } },
      ],
      [
        'partialtype(createuserdto',
        { _index: 1273, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'pass',
        { _index: 1249, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'password',
        {
          _index: 519,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'injectables/IamService.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/TestHelper.html': {},
            'classes/User-1.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'path',
        {
          _index: 18,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'guards/ApiPermissionGuard.html': {},
            'modules/AppModule.html': {},
            'interfaces/Route.html': {},
          },
        },
      ],
      [
        'path.join(__dirname',
        { _index: 366, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'permission',
        {
          _index: 64,
          title: {
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
          },
          body: {
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'classes/OperationLog.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'injectables/RoleService.html': {},
            'classes/Session.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/User.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'permission.controller',
        {
          _index: 271,
          title: {},
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/PermissionModule.html': {},
          },
        },
      ],
      [
        'permission.controller.ts',
        {
          _index: 83,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission.controller.ts:28',
        {
          _index: 95,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'permission.controller.ts:36',
        {
          _index: 103,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'permission.controller.ts:44',
        {
          _index: 108,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'permission.dto',
        {
          _index: 110,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/PaginationPermissionDto.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'classes/UpdatePermissionDto.html': {},
          },
        },
      ],
      [
        'permission.dto.ts',
        {
          _index: 473,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'permission.dto.ts:15',
        {
          _index: 479,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:19',
        {
          _index: 842,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:21',
        {
          _index: 1265,
          title: {},
          body: { 'classes/UpdateApiPermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:24',
        {
          _index: 476,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:36',
        {
          _index: 1262,
          title: {},
          body: { 'classes/UpdateApiPermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:37',
        {
          _index: 488,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:38',
        {
          _index: 851,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:46',
        {
          _index: 1260,
          title: {},
          body: { 'classes/UpdateApiPermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:50',
        {
          _index: 486,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:57',
        {
          _index: 850,
          title: {},
          body: { 'classes/PaginationApiPermissionDto.html': {} },
        },
      ],
      [
        'permission.guard',
        { _index: 706, title: {}, body: { 'modules/IamModule.html': {} } },
      ],
      [
        'permission.guard.ts',
        {
          _index: 161,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'permission.guard.ts:13',
        {
          _index: 167,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'permission.guard.ts:15',
        {
          _index: 171,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'permission.module',
        { _index: 327, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'permission.module.ts',
        {
          _index: 270,
          title: {},
          body: { 'modules/ApiPermissionModule.html': {} },
        },
      ],
      [
        'permission.service',
        {
          _index: 117,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'modules/ApiPermissionModule.html': {},
            'controllers/PermissionController.html': {},
            'modules/PermissionModule.html': {},
          },
        },
      ],
      [
        'permission.service.ts',
        {
          _index: 273,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission.service.ts:12',
        {
          _index: 275,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'permission.service.ts:34',
        {
          _index: 278,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'permission.service.ts:44',
        {
          _index: 279,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'permission.service.ts:9',
        {
          _index: 274,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'permission.type',
        {
          _index: 127,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'permission.type.ts',
        {
          _index: 882,
          title: {},
          body: {
            'classes/PaginationApiPermissionResponseDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission.types',
        {
          _index: 963,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'permission.types.ts',
        {
          _index: 906,
          title: {},
          body: {
            'classes/PaginationPermissionResponse.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission/api',
        {
          _index: 82,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission/dto/api',
        {
          _index: 239,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission/dto/pagination',
        {
          _index: 835,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission/dto/update',
        {
          _index: 1257,
          title: {},
          body: {
            'classes/UpdateApiPermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission/types/pagination',
        {
          _index: 881,
          title: {},
          body: {
            'classes/PaginationApiPermissionResponseDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission_group',
        {
          _index: 68,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'permissioncontroller',
        {
          _index: 938,
          title: { 'controllers/PermissionController.html': {} },
          body: {
            'controllers/PermissionController.html': {},
            'modules/PermissionModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permissiongroup',
        {
          _index: 66,
          title: {
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
          },
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'permissiongroupids',
        {
          _index: 288,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'injectables/PermissionService.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        'permissiongroupids.map((id',
        {
          _index: 303,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'permissiongroups',
        {
          _index: 302,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'classes/Permission-1.html': {},
            'injectables/PermissionService.html': {},
          },
        },
      ],
      [
        'permissionidexistdto',
        {
          _index: 949,
          title: { 'classes/PermissionIdExistDto.html': {} },
          body: {
            'controllers/PermissionController.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permissionids',
        { _index: 506, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'permissionmodule',
        {
          _index: 308,
          title: { 'modules/PermissionModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/PermissionModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'permissions',
        {
          _index: 149,
          title: {},
          body: {
            'classes/ApiPermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'injectables/PermissionService.html': {},
            'classes/Role-1.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'permissions.length',
        {
          _index: 1095,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'permissionservice',
        {
          _index: 960,
          title: { 'injectables/PermissionService.html': {} },
          body: {
            'controllers/PermissionController.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'phone',
        {
          _index: 520,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/Profile-1.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'pipe',
        {
          _index: 346,
          title: {},
          body: { 'modules/AppModule.html': {}, 'classes/InitUtil.html': {} },
        },
      ],
      [
        'pipe.ts',
        {
          _index: 1349,
          title: {},
          body: {
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'pipe.ts:13',
        {
          _index: 1352,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'pipe.ts:16',
        {
          _index: 1356,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'pipe.ts:41',
        {
          _index: 1354,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'pipetransform',
        {
          _index: 572,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'plaintoclass',
        {
          _index: 1358,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'plaintoclass(metatype',
        {
          _index: 1360,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      ['please', { _index: 1514, title: {}, body: { 'index.html': {} } }],
      ['pnpm', { _index: 1491, title: {}, body: { 'index.html': {} } }],
      [
        'port',
        {
          _index: 354,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'interfaces/IAppConfig.html': {},
          },
        },
      ],
      [
        'post',
        {
          _index: 112,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/IamController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "post('create",
        {
          _index: 967,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "post('create')@apioperation({summary",
        {
          _index: 942,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "post('list",
        {
          _index: 1070,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        "post('list')@apioperation({summary",
        {
          _index: 1052,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        "post('remove",
        {
          _index: 974,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "post('remove')@apioperation({summary",
        {
          _index: 953,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "post('signin",
        {
          _index: 690,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        "post('signin')@apioperation({summary",
        {
          _index: 667,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        "post('signout",
        {
          _index: 696,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        "post('signout')@apibearerauth()@apioperation({summary",
        {
          _index: 671,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        "post('signup",
        {
          _index: 693,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        "post('signup')@apioperation({summary",
        {
          _index: 675,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        "post('update",
        {
          _index: 144,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "post('update')@apioperation({summary",
        {
          _index: 958,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "post('update')@httpcode(200)@apioperation({summary",
        {
          _index: 107,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'prefix',
        {
          _index: 84,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/IamController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'preset_role',
        {
          _index: 738,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'prisma',
        {
          _index: 168,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'prisma.apipermission.createmany',
        { _index: 1161, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'prisma.apipermission.deletemany',
        { _index: 1148, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'prisma.apipermission.findmany',
        { _index: 1136, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'prisma.permissionwhereinput',
        {
          _index: 1006,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'prisma.rolewhereinput',
        {
          _index: 1104,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'prisma/.../seed.ts',
        {
          _index: 1467,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'prisma/client',
        {
          _index: 177,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/PaginationUserDto.html': {},
            'injectables/PermissionService.html': {},
            'classes/Role-1.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'classes/User-1.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'prisma/seed.ts',
        {
          _index: 1382,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'prismaclient',
        {
          _index: 558,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'classes/TestHelper.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'prismamodel',
        {
          _index: 74,
          title: {},
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'prismamodule',
        { _index: 324, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'prismamodule.forroot',
        { _index: 371, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'prismaservice',
        {
          _index: 166,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'private',
        {
          _index: 454,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/TestHelper.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'process.env.app_description',
        { _index: 653, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'process.env.app_host',
        { _index: 656, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'process.env.app_name',
        { _index: 652, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'process.env.app_version',
        { _index: 654, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'process.env.node_env',
        {
          _index: 350,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'interfaces/IAppConfig.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'production',
        {
          _index: 360,
          title: {},
          body: { 'modules/AppModule.html': {}, 'index.html': {} },
        },
      ],
      [
        'profile',
        {
          _index: 59,
          title: { 'classes/Profile.html': {}, 'classes/Profile-1.html': {} },
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['progressive', { _index: 1480, title: {}, body: { 'index.html': {} } }],
      ['project', { _index: 1505, title: {}, body: { 'index.html': {} } }],
      [
        'promise',
        {
          _index: 173,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'classes/TestHelper.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'promise.all',
        {
          _index: 1365,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'promise.all(vp',
        {
          _index: 613,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'properties',
        {
          _index: 9,
          title: { 'properties.html': {} },
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'classes/RoleIdExistDto.html': {},
            'interfaces/Route.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/User-1.html': {},
            'classes/UserIdExistDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'properties.html': {},
          },
        },
      ],
      [
        'property',
        {
          _index: 1373,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'propertyname',
        {
          _index: 595,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'props',
        {
          _index: 283,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'provide',
        {
          _index: 373,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      [
        'provider',
        { _index: 1227, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'providers',
        {
          _index: 263,
          title: {},
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'classes/TestHelper.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'public',
        { _index: 1195, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'query',
        {
          _index: 113,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'query(dbvalidationpipe',
        {
          _index: 637,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'randombytes',
        {
          _index: 736,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      [
        "randombytes(32).tostring('hex",
        {
          _index: 758,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      ['read', { _index: 1515, title: {}, body: { 'index.html': {} } }],
      [
        'readonly',
        {
          _index: 134,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'record',
        {
          _index: 202,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'reflect',
        { _index: 1456, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'reflect.definemetadata',
        {
          _index: 596,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'reflector',
        {
          _index: 336,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'registeras',
        { _index: 646, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'registeras(app_config_token',
        { _index: 649, title: {}, body: { 'interfaces/IAppConfig.html': {} } },
      ],
      [
        'remove',
        {
          _index: 940,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'remove(@body',
        {
          _index: 975,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'remove(dto',
        {
          _index: 952,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'remove(id',
        {
          _index: 997,
          title: {},
          body: {
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['repository', { _index: 1489, title: {}, body: { 'index.html': {} } }],
      [
        'req',
        {
          _index: 183,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "req.headers['authorization",
        {
          _index: 185,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "req.headers['user",
        {
          _index: 1555,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'req.user',
        {
          _index: 194,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'req.user.email',
        {
          _index: 200,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'request',
        {
          _index: 178,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      [
        'request(this.app.gethttpserver',
        { _index: 1248, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'request.body',
        {
          _index: 209,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'request.method',
        {
          _index: 205,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'request.params',
        {
          _index: 212,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'request.query',
        {
          _index: 210,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'request.route.path',
        {
          _index: 204,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'request.url',
        {
          _index: 207,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        "request['user",
        {
          _index: 203,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'required',
        {
          _index: 841,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        'res',
        {
          _index: 610,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'classes/TestHelper.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'res.decorator.ts',
        {
          _index: 1395,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'res.id',
        { _index: 1255, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'res.token',
        { _index: 1256, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'reset',
        {
          _index: 268,
          title: {},
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'resmap',
        {
          _index: 615,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'resmap.entries',
        {
          _index: 623,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'resmap.values()].every((item',
        {
          _index: 620,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'resolvers',
        { _index: 368, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'result.types',
        {
          _index: 887,
          title: {},
          body: {
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
          },
        },
      ],
      [
        'result.types.ts',
        {
          _index: 819,
          title: {},
          body: { 'classes/ListResult.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'result.types.ts:10',
        { _index: 822, title: {}, body: { 'classes/ListResult.html': {} } },
      ],
      [
        'result.types.ts:13',
        { _index: 823, title: {}, body: { 'classes/ListResult.html': {} } },
      ],
      [
        'result.types.ts:4',
        { _index: 821, title: {}, body: { 'classes/ListResult.html': {} } },
      ],
      [
        'result.types.ts:7',
        { _index: 824, title: {}, body: { 'classes/ListResult.html': {} } },
      ],
      [
        'results',
        {
          _index: 53,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'return',
        {
          _index: 139,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/PaginationDto.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/TestHelper.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'returns',
        {
          _index: 99,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'returntype',
        {
          _index: 584,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'role',
        {
          _index: 42,
          title: { 'classes/Role.html': {}, 'classes/Role-1.html': {} },
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/IamService.html': {},
            'classes/OperationLog.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/Session.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'role.constant',
        { _index: 740, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'role.constant.ts',
        {
          _index: 1408,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'role.controller',
        { _index: 1081, title: {}, body: { 'modules/RoleModule.html': {} } },
      ],
      [
        'role.dto',
        {
          _index: 1063,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateRoleDto.html': {},
          },
        },
      ],
      [
        'role.dto.ts',
        {
          _index: 504,
          title: {},
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'role.dto.ts:11',
        {
          _index: 911,
          title: {},
          body: { 'classes/PaginationRoleDto.html': {} },
        },
      ],
      [
        'role.dto.ts:13',
        { _index: 512, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'role.dto.ts:17',
        { _index: 508, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'role.dto.ts:5',
        { _index: 511, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'role.dto.ts:7',
        {
          _index: 912,
          title: {},
          body: { 'classes/PaginationRoleDto.html': {} },
        },
      ],
      [
        'role.dto.ts:9',
        { _index: 510, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'role.service',
        {
          _index: 1062,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'modules/RoleModule.html': {},
          },
        },
      ],
      [
        'role.types',
        {
          _index: 1066,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'role.types.ts',
        {
          _index: 916,
          title: {},
          body: {
            'classes/PaginationRoleResponse.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "role['status",
        {
          _index: 1558,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'rolecontroller',
        {
          _index: 1048,
          title: { 'controllers/RoleController.html': {} },
          body: {
            'controllers/RoleController.html': {},
            'modules/RoleModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'roleid',
        {
          _index: 521,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/User-1.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'roleidexistdto',
        {
          _index: 1056,
          title: { 'classes/RoleIdExistDto.html': {} },
          body: {
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'roleids',
        {
          _index: 285,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'injectables/PermissionService.html': {},
            'classes/UpdateApiPermissionDto.html': {},
          },
        },
      ],
      [
        'roleids.map((id',
        {
          _index: 300,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'rolemodule',
        {
          _index: 309,
          title: { 'modules/RoleModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/RoleModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'roles',
        {
          _index: 19,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/Permission-1.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'roleservice',
        {
          _index: 1061,
          title: { 'injectables/RoleService.html': {} },
          body: {
            'controllers/RoleController.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'rolestatus',
        { _index: 1041, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'rolestatus.active',
        { _index: 1042, title: {}, body: { 'classes/Role-1.html': {} } },
      ],
      [
        'route',
        {
          _index: 1116,
          title: { 'interfaces/Route.html': {} },
          body: {
            'interfaces/Route.html': {},
            'classes/TestHelper.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'route.id',
        { _index: 1150, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'route.method',
        { _index: 1163, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'route.path',
        { _index: 1139, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'route.path).includes(route.path',
        { _index: 1143, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'route.ts',
        {
          _index: 1118,
          title: {},
          body: {
            'interfaces/Route.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'router',
        { _index: 1124, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'router.stack',
        { _index: 1127, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'routes',
        { _index: 1153, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      ['run', { _index: 1493, title: {}, body: { 'index.html': {} } }],
      [
        'rxjs',
        {
          _index: 810,
          title: {},
          body: { 'classes/InitUtil.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        's',
        { _index: 795, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'salt',
        { _index: 750, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'same',
        {
          _index: 491,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'satisfies',
        {
          _index: 628,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      ['scalable', { _index: 1485, title: {}, body: { 'index.html': {} } }],
      [
        'seed',
        {
          _index: 1383,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'seed(prisma',
        {
          _index: 1477,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'sendverificationemail',
        { _index: 712, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'sendverificationemail(_user',
        { _index: 726, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'server',
        {
          _index: 1121,
          title: {},
          body: {
            'interfaces/Route.html': {},
            'classes/TestHelper.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'server._events.request._router',
        { _index: 1125, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'session',
        {
          _index: 61,
          title: { 'classes/Session.html': {}, 'classes/Session-1.html': {} },
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/OperationLog.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Role.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'session.user',
        {
          _index: 195,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'sessions',
        { _index: 792, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'sessions.map((s',
        { _index: 794, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'set',
        {
          _index: 1017,
          title: {},
          body: {
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'setmetadata',
        {
          _index: 573,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'setmetadata(before_all_db_validation_key',
        {
          _index: 591,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      ['side', { _index: 1486, title: {}, body: { 'index.html': {} } }],
      [
        'signin',
        {
          _index: 661,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
          },
        },
      ],
      [
        'signin(@body',
        {
          _index: 691,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'signin(dto',
        {
          _index: 664,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
          },
        },
      ],
      [
        'signindto',
        {
          _index: 665,
          title: { 'classes/SignInDto.html': {} },
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/SignInDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'signout',
        {
          _index: 662,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'signout(@getuser',
        {
          _index: 697,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'signout(user',
        {
          _index: 670,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'signoutbytoken',
        { _index: 713, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'signoutbytoken(user',
        { _index: 729, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'signup',
        {
          _index: 663,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
          },
        },
      ],
      [
        'signup(@body',
        {
          _index: 694,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'signup(dto',
        {
          _index: 673,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
          },
        },
      ],
      [
        'signupdto',
        {
          _index: 674,
          title: { 'classes/SignUpDto.html': {} },
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/SignUpDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'sin',
        {
          _index: 286,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'injectables/PermissionService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'skip',
        {
          _index: 427,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'socket.io',
        { _index: 1423, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'source',
        {
          _index: 4,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'modules/IamModule.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'modules/PermissionModule.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'space',
        {
          _index: 468,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      ['sponsors', { _index: 1508, title: {}, body: { 'index.html': {} } }],
      [
        'src/.../all',
        {
          _index: 1466,
          title: {},
          body: {
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/.../api',
        {
          _index: 1541,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../app',
        {
          _index: 1542,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../app.module.ts',
        {
          _index: 1544,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../dbvalidation.ts',
        {
          _index: 1462,
          title: {},
          body: {
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/.../dv.ts',
        {
          _index: 1464,
          title: {},
          body: {
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'src/.../get',
        {
          _index: 1546,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../iam',
        {
          _index: 1547,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../index.ts',
        {
          _index: 1545,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../init.ts',
        {
          _index: 1548,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../main.ts',
        {
          _index: 1463,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'src/.../not',
        {
          _index: 1465,
          title: {},
          body: {
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/.../pagination',
        {
          _index: 1543,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../pagination.dto.ts',
        {
          _index: 1539,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'src/.../preset',
        {
          _index: 1549,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../sync',
        {
          _index: 1468,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'src/_gen/prisma',
        {
          _index: 6,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/app.module.ts',
        {
          _index: 311,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/commons/decorators/all',
        {
          _index: 1392,
          title: {},
          body: {
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/commons/decorators/api',
        {
          _index: 1394,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/commons/decorators/not',
        {
          _index: 1397,
          title: {},
          body: {
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/commons/dtos/pagination.dto.ts',
        {
          _index: 385,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'src/commons/dtos/pagination.dto.ts:103',
        { _index: 891, title: {}, body: { 'classes/PaginationDto.html': {} } },
      ],
      [
        'src/commons/dtos/pagination.dto.ts:112',
        { _index: 895, title: {}, body: { 'classes/PaginationDto.html': {} } },
      ],
      [
        'src/commons/dtos/pagination.dto.ts:171',
        { _index: 893, title: {}, body: { 'classes/PaginationDto.html': {} } },
      ],
      [
        'src/commons/dtos/pagination.dto.ts:182',
        { _index: 890, title: {}, body: { 'classes/PaginationDto.html': {} } },
      ],
      [
        'src/commons/dtos/pagination.dto.ts:44',
        { _index: 888, title: {}, body: { 'classes/PaginationDto.html': {} } },
      ],
      [
        'src/commons/dtos/pagination.dto.ts:58',
        { _index: 889, title: {}, body: { 'classes/PaginationDto.html': {} } },
      ],
      [
        'src/commons/dtos/pagination.dto.ts:60',
        { _index: 894, title: {}, body: { 'classes/PaginationDto.html': {} } },
      ],
      [
        'src/commons/dtos/pagination.dto.ts:67',
        { _index: 892, title: {}, body: { 'classes/PaginationDto.html': {} } },
      ],
      [
        'src/commons/pipes/validation',
        {
          _index: 1348,
          title: {},
          body: {
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/commons/slices/dbvalidation.ts',
        {
          _index: 556,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/commons/slices/dbvalidation.ts:75',
        {
          _index: 559,
          title: {},
          body: { 'injectables/DBValidationPipe.html': {} },
        },
      ],
      [
        'src/commons/slices/dbvalidation.ts:81',
        {
          _index: 568,
          title: {},
          body: { 'injectables/DBValidationPipe.html': {} },
        },
      ],
      [
        'src/commons/slices/dbvalidation.ts:83',
        {
          _index: 560,
          title: {},
          body: { 'injectables/DBValidationPipe.html': {} },
        },
      ],
      [
        'src/commons/slices/dbvalidation.ts:87',
        {
          _index: 565,
          title: {},
          body: { 'injectables/DBValidationPipe.html': {} },
        },
      ],
      [
        'src/commons/types/list',
        {
          _index: 818,
          title: {},
          body: { 'classes/ListResult.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/commons/types/success',
        {
          _index: 1189,
          title: {},
          body: {
            'classes/SuccessOperationResponse.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/configs/app',
        {
          _index: 639,
          title: {},
          body: {
            'interfaces/IAppConfig.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/helpers/test',
        {
          _index: 1193,
          title: {},
          body: { 'classes/TestHelper.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/main.ts',
        {
          _index: 1404,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'src/modules/api',
        {
          _index: 81,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'modules/ApiPermissionModule.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/modules/iam/constants/iam',
        {
          _index: 1405,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/modules/iam/constants/preset',
        {
          _index: 1407,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/modules/iam/decorators/get',
        {
          _index: 1409,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/modules/iam/dtos/sign',
        {
          _index: 1178,
          title: {},
          body: {
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/modules/iam/guards/api',
        {
          _index: 160,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/iam/iam.controller.ts',
        {
          _index: 659,
          title: {},
          body: { 'controllers/IamController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/iam/iam.controller.ts:18',
        {
          _index: 668,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'src/modules/iam/iam.controller.ts:24',
        {
          _index: 676,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'src/modules/iam/iam.controller.ts:31',
        {
          _index: 672,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'src/modules/iam/iam.module.ts',
        { _index: 702, title: {}, body: { 'modules/IamModule.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts',
        {
          _index: 707,
          title: {},
          body: { 'injectables/IamService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/iam/iam.service.ts:117',
        { _index: 727, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts:123',
        { _index: 733, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts:128',
        { _index: 722, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts:140',
        { _index: 730, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts:17',
        { _index: 715, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts:19',
        { _index: 725, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts:29',
        { _index: 724, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts:34',
        { _index: 717, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts:38',
        { _index: 720, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts:74',
        { _index: 728, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/iam/iam.service.ts:89',
        { _index: 731, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'src/modules/permission/dto/create',
        {
          _index: 472,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/permission/dto/pagination',
        {
          _index: 897,
          title: {},
          body: {
            'classes/PaginationPermissionDto.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/modules/permission/dto/permission',
        {
          _index: 985,
          title: {},
          body: {
            'classes/PermissionIdExistDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/modules/permission/dto/update',
        {
          _index: 1267,
          title: {},
          body: { 'classes/UpdatePermissionDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.controller.ts',
        {
          _index: 939,
          title: {},
          body: {
            'controllers/PermissionController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/modules/permission/permission.controller.ts:32',
        {
          _index: 944,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.controller.ts:39',
        {
          _index: 947,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.controller.ts:46',
        {
          _index: 951,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.controller.ts:53',
        {
          _index: 959,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.controller.ts:63',
        {
          _index: 955,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.module.ts',
        {
          _index: 991,
          title: {},
          body: { 'modules/PermissionModule.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.service.ts',
        {
          _index: 992,
          title: {},
          body: {
            'injectables/PermissionService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/modules/permission/permission.service.ts:105',
        {
          _index: 998,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.service.ts:11',
        {
          _index: 994,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.service.ts:33',
        {
          _index: 995,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.service.ts:58',
        {
          _index: 996,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.service.ts:72',
        {
          _index: 1000,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'src/modules/permission/permission.service.ts:9',
        {
          _index: 993,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'src/modules/permission/types/pagination',
        {
          _index: 905,
          title: {},
          body: {
            'classes/PaginationPermissionResponse.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/modules/role/dto/create',
        {
          _index: 503,
          title: {},
          body: { 'classes/CreateRoleDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/role/dto/pagination',
        {
          _index: 909,
          title: {},
          body: { 'classes/PaginationRoleDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/role/dto/role',
        {
          _index: 1076,
          title: {},
          body: { 'classes/RoleIdExistDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/role/dto/update',
        {
          _index: 1269,
          title: {},
          body: { 'classes/UpdateRoleDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/role/role.controller.ts',
        {
          _index: 1049,
          title: {},
          body: { 'controllers/RoleController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/role/role.controller.ts:29',
        {
          _index: 1051,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'src/modules/role/role.controller.ts:36',
        {
          _index: 1053,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'src/modules/role/role.controller.ts:43',
        {
          _index: 1055,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'src/modules/role/role.controller.ts:50',
        {
          _index: 1060,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'src/modules/role/role.controller.ts:57',
        {
          _index: 1057,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'src/modules/role/role.module.ts',
        { _index: 1080, title: {}, body: { 'modules/RoleModule.html': {} } },
      ],
      [
        'src/modules/role/role.service.ts',
        {
          _index: 1082,
          title: {},
          body: { 'injectables/RoleService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/role/role.service.ts:10',
        {
          _index: 1083,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'src/modules/role/role.service.ts:100',
        {
          _index: 1087,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'src/modules/role/role.service.ts:116',
        {
          _index: 1089,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'src/modules/role/role.service.ts:12',
        {
          _index: 1084,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'src/modules/role/role.service.ts:163',
        {
          _index: 1088,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'src/modules/role/role.service.ts:58',
        {
          _index: 1086,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'src/modules/role/types/pagination',
        {
          _index: 915,
          title: {},
          body: {
            'classes/PaginationRoleResponse.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/modules/user/dto/create',
        {
          _index: 514,
          title: {},
          body: { 'classes/CreateUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/user/dto/pagination',
        {
          _index: 919,
          title: {},
          body: { 'classes/PaginationUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/user/dto/update',
        {
          _index: 1272,
          title: {},
          body: { 'classes/UpdateUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/user/dto/user',
        {
          _index: 1308,
          title: {},
          body: { 'classes/UserIdExistDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/user/user.controller.ts',
        {
          _index: 1291,
          title: {},
          body: { 'controllers/UserController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/user/user.controller.ts:17',
        {
          _index: 1293,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'src/modules/user/user.controller.ts:23',
        {
          _index: 1294,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'src/modules/user/user.controller.ts:29',
        {
          _index: 1295,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'src/modules/user/user.controller.ts:35',
        {
          _index: 1298,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'src/modules/user/user.controller.ts:41',
        {
          _index: 1296,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'src/modules/user/user.module.ts',
        { _index: 1314, title: {}, body: { 'modules/UserModule.html': {} } },
      ],
      [
        'src/modules/user/user.service.ts',
        {
          _index: 1317,
          title: {},
          body: { 'injectables/UserService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/modules/user/user.service.ts:133',
        {
          _index: 1322,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/modules/user/user.service.ts:14',
        {
          _index: 1319,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/modules/user/user.service.ts:47',
        {
          _index: 1320,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/modules/user/user.service.ts:75',
        {
          _index: 1321,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/modules/user/user.service.ts:9',
        {
          _index: 1318,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/modules/user/user.service.ts:92',
        {
          _index: 1323,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/utils/dv.ts',
        {
          _index: 1414,
          title: {},
          body: {
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'src/utils/init.ts',
        {
          _index: 797,
          title: {},
          body: {
            'classes/InitUtil.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/utils/init.ts:12',
        { _index: 804, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'src/utils/init.ts:6',
        { _index: 802, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'src/utils/init.ts:9',
        { _index: 807, title: {}, body: { 'classes/InitUtil.html': {} } },
      ],
      [
        'src/utils/sync',
        {
          _index: 1117,
          title: {},
          body: {
            'interfaces/Route.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      ['start', { _index: 1494, title: {}, body: { 'index.html': {} } }],
      ['start:dev', { _index: 1495, title: {}, body: { 'index.html': {} } }],
      [
        'start:prodtest',
        { _index: 1496, title: {}, body: { 'index.html': {} } },
      ],
      ['started', { _index: 1479, title: { 'index.html': {} }, body: {} }],
      ['starter', { _index: 1488, title: {}, body: { 'index.html': {} } }],
      [
        'statements',
        { _index: 1381, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'static',
        {
          _index: 469,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/InitUtil.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'status',
        {
          _index: 522,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'injectables/IamService.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Role-1.html': {},
            'classes/User-1.html': {},
            'injectables/UserService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['stay', { _index: 1518, title: {}, body: { 'index.html': {} } }],
      [
        'str',
        { _index: 718, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'string',
        {
          _index: 32,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'classes/RoleIdExistDto.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/User-1.html': {},
            'classes/UserIdExistDto.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'success',
        {
          _index: 213,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'classes/SuccessOperationResponse.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'successoperationresponse',
        {
          _index: 954,
          title: { 'classes/SuccessOperationResponse.html': {} },
          body: {
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'classes/SuccessOperationResponse.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'summary',
        {
          _index: 137,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/IamController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'supertest',
        { _index: 1221, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'support',
        {
          _index: 1509,
          title: {},
          body: { 'index.html': {}, 'modules.html': {} },
        },
      ],
      ['svg', { _index: 1529, title: {}, body: { 'modules.html': {} } }],
      [
        'switch',
        {
          _index: 457,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'synced',
        { _index: 1167, title: {}, body: { 'interfaces/Route.html': {} } },
      ],
      [
        'syncroute',
        {
          _index: 1154,
          title: {},
          body: {
            'interfaces/Route.html': {},
            'classes/TestHelper.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'syncroute(app',
        {
          _index: 1120,
          title: {},
          body: {
            'interfaces/Route.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'syncroute(this.app',
        { _index: 1236, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        't',
        {
          _index: 404,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/ListResult.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      ['table', { _index: 1416, title: {}, body: { 'coverage.html': {} } }],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 1415, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'take',
        {
          _index: 430,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'templatepaginationdtoinstance',
        {
          _index: 470,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'test',
        {
          _index: 1215,
          title: {},
          body: { 'classes/TestHelper.html': {}, 'index.html': {} },
        },
      ],
      [
        'test.createtestingmodule',
        { _index: 1225, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'test:covsupport',
        { _index: 1501, title: {}, body: { 'index.html': {} } },
      ],
      ['test:e2e', { _index: 1500, title: {}, body: { 'index.html': {} } }],
      [
        'testhelper',
        {
          _index: 1192,
          title: { 'classes/TestHelper.html': {} },
          body: { 'classes/TestHelper.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'testingmodule',
        { _index: 1205, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      ['tests', { _index: 1498, title: {}, body: { 'index.html': {} } }],
      ['thanks', { _index: 1507, title: {}, body: { 'index.html': {} } }],
      [
        'this.apipermissionservice.findall(paginationdto',
        {
          _index: 140,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'this.apipermissionservice.findone(dto.id',
        {
          _index: 143,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'this.apipermissionservice.update(updateapipermissiondto',
        {
          _index: 146,
          title: {},
          body: { 'controllers/ApiPermissionController.html': {} },
        },
      ],
      [
        'this.app',
        { _index: 1233, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.app.close',
        { _index: 1245, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.cleanupcallbacks',
        { _index: 1243, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.cleanupcallbacks.push(async',
        { _index: 1253, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.cleanupcallbacks.reverse',
        { _index: 1242, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.compare(dto.password',
        { _index: 770, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'this.gensession(user',
        { _index: 773, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'this.getpaginationvalue',
        {
          _index: 433,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'this.hash(dto.password',
        { _index: 776, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'this.i18n.translate(`validation.${constraint',
        {
          _index: 1372,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'this.iamservice.hash(createuserdto.password',
        {
          _index: 1328,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.iamservice.hash(updateuserdto.password',
        {
          _index: 1343,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.iamservice.signin(dto',
        {
          _index: 692,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'this.iamservice.signoutbytoken(user',
        {
          _index: 698,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'this.iamservice.signup(dto',
        {
          _index: 695,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        "this.logger.log('dbvalidationpipe",
        {
          _index: 598,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'this.moduleref',
        { _index: 1230, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.moduleref.close',
        { _index: 1247, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.page',
        {
          _index: 428,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'this.pagesize',
        {
          _index: 429,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'this.permissionservice.create(createpermissiondto',
        {
          _index: 969,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'this.permissionservice.findall(paginate',
        {
          _index: 970,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'this.permissionservice.findone(dto.id',
        {
          _index: 971,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'this.permissionservice.remove(dto.id',
        {
          _index: 976,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'this.permissionservice.update',
        {
          _index: 972,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'this.prisma',
        {
          _index: 605,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'this.prisma.apipermission.count',
        {
          _index: 292,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'this.prisma.apipermission.findfirstorthrow',
        {
          _index: 217,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'this.prisma.apipermission.findmany',
        {
          _index: 289,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'this.prisma.apipermission.findunique',
        {
          _index: 294,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'this.prisma.apipermission.update',
        {
          _index: 295,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'this.prisma.operationlog.create',
        {
          _index: 229,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'this.prisma.permission.count',
        {
          _index: 1010,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'this.prisma.permission.create',
        {
          _index: 1001,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'this.prisma.permission.findmany',
        {
          _index: 1008,
          title: {},
          body: {
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'this.prisma.permission.findunique',
        {
          _index: 1012,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'this.prisma.permission.update',
        {
          _index: 1013,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'this.prisma.role.count',
        {
          _index: 747,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'this.prisma.role.create',
        {
          _index: 1098,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'this.prisma.role.createmany',
        { _index: 748, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'this.prisma.role.findmany',
        {
          _index: 1102,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'this.prisma.role.findunique',
        {
          _index: 1107,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'this.prisma.role.update',
        {
          _index: 1113,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'this.prisma.session.create',
        { _index: 759, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'this.prisma.session.delete',
        { _index: 756, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'this.prisma.session.deletemany',
        { _index: 796, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'this.prisma.session.findfirst',
        {
          _index: 188,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/IamService.html': {},
          },
        },
      ],
      [
        'this.prisma.session.findmany',
        { _index: 793, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'this.prisma.user.count',
        {
          _index: 1334,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.prisma.user.create',
        {
          _index: 778,
          title: {},
          body: {
            'injectables/IamService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'this.prisma.user.findfirst',
        { _index: 767, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'this.prisma.user.findmany',
        {
          _index: 1336,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.prisma.user.findunique',
        {
          _index: 1326,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.prisma.user.update',
        {
          _index: 1339,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.prismaclient',
        { _index: 1222, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.prismaclient.$disconnect',
        { _index: 1246, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.prismaclient.session.create',
        { _index: 1252, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.prismaclient.session.delete',
        { _index: 1254, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.prismaclient.user.create',
        { _index: 1250, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.prismaclient.user.findfirst',
        { _index: 1251, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'this.reflector.get',
        {
          _index: 601,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'this.roleservice.create(createroledto',
        {
          _index: 1069,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'this.roleservice.findall(paginationdto',
        {
          _index: 1072,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'this.roleservice.findone(dto.id',
        {
          _index: 1073,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'this.roleservice.remove(dto.id',
        {
          _index: 1075,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'this.roleservice.update(updateroledto.id',
        {
          _index: 1074,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'this.tovalidate(metatype',
        {
          _index: 1359,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'this.userservice.create(createuserdto',
        {
          _index: 1303,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'this.userservice.findall(paginationdto',
        {
          _index: 1304,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'this.userservice.findone(dto.id',
        {
          _index: 1305,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'this.userservice.remove(dto.id',
        {
          _index: 1307,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'this.userservice.update(updateuserdto.id',
        {
          _index: 1306,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'this.wherebuilder(options.props[key',
        {
          _index: 439,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'throw',
        {
          _index: 220,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/DBValidationPipe.html': {},
            'injectables/IamService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'tmodel',
        {
          _index: 1551,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'todo',
        { _index: 779, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'token',
        {
          _index: 184,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/Session-1.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      [
        'token.decorator',
        {
          _index: 686,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'token.decorator.ts',
        {
          _index: 1410,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'toskipandtake',
        {
          _index: 426,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'total',
        {
          _index: 291,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/ListResult.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['touch', { _index: 1519, title: {}, body: { 'index.html': {} } }],
      [
        'tovalidate',
        {
          _index: 1350,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'tovalidate(metatype',
        {
          _index: 1353,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'transform',
        {
          _index: 378,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationDto.html': {},
            'classes/TestHelper.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'transform(value',
        {
          _index: 562,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        'transformer',
        {
          _index: 387,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'true',
        {
          _index: 26,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'guards/ApiPermissionGuard.html': {},
            'injectables/ApiPermissionService.html': {},
            'modules/AppModule.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'injectables/PermissionService.html': {},
            'classes/Role-1.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/User-1.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'true})@apiproperty({description',
        {
          _index: 482,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'true})@isoptional',
        { _index: 507, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'try',
        { _index: 1235, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      ['twitter', { _index: 1525, title: {}, body: { 'index.html': {} } }],
      [
        'type',
        {
          _index: 21,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'controllers/ApiPermissionController.html': {},
            'classes/ApiPermissionGroup.html': {},
            'guards/ApiPermissionGuard.html': {},
            'classes/ApiPermissionIdExistDto.html': {},
            'injectables/ApiPermissionService.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'interfaces/IAppConfig.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/InitUtil.html': {},
            'classes/ListResult.html': {},
            'classes/OperationLog-1.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationApiPermissionResponseDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationPermissionResponse.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationRoleResponse.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Permission-1.html': {},
            'controllers/PermissionController.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/PermissionIdExistDto.html': {},
            'injectables/PermissionService.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'controllers/RoleController.html': {},
            'classes/RoleIdExistDto.html': {},
            'injectables/RoleService.html': {},
            'interfaces/Route.html': {},
            'classes/Session-1.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'typealiases',
        {
          _index: 1537,
          title: { 'miscellaneous/typealiases.html': {} },
          body: {},
        },
      ],
      [
        'typeof',
        {
          _index: 450,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'types',
        {
          _index: 1376,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'types.includes(metatype',
        {
          _index: 1377,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'types/pagination',
        {
          _index: 126,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'typescript',
        {
          _index: 786,
          title: {},
          body: { 'injectables/IamService.html': {}, 'index.html': {} },
        },
      ],
      [
        'ua',
        {
          _index: 666,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
          },
        },
      ],
      [
        'ua.decorator',
        {
          _index: 688,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'ua.decorator.ts',
        {
          _index: 1411,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'ua的session',
        { _index: 755, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'unauthorizedexception',
        {
          _index: 176,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        "unauthorizedexception('token",
        {
          _index: 221,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        "unauthorizedexception('user",
        {
          _index: 225,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'undefined',
        {
          _index: 196,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'interfaces/Route.html': {},
            'classes/SuccessOperationResponse.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
          },
        },
      ],
      [
        "undefined})@isoptional()@isuuidsallindatabase('permissiongroup",
        {
          _index: 485,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        "undefined})@isoptional()@isuuidsallindatabase('role",
        {
          _index: 487,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      ['unit', { _index: 1497, title: {}, body: { 'index.html': {} } }],
      [
        'unknown',
        {
          _index: 276,
          title: {},
          body: {
            'injectables/ApiPermissionService.html': {},
            'injectables/DBValidationPipe.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'classes/TestHelper.html': {},
            'injectables/UserService.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'unused',
        { _index: 788, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'up.dto',
        {
          _index: 681,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
          },
        },
      ],
      [
        'up.dto.ts',
        {
          _index: 1185,
          title: {},
          body: { 'classes/SignUpDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'up.dto.ts:12',
        { _index: 1186, title: {}, body: { 'classes/SignUpDto.html': {} } },
      ],
      [
        'up.dto.ts:18',
        { _index: 1188, title: {}, body: { 'classes/SignUpDto.html': {} } },
      ],
      [
        'update',
        {
          _index: 89,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'update(@body',
        {
          _index: 145,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'controllers/PermissionController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'update(id',
        {
          _index: 999,
          title: {},
          body: {
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'update(updateapipermissiondto',
        {
          _index: 105,
          title: {},
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
          },
        },
      ],
      [
        'update(updatepermissiondto',
        {
          _index: 956,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'update(updateroledto',
        {
          _index: 1058,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'update(updateuserdto',
        {
          _index: 1297,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'updateapipermissiondto',
        {
          _index: 106,
          title: { 'classes/UpdateApiPermissionDto.html': {} },
          body: {
            'controllers/ApiPermissionController.html': {},
            'injectables/ApiPermissionService.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateapipermissiondto.id',
        {
          _index: 296,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'updateapipermissiondto.ispublic',
        {
          _index: 297,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'updatedat',
        {
          _index: 20,
          title: {},
          body: {
            'classes/ApiPermission.html': {},
            'classes/ApiPermissionGroup.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission-1.html': {},
            'classes/PermissionGroup-1.html': {},
            'classes/Profile-1.html': {},
            'classes/Role-1.html': {},
            'classes/Session-1.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'updateduser',
        {
          _index: 1338,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'updatepermissiondto',
        {
          _index: 957,
          title: { 'classes/UpdatePermissionDto.html': {} },
          body: {
            'controllers/PermissionController.html': {},
            'injectables/PermissionService.html': {},
            'classes/UpdatePermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updatepermissiondto.description',
        {
          _index: 1015,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'updatepermissiondto.id',
        {
          _index: 973,
          title: {},
          body: { 'controllers/PermissionController.html': {} },
        },
      ],
      [
        'updatepermissiondto.name',
        {
          _index: 1014,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'updatepermissiondto.permissiongroupids',
        {
          _index: 1019,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'updatepermissiondto.permissiongroupids.map((id',
        {
          _index: 1020,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'updatepermissiondto.roleids',
        {
          _index: 1016,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'updatepermissiondto.roleids.map((id',
        {
          _index: 1018,
          title: {},
          body: { 'injectables/PermissionService.html': {} },
        },
      ],
      [
        'updateroledto',
        {
          _index: 1059,
          title: { 'classes/UpdateRoleDto.html': {} },
          body: {
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateRoleDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateroledto.apipermissionids',
        {
          _index: 1109,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'updateroledto.apipermissionids.length',
        {
          _index: 1110,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'updateroledto.description',
        {
          _index: 1115,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'updateroledto.name',
        {
          _index: 1114,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'updateroledto.permissionids',
        {
          _index: 1111,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'updateroledto.permissionids.length',
        {
          _index: 1112,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'updateuserdto',
        {
          _index: 1271,
          title: { 'classes/UpdateUserDto.html': {} },
          body: {
            'classes/UpdateUserDto.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateuserdto.bio',
        {
          _index: 1347,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'updateuserdto.email',
        {
          _index: 1341,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'updateuserdto.name',
        {
          _index: 1340,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'updateuserdto.password',
        {
          _index: 1342,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'updateuserdto.phone',
        {
          _index: 1346,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'updateuserdto.roleid',
        {
          _index: 1345,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'updateuserdto.status',
        {
          _index: 1344,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'url',
        {
          _index: 206,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'useclass',
        {
          _index: 374,
          title: {},
          body: { 'modules/AppModule.html': {}, 'modules/IamModule.html': {} },
        },
      ],
      [
        'useclass(provider.useclass',
        { _index: 1229, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'usefactory',
        { _index: 375, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'user',
        {
          _index: 57,
          title: { 'classes/User.html': {}, 'classes/User-1.html': {} },
          body: {
            'classes/ApiPermission-1.html': {},
            'classes/ApiPermissionGroup-1.html': {},
            'guards/ApiPermissionGuard.html': {},
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'classes/OperationLog.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Permission.html': {},
            'classes/PermissionGroup.html': {},
            'classes/Profile.html': {},
            'classes/Profile-1.html': {},
            'classes/Role.html': {},
            'classes/Role-1.html': {},
            'classes/Session.html': {},
            'classes/Session-1.html': {},
            'classes/TestHelper.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/User-1.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'user.controller',
        { _index: 1315, title: {}, body: { 'modules/UserModule.html': {} } },
      ],
      [
        'user.decorator',
        {
          _index: 684,
          title: {},
          body: { 'controllers/IamController.html': {} },
        },
      ],
      [
        'user.decorator.ts',
        {
          _index: 1412,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'user.dto',
        {
          _index: 1274,
          title: {},
          body: {
            'classes/UpdateUserDto.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'user.dto.ts',
        {
          _index: 515,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'user.dto.ts:10',
        {
          _index: 922,
          title: {},
          body: { 'classes/PaginationUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:15',
        {
          _index: 921,
          title: {},
          body: { 'classes/PaginationUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:20',
        {
          _index: 923,
          title: {},
          body: { 'classes/PaginationUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:24',
        { _index: 531, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:25',
        {
          _index: 927,
          title: {},
          body: { 'classes/PaginationUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:30',
        {
          _index: 924,
          title: {},
          body: { 'classes/PaginationUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:34',
        { _index: 536, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:40',
        { _index: 528, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:47',
        { _index: 538, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:54',
        { _index: 524, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:62',
        { _index: 544, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:69',
        { _index: 540, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:78',
        { _index: 526, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.id',
        {
          _index: 231,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/IamService.html': {},
            'classes/TestHelper.html': {},
          },
        },
      ],
      [
        'user.password',
        { _index: 771, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'user.role',
        {
          _index: 224,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'user.role.apipermission',
        {
          _index: 235,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'user.role.name',
        {
          _index: 226,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'user.service',
        {
          _index: 1300,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'user/dto/user',
        {
          _index: 1065,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'user:${req.user',
        {
          _index: 199,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'userapipermission',
        {
          _index: 234,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'userapipermission.find((p',
        {
          _index: 236,
          title: {},
          body: { 'guards/ApiPermissionGuard.html': {} },
        },
      ],
      [
        'usercontroller',
        {
          _index: 1290,
          title: { 'controllers/UserController.html': {} },
          body: {
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'userid',
        {
          _index: 230,
          title: {},
          body: {
            'guards/ApiPermissionGuard.html': {},
            'injectables/IamService.html': {},
            'classes/OperationLog-1.html': {},
            'classes/Profile-1.html': {},
            'classes/Session-1.html': {},
          },
        },
      ],
      [
        'useridexistdto',
        {
          _index: 1054,
          title: { 'classes/UserIdExistDto.html': {} },
          body: {
            'controllers/RoleController.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UserController.html': {},
            'classes/UserIdExistDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'usermodule',
        {
          _index: 310,
          title: { 'modules/UserModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/UserModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'users',
        {
          _index: 1335,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'userservice',
        {
          _index: 1299,
          title: { 'injectables/UserService.html': {} },
          body: {
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'userstatus',
        {
          _index: 925,
          title: {},
          body: {
            'classes/PaginationUserDto.html': {},
            'classes/User-1.html': {},
          },
        },
      ],
      [
        'userstatus.active',
        { _index: 1287, title: {}, body: { 'classes/User-1.html': {} } },
      ],
      [
        'usevalue',
        { _index: 1226, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'utils/dv',
        {
          _index: 281,
          title: {},
          body: { 'injectables/ApiPermissionService.html': {} },
        },
      ],
      [
        'utils/init',
        { _index: 742, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'utils/sync',
        { _index: 1220, title: {}, body: { 'classes/TestHelper.html': {} } },
      ],
      [
        'uuid',
        {
          _index: 499,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'v',
        {
          _index: 612,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'v.map((item',
        {
          _index: 616,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'validate',
        {
          _index: 1357,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'validate(object',
        {
          _index: 1362,
          title: {},
          body: { 'injectables/ValidationI18nPipe.html': {} },
        },
      ],
      [
        'validate_in_db_key',
        {
          _index: 576,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'validate_in_db_options_key',
        {
          _index: 578,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'validatefunc',
        {
          _index: 581,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'validateindb',
        {
          _index: 577,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'validateindbbypipe',
        {
          _index: 592,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'validateindbbypipe(validatefunc',
        {
          _index: 1469,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'validateindboptions',
        {
          _index: 579,
          title: { 'interfaces/ValidateInDBOptions.html': {} },
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'validateindbresult',
        {
          _index: 585,
          title: { 'interfaces/ValidateInDBResult.html': {} },
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'validationi18npipe',
        {
          _index: 344,
          title: { 'injectables/ValidationI18nPipe.html': {} },
          body: {
            'modules/AppModule.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'validationi18npipe(i18n',
        { _index: 380, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'validationoptions',
        {
          _index: 593,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'validationpipe',
        {
          _index: 313,
          title: {},
          body: { 'modules/AppModule.html': {}, 'classes/TestHelper.html': {} },
        },
      ],
      [
        'validator',
        {
          _index: 254,
          title: {},
          body: {
            'classes/ApiPermissionIdExistDto.html': {},
            'interfaces/BuildWhereOptions.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/PermissionIdExistDto.html': {},
            'classes/RoleIdExistDto.html': {},
            'classes/SignInDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/UpdateApiPermissionDto.html': {},
            'classes/UserIdExistDto.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'value',
        {
          _index: 414,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'injectables/DBValidationPipe.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'classes/Role-1.html': {},
            'classes/TestHelper.html': {},
            'classes/User-1.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
            'injectables/ValidationI18nPipe.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'value，dbdata',
        {
          _index: 629,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      ['variable', { _index: 1387, title: {}, body: { 'coverage.html': {} } }],
      [
        'variables',
        {
          _index: 1540,
          title: { 'miscellaneous/variables.html': {} },
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'vars',
        { _index: 789, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'verifyemail',
        { _index: 714, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      [
        'verifyemail(_token',
        { _index: 732, title: {}, body: { 'injectables/IamService.html': {} } },
      ],
      ['version', { _index: 1534, title: {}, body: { 'properties.html': {} } }],
      [
        'void',
        {
          _index: 561,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'classes/InitUtil.html': {},
          },
        },
      ],
      [
        'vp',
        {
          _index: 606,
          title: {},
          body: {
            'injectables/DBValidationPipe.html': {},
            'interfaces/ValidateInDBOptions.html': {},
            'interfaces/ValidateInDBResult.html': {},
          },
        },
      ],
      [
        'watch',
        {
          _index: 367,
          title: {},
          body: { 'modules/AppModule.html': {}, 'index.html': {} },
        },
      ],
      ['website', { _index: 1523, title: {}, body: { 'index.html': {} } }],
      [
        'where.deleted',
        {
          _index: 451,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'where.or',
        {
          _index: 446,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'wherebuilder',
        {
          _index: 838,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'wherebuilder(wto',
        {
          _index: 455,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'wheretype',
        {
          _index: 396,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'wheretypeoptions',
        {
          _index: 402,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'whitelist',
        {
          _index: 377,
          title: {},
          body: { 'modules/AppModule.html': {}, 'classes/TestHelper.html': {} },
        },
      ],
      [
        'winston',
        { _index: 1450, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'withdeleted',
        {
          _index: 386,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
            'injectables/PermissionService.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'wto',
        {
          _index: 866,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'wto.mapper',
        {
          _index: 460,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'wto.type',
        {
          _index: 458,
          title: {},
          body: {
            'interfaces/BuildWhereOptions.html': {},
            'classes/PaginationDto.html': {},
          },
        },
      ],
      [
        'x',
        {
          _index: 867,
          title: {},
          body: {
            'classes/PaginationApiPermissionDto.html': {},
            'classes/PaginationDto.html': {},
            'classes/PaginationRoleDto.html': {},
            'classes/PaginationUserDto.html': {},
          },
        },
      ],
      [
        'yes',
        {
          _index: 669,
          title: {},
          body: {
            'controllers/IamController.html': {},
            'injectables/IamService.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      ["you'd", { _index: 1512, title: {}, body: { 'index.html': {} } }],
      [
        'zh_cn',
        { _index: 364, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'zoom',
        {
          _index: 267,
          title: {},
          body: {
            'modules/ApiPermissionModule.html': {},
            'modules/AppModule.html': {},
            'modules/IamModule.html': {},
            'modules/PermissionModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
    ],
    pipeline: ['stemmer'],
  },
  store: {
    'classes/ApiPermission.html': {
      url: 'classes/ApiPermission.html',
      title: 'class - ApiPermission',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/api_permission.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPermissionGroups\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isPublic\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                operationLogs\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPermissionGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApiPermissionGroup[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => ApiPermissionGroup})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isPublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        operationLogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OperationLog[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => OperationLog})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Role})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog } from './operation_log';\nimport { Role } from './role';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class ApiPermission {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  path: string;\n\n  @ApiProperty({ type: String })\n  method: string;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ type: Boolean })\n  isPublic: boolean;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiProperty({ isArray: true, type: () => ApiPermissionGroup })\n  apiPermissionGroups: ApiPermissionGroup[];\n\n  @ApiProperty({ isArray: true, type: () => OperationLog })\n  operationLogs: OperationLog[];\n\n  @ApiProperty({ isArray: true, type: () => Role })\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ApiPermission-1.html': {
      url: 'classes/ApiPermission-1.html',
      title: 'class - ApiPermission-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/ApiPermissionController.html': {
      url: 'controllers/ApiPermissionController.html',
      title: 'controller - ApiPermissionController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  ApiPermissionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/api-permission/api-permission.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-permission\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginationDto: PaginationApiPermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@HttpCode(200)@ApiOperation({summary: '获取所有api权限'})@ApiOkResponse({type: PaginationApiPermissionResponseDto})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationDto\n                                            \n                                                            PaginationApiPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(dto: ApiPermissionIdExistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('detail')@HttpCode(200)@ApiOperation({summary: '获取单个api权限'})@ApiOkResponse({type: ApiPermission})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ApiPermissionIdExistDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateApiPermissionDto: UpdateApiPermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update')@HttpCode(200)@ApiOperation({summary: '更新api权限'})@ApiOkResponse({type: ApiPermission})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateApiPermissionDto\n                                            \n                                                            UpdateApiPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { PaginationApiPermissionDto } from './dto/pagination-api-permission.dto';\nimport { Controller, Get, Body, Post, Query, HttpCode } from '@nestjs/common';\nimport { ApiPermissionService } from './api-permission.service';\n\nimport { UpdateApiPermissionDto } from './dto/update-api-permission.dto';\nimport {\n  ApiOperation,\n  ApiOkResponse,\n  ApiTags,\n  ApiExtraModels,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { ApiPermissionIdExistDto } from './dto/api-permission-id-exist.dto';\nimport { PaginationApiPermissionResponseDto } from './types/pagination-api-permission.type';\nimport { ApiPermission } from '@/_gen/prisma-class/api_permission';\n\n@ApiTags('api权限管理')\n@Controller('api-permission')\n@ApiBearerAuth()\n@ApiExtraModels(ApiPermission, PaginationApiPermissionResponseDto)\nexport class ApiPermissionController {\n  constructor(private readonly apiPermissionService: ApiPermissionService) {}\n\n  @Get('list')\n  @HttpCode(200)\n  @ApiOperation({ summary: '获取所有api权限' })\n  @ApiOkResponse({ type: PaginationApiPermissionResponseDto })\n  findAll(@Query() paginationDto: PaginationApiPermissionDto) {\n    return this.apiPermissionService.findAll(paginationDto);\n  }\n\n  @Get('detail')\n  @HttpCode(200)\n  @ApiOperation({ summary: '获取单个api权限' })\n  @ApiOkResponse({ type: ApiPermission })\n  findOne(@Query() dto: ApiPermissionIdExistDto) {\n    return this.apiPermissionService.findOne(dto.id);\n  }\n\n  @Post('update')\n  @HttpCode(200)\n  @ApiOperation({ summary: '更新api权限' })\n  @ApiOkResponse({ type: ApiPermission })\n  update(@Body() updateApiPermissionDto: UpdateApiPermissionDto) {\n    return this.apiPermissionService.update(updateApiPermissionDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ApiPermissionGroup.html': {
      url: 'classes/ApiPermissionGroup.html',
      title: 'class - ApiPermissionGroup',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiPermissionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/api_permission_group.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApiPermission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => ApiPermission})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/api_permission_group.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPermission } from \'./api_permission\';\nimport { ApiProperty, ApiPropertyOptional } from \'@nestjs/swagger\';\n\nexport class ApiPermissionGroup {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  name: string;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ isArray: true, type: () => ApiPermission })\n  permissions: ApiPermission[];\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/ApiPermissionGroup-1.html': {
      url: 'classes/ApiPermissionGroup-1.html',
      title: 'class - ApiPermissionGroup-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiPermissionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'guards/ApiPermissionGuard.html': {
      url: 'guards/ApiPermissionGuard.html',
      title: 'guard - ApiPermissionGuard',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ApiPermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/modules/iam/guards/api-permission.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/iam/guards/api-permission.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/guards/api-permission.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiPermission, Role, User } from '@prisma/client';\nimport { Request } from 'express';\nimport { PrismaService } from 'nestjs-prisma';\n\n@Injectable()\nexport class ApiPermissionGuard implements CanActivate {\n  constructor(private readonly prisma: PrismaService) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const req = context.switchToHttp().getRequest();\n    const token = req.headers['authorization'];\n    let session = null;\n    if (token) {\n      session = await this.prisma.session.findFirst({\n        where: {\n          token,\n          expiresAt: {\n            gt: new Date(),\n          },\n        },\n        include: {\n          user: {\n            include: {\n              role: {\n                include: {\n                  apiPermissions: true,\n                },\n              },\n            },\n          },\n        },\n      });\n      req.user = session ? session.user : undefined;\n      Logger.log(\n        `Incoming request user:${req.user ? req.user.email : 'invalid-token'}`,\n        'ApiPermissionGuard',\n      );\n    } else {\n      req.user = undefined;\n    }\n    const user:\n      | (User & Record>)\n      | undefined = request['user'];\n    const path = request.route.path;\n    const method = request.method;\n    const url = request.url;\n    const data = {\n      body: request.body,\n      query: request.query,\n      params: request.params,\n      url,\n      success: undefined,\n    };\n    Logger.log(`Incoming request ${method} ${path}`, 'ApiPermissionGuard');\n    Logger.log(\n      `Incoming request data:\\n ${JSON.stringify(data)}`,\n      'ApiPermissionGuard',\n    );\n    const api = await this.prisma.apiPermission.findFirstOrThrow({\n      where: {\n        path,\n        method: method.toLowerCase(),\n      },\n      include: {\n        roles: true,\n      },\n    });\n    if (api.isPublic) {\n      return true;\n    }\n    if (!session) {\n      throw new UnauthorizedException('Token not found or expired');\n    }\n    if (user === undefined || user.role === undefined) {\n      throw new UnauthorizedException('User not found or role not found');\n    }\n    if (user.role.name === 'admin') {\n      data.success = true;\n      await this.prisma.operationLog.create({\n        data: {\n          userId: user.id,\n          apiPermissionId: api.id,\n          data: JSON.stringify(data),\n        },\n      });\n      return true;\n    }\n    const userApiPermission = user.role.apiPermission;\n    if (userApiPermission && userApiPermission.find((p) => p.id === api.id)) {\n      data.success = true;\n      await this.prisma.operationLog.create({\n        data: {\n          userId: user.id,\n          apiPermissionId: api.id,\n          data: JSON.stringify(data),\n        },\n      });\n      return true;\n    }\n    data.success = false;\n    await this.prisma.operationLog.create({\n      data: {\n        userId: user.id,\n        apiPermissionId: api.id,\n        data: JSON.stringify(data),\n      },\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ApiPermissionIdExistDto.html': {
      url: 'classes/ApiPermissionIdExistDto.html',
      title: 'class - ApiPermissionIdExistDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiPermissionIdExistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/api-permission/dto/api-permission-id-exist.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@IsUUIDsALLInDataBase('apiPermission')@ApiProperty({description: 'API权限ID', example: '123e4567-e89b-12d3-a456-426614174000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/api-permission/dto/api-permission-id-exist.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsUUIDsALLInDataBase } from '@/commons/decorators/all-in-db.decorator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsUUID } from 'class-validator';\n\nexport class ApiPermissionIdExistDto {\n  @IsUUID()\n  @IsUUIDsALLInDataBase('apiPermission')\n  @ApiProperty({\n    description: 'API权限ID',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/ApiPermissionModule.html': {
      url: 'modules/ApiPermissionModule.html',
      title: 'module - ApiPermissionModule',
      body: "\n                   \n\n\n\n\n    Modules\n    ApiPermissionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiPermissionModule\n\n\n\ncluster_ApiPermissionModule_providers\n\n\n\n\nApiPermissionService\n\nApiPermissionService\n\n\n\nApiPermissionModule\n\nApiPermissionModule\n\nApiPermissionModule -->\n\nApiPermissionService->ApiPermissionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/api-permission/api-permission.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiPermissionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ApiPermissionService } from './api-permission.service';\nimport { ApiPermissionController } from './api-permission.controller';\n\n@Module({\n  controllers: [ApiPermissionController],\n  providers: [ApiPermissionService],\n})\nexport class ApiPermissionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ApiPermissionService.html': {
      url: 'injectables/ApiPermissionService.html',
      title: 'injectable - ApiPermissionService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiPermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/api-permission/api-permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/api-permission/api-permission.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginationDto: PaginationApiPermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationDto\n                                            \n                                                            PaginationApiPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateApiPermissionDto: UpdateApiPermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/api-permission/api-permission.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateApiPermissionDto\n                                            \n                                                            UpdateApiPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UpdateApiPermissionDto } from './dto/update-api-permission.dto';\nimport { PrismaService } from 'nestjs-prisma';\nimport { PaginationApiPermissionDto } from './dto/pagination-api-permission.dto';\nimport { ApiPermission } from '@/_gen/prisma-class/api_permission';\nimport { dv } from '@/utils/dv';\n\n@Injectable()\nexport class ApiPermissionService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async findAll(paginationDto: PaginationApiPermissionDto) {\n    const where = paginationDto.buildWhere({\n      props: {\n        name: { type: 'contains' },\n        roleIds: { type: 'sin', mapper: 'roles' },\n        permissionGroupIds: { type: 'sin', mapper: 'apiPermissionGroups' },\n      },\n    });\n    const apiPermissions = await this.prisma.apiPermission.findMany({\n      include: {\n        roles: true,\n        apiPermissionGroups: true,\n      },\n      ...paginationDto.toSkipAndTake(),\n      where,\n    });\n    const total = await this.prisma.apiPermission.count({\n      where,\n    });\n    return paginationDto.buildResponse(apiPermissions, total);\n  }\n\n  async findOne(id: string) {\n    const apiPermission = await this.prisma.apiPermission.findUnique({\n      include: {\n        roles: true,\n      },\n      where: { id },\n    });\n    return apiPermission;\n  }\n\n  async update(updateApiPermissionDto: UpdateApiPermissionDto) {\n    const { roleIds, permissionGroupIds } = updateApiPermissionDto;\n    const apiPermission = await this.prisma.apiPermission.update({\n      where: { id: updateApiPermissionDto.id },\n      data: {\n        isPublic: updateApiPermissionDto.isPublic,\n        ...dv(roleIds, {\n          roles: {\n            connect: roleIds.map((id) => ({ id })),\n          },\n        }),\n        ...dv(permissionGroupIds, {\n          permissionGroups: {\n            connect: permissionGroupIds.map((id) => ({ id })),\n          },\n        }),\n      },\n      include: {\n        roles: true,\n        apiPermissionGroups: true,\n      },\n    });\n    return apiPermission;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AppModule.html': {
      url: 'modules/AppModule.html',
      title: 'module - AppModule',
      body: "\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nIamModule\n\nIamModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nPermissionModule\n\nPermissionModule\n\nAppModule -->\n\nPermissionModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            IamModule\n                        \n                        \n                            PermissionModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from '@nestjs/common';\nimport { DevtoolsModule } from '@nestjs/devtools-integration';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { IamModule } from './modules/iam/iam.module';\nimport appConfig from './configs/app-config';\nimport { PrismaModule, PrismaService } from 'nestjs-prisma';\nimport { UserModule } from './modules/user/user.module';\nimport { ApiPermissionModule } from './modules/api-permission/api-permission.module';\nimport { PermissionModule } from './modules/permission/permission.module';\nimport { RoleModule } from './modules/role/role.module';\nimport { CacheInterceptor, CacheModule } from '@nestjs/cache-manager';\nimport { APP_INTERCEPTOR, APP_PIPE, Reflector } from '@nestjs/core';\nimport { HttpModule } from '@nestjs/axios';\nimport { HeaderResolver, I18nModule, I18nService } from 'nestjs-i18n';\nimport * as path from 'path';\nimport { ValidationI18nPipe } from './commons/pipes/validation-I18n-pipe';\nimport { DBValidationPipe } from './commons/slices/DBValidation';\n\nconst envFilePath = process.env.NODE_ENV;\n@Module({\n  imports: [\n    DevtoolsModule.register({\n      http: process.env.NODE_ENV == 'development',\n      port: 6000,\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [appConfig],\n      envFilePath: `.env.${envFilePath ?? 'production'}`,\n    }),\n    CacheModule.register({\n      isGlobal: true,\n    }),\n    I18nModule.forRoot({\n      fallbackLanguage: 'zh_CN',\n      loaderOptions: {\n        path: path.join(__dirname, '/i18n/'),\n        watch: true,\n      },\n      resolvers: [new HeaderResolver(['x-lang'])],\n    }),\n    IamModule,\n    UserModule,\n    ApiPermissionModule,\n    PermissionModule,\n    RoleModule,\n    PrismaModule.forRoot({\n      isGlobal: true,\n    }),\n    HttpModule.register({}),\n  ],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: CacheInterceptor,\n    },\n    {\n      provide: APP_PIPE,\n      useFactory: (\n        i18n: I18nService,\n        configService: ConfigService,\n        prismaService: PrismaService,\n        reflector: Reflector,\n      ) => {\n        return [\n          new ValidationPipe({\n            disableErrorMessages: false,\n            whitelist: true,\n            transform: true,\n          }),\n          new DBValidationPipe(prismaService, reflector),\n          new ValidationI18nPipe(i18n),\n        ];\n      },\n      inject: [I18nService, ConfigService, PrismaService, Reflector],\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/BuildWhereOptions.html': {
      url: 'interfaces/BuildWhereOptions.html',
      title: 'interface - BuildWhereOptions',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildWhereOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/dtos/pagination.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            props\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withDeleted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withDeleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withDeleted:     boolean | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsInt, IsNumber, Max, Min } from 'class-validator';\nimport { cloneDeep, isEmpty, isNil } from 'lodash';\n\nexport type WhereType =\n  | 'in'\n  | 'contains'\n  | 'eq'\n  | 'lt'\n  | 'lte'\n  | 'gt'\n  | 'gte'\n  | 'sin';\n\nexport type ModType = 'and' | 'or';\n\nexport type WhereTypeOptions = {\n  type: WhereType;\n  // 用于映射字段\n  mapper?: keyof T;\n  // 默认是 or\n  mode?: ModType;\n};\n\nexport interface BuildWhereOptions {\n  props: {\n    [key in keyof Partial>]: WhereTypeOptions;\n  };\n  withDeleted?: boolean | keyof Omit;\n}\n\nexport class PaginationDto {\n  @IsNumber({\n    allowNaN: false,\n    allowInfinity: false,\n    maxDecimalPlaces: 0,\n  })\n  @ApiProperty({\n    description: '分页页码',\n  })\n  @Min(1)\n  @Transform(({ value }) => Number(value))\n  page: number;\n\n  @IsNumber({\n    allowNaN: false,\n    allowInfinity: false,\n    maxDecimalPlaces: 0,\n  })\n  @Max(100)\n  @Min(5)\n  @IsInt()\n  @ApiProperty({\n    description: '分页大小(5, 10, 20, 50, 100)',\n  })\n  @Transform(({ value }) => Number(value))\n  pageSize: number;\n\n  toSkipAndTake() {\n    return {\n      skip: (this.page - 1) * this.pageSize,\n      take: this.pageSize,\n    };\n  }\n\n  buildWhere(options: BuildWhereOptions) {\n    let where: any = {};\n    const paginationValue = this.getPaginationValue();\n    const ands: any[] = Object.keys(options.props)\n      .filter((key) => {\n        return options.props[key].mode === 'and';\n      })\n      .map((key) =>\n        this.whereBuilder(options.props[key], key, paginationValue[key]),\n      );\n    const ors: any[] = Object.keys(options.props)\n      .filter((key) => {\n        return (\n          // 如果 mode 是 or 或者 mode 不存在，则返回 true (即默认是 or)\n          options.props[key].mode === 'or' || isNil(options.props[key].mode)\n        );\n      })\n      .map((key) => {\n        console.log(key, 'key');\n        return this.whereBuilder(options.props[key], key, paginationValue[key]);\n      })\n      .filter((item) => !isEmpty(item));\n    where.OR = isEmpty(ors) ? undefined : ors;\n    where = { ...where, ...Object.assign({}, ...ands) };\n    if (options.withDeleted) {\n      if (typeof options.withDeleted === 'boolean') {\n        where.deleted = options.withDeleted;\n      } else {\n        where.deleted = {\n          eq: paginationValue[options.withDeleted],\n        };\n      }\n    }\n    return where;\n  }\n\n  buildResponse(data: T[], total: number) {\n    return {\n      data,\n      total,\n      page: this.page,\n      pageSize: this.pageSize,\n    };\n  }\n\n  private whereBuilder(wto: WhereTypeOptions, key: string, value: any) {\n    console.log(value, 'value');\n    if (value === undefined) {\n      return {};\n    }\n    switch (wto.type) {\n      case 'in':\n        return {\n          [wto.mapper ?? key]: {\n            in: value,\n          },\n        };\n      case 'contains':\n        return {\n          [wto.mapper ?? key]: {\n            contains: value,\n          },\n        };\n      case 'eq':\n        return {\n          [wto.mapper ?? key]: value,\n        };\n      case 'lt':\n        return {\n          [wto.mapper ?? key]: {\n            lt: value,\n          },\n        };\n      case 'lte':\n        return {\n          [wto.mapper ?? key]: {\n            lte: value,\n          },\n        };\n      case 'gt':\n        return {\n          [wto.mapper ?? key]: {\n            gt: value,\n          },\n        };\n      case 'gte':\n        return {\n          [wto.mapper ?? key]: {\n            gte: value,\n          },\n        };\n      case 'sin':\n        return {\n          [wto.mapper ?? key]: {\n            some: {\n              id: {\n                in: value,\n              },\n            },\n          },\n        };\n    }\n  }\n\n  private getPaginationValue() {\n    const clone = cloneDeep(this);\n    for (const key in PaginationDto.templatePaginationDtoInstance) {\n      if (PaginationDto.templatePaginationDtoInstance.hasOwnProperty(key)) {\n        delete clone[key];\n      }\n    }\n    return clone as Omit;\n  }\n\n  // type space to value space\n  static readonly templatePaginationDtoInstance = new PaginationDto();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreatePermissionDto.html': {
      url: 'classes/CreatePermissionDto.html',
      title: 'class - CreatePermissionDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                permissionGroupIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roleIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(50)@Optional()@ApiProperty({description: '权限描述', maxLength: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/permission/dto/create-permission.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(20)@ApiProperty({description: '权限字符', maxLength: 20})@IsNotSameNameInDataBase('permission')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/permission/dto/create-permission.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        permissionGroupIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID('4', {each: true})@ApiProperty({description: '权限组id', type: 'array', items: undefined})@IsOptional()@IsUUIDsALLInDataBase('permissionGroup')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/permission/dto/create-permission.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        roleIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID('4', {each: true})@ApiProperty({description: '角色id', type: 'array', items: undefined})@IsOptional()@IsUUIDsALLInDataBase('role')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/permission/dto/create-permission.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsUUIDsALLInDataBase } from '@/commons/decorators/all-in-db.decorator';\nimport { IsNotSameNameInDataBase } from '@/commons/decorators/not-same-name.decorator';\nimport { Optional } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, IsUUID, MaxLength } from 'class-validator';\n\nexport class CreatePermissionDto {\n  @IsString()\n  @MaxLength(20)\n  @ApiProperty({\n    description: '权限字符',\n    maxLength: 20,\n  })\n  @IsNotSameNameInDataBase('permission')\n  name: string;\n\n  @IsString()\n  @MaxLength(50)\n  @Optional()\n  @ApiProperty({\n    description: '权限描述',\n    maxLength: 50,\n  })\n  description?: string;\n\n  @IsUUID('4', { each: true })\n  @ApiProperty({\n    description: '角色id',\n    type: 'array',\n    items: {\n      type: 'string',\n      format: 'uuid',\n    },\n  })\n  @IsOptional()\n  @IsUUIDsALLInDataBase('role')\n  roleIds?: string[];\n\n  @IsUUID('4', { each: true })\n  @ApiProperty({\n    description: '权限组id',\n    type: 'array',\n    items: {\n      type: 'string',\n      format: 'uuid',\n    },\n  })\n  @IsOptional()\n  @IsUUIDsALLInDataBase('permissionGroup')\n  permissionGroupIds?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateRoleDto.html': {
      url: 'classes/CreateRoleDto.html',
      title: 'class - CreateRoleDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiPermissionIds\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                permissionIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiPermissionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID('4', {each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID('4', {each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsUUID } from 'class-validator';\n\nexport class CreateRoleDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @IsUUID('4', { each: true })\n  @IsOptional()\n  permissionIds: string[];\n\n  @IsUUID('4', { each: true })\n  @IsOptional()\n  apiPermissionIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateUserDto.html': {
      url: 'classes/CreateUserDto.html',
      title: 'class - CreateUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                bio\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                roleId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUrl()@ApiProperty({description: '头像'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MaxLength(100)@ApiProperty({description: '个人简介', maxLength: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({description: '邮箱'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MaxLength(12)@ApiProperty({description: '用户名', maxLength: 12})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(18)@MinLength(8)@ApiProperty({description: '密码', maxLength: 18, minLength: 8})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPhoneNumber('CN')@ApiProperty({description: '手机号'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUUID()@ApiProperty({description: '角色id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     $Enums.UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum($Enums.UserStatus)@ApiProperty({description: '用户状态', enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { $Enums } from '@prisma/client';\n\nimport {\n  IsEmail,\n  IsEnum,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  IsUrl,\n  IsUUID,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsOptional()\n  @IsString()\n  @MaxLength(12)\n  @ApiProperty({\n    description: '用户名',\n    maxLength: 12,\n  })\n  name?: string;\n\n  @IsString()\n  @MaxLength(18)\n  @MinLength(8)\n  @ApiProperty({\n    description: '密码',\n    maxLength: 18,\n    minLength: 8,\n  })\n  password: string;\n\n  @IsEmail()\n  @ApiProperty({\n    description: '邮箱',\n  })\n  email: string;\n\n  @IsOptional()\n  @IsPhoneNumber('CN')\n  @ApiProperty({\n    description: '手机号',\n  })\n  phone?: string;\n\n  @IsOptional()\n  @IsUrl()\n  @ApiProperty({\n    description: '头像',\n  })\n  avatar?: string;\n\n  @IsOptional()\n  @IsEnum($Enums.UserStatus)\n  @ApiProperty({\n    description: '用户状态',\n    enum: $Enums.UserStatus,\n  })\n  status?: $Enums.UserStatus;\n\n  @IsOptional()\n  @IsUUID()\n  @ApiProperty({\n    description: '角色id',\n  })\n  roleId?: string;\n\n  @IsOptional()\n  @IsString()\n  @MaxLength(100)\n  @ApiProperty({\n    description: '个人简介',\n    maxLength: 100,\n  })\n  bio?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/DBValidationPipe.html': {
      url: 'injectables/DBValidationPipe.html',
      title: 'injectable - DBValidationPipe',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DBValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/slices/DBValidation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaClient, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/commons/slices/DBValidation.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \nonApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/slices/DBValidation.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/slices/DBValidation.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DBValidationPipe.name)\n                    \n                \n                    \n                        \n                                Defined in src/commons/slices/DBValidation.ts:81\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  type ArgumentMetadata,\n  BadRequestException,\n  Body,\n  createParamDecorator,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  OnApplicationBootstrap,\n  Param,\n  type PipeTransform,\n  Query,\n  SetMetadata,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { type PrismaClient } from '@prisma/client';\nimport { isEmpty, isNil } from 'lodash';\n\nconst BEFORE_ALL_DB_VALIDATION_KEY = 'beforeAllDBValidation';\n\nconst VALIDATE_IN_DB_KEY = 'validateInDB';\n\nconst VALIDATE_IN_DB_OPTIONS_KEY = 'validateInDBOptions';\n\ntype Constructor = new (...args: any[]) => T;\n\ntype ValidateFunc = (\n  data: T,\n  prisma: PrismaClient,\n) => Promise | boolean;\n\ntype BeforeAllDBValidationFunc = (\n  dto: T,\n  prisma: PrismaClient,\n) => Promise;\n\ninterface ValidateInDBOptions {\n  message: string;\n}\n\n// 验证完的数据格式，不过似乎会丢失类型，尝试使用 ReturnType 代替？\nexport interface ValidateInDBResult {\n  dto: T;\n  dbData: K;\n}\n\nexport function BeforeAllDBValidation(func: BeforeAllDBValidationFunc) {\n  // 将 func 函数绑定到对象的元数据 BEFORE_ALL_DB_VALIDATION_KEY 上\n  return SetMetadata(BEFORE_ALL_DB_VALIDATION_KEY, func);\n}\n\nexport function ValidateInDBByPipe(\n  validateFunc: ValidateFunc,\n  validationOptions: ValidateInDBOptions,\n) {\n  return function (object: object, propertyName: string) {\n    // 将 validateFunc 函数绑定到对象的元数据 VALIDATE_IN_DB_KEY 上\n    Reflect.defineMetadata(\n      VALIDATE_IN_DB_KEY,\n      validateFunc,\n      object.constructor,\n      propertyName,\n    );\n    // 将 validationOptions 绑定到对象的元数据 VALIDATE_IN_DB_OPTIONS_KEY 上\n    Reflect.defineMetadata(\n      VALIDATE_IN_DB_OPTIONS_KEY,\n      validationOptions,\n      object.constructor,\n      propertyName,\n    );\n  };\n}\n\n@Injectable()\nexport class DBValidationPipe implements PipeTransform, OnApplicationBootstrap {\n  constructor(\n    private readonly prisma: PrismaClient,\n    private readonly reflector: Reflector,\n  ) {}\n\n  private readonly logger = new Logger(DBValidationPipe.name);\n\n  onApplicationBootstrap() {\n    this.logger.log('DBValidationPipe injected', 'DBValidationPipe');\n  }\n\n  async transform(value: any, metadata: ArgumentMetadata) {\n    // 获取对象的元数据 BEFORE_ALL_DB_VALIDATION_KEY\n    const beforeAllFunc = this.reflector.get | undefined>(\n      BEFORE_ALL_DB_VALIDATION_KEY,\n      metadata.metatype ?? Object,\n    );\n    // 如果存在 BEFORE_ALL_DB_VALIDATION_KEY 元数据，则执行该函数\n    if (!isNil(beforeAllFunc)) {\n      // 将 value 和 prisma 作为参数传入 BEFORE_ALL_DB_VALIDATION_KEY 函数\n      const data = await beforeAllFunc(value, this.prisma);\n      // 获取对象的所有属性中带有元数据 VALIDATE_IN_DB_KEY 的属性\n      const vP = Object.keys(value).map(async (key) => {\n        const func = this.reflector.get | undefined>(\n          VALIDATE_IN_DB_KEY,\n          (metadata.metatype as Constructor)[key],\n        );\n        // 如果存在 VALIDATE_IN_DB_KEY 元数据，则执行该函数进行验证\n        if (!isNil(func)) {\n          const res = await func(data, this.prisma);\n          return { [key]: res };\n        }\n        // 如果不存在 VALIDATE_IN_DB_KEY 元数据，则返回 true\n        return { [key]: true };\n      });\n      // 等待所有属性的验证结果\n      const v = await Promise.all(vP);\n      // 将验证结果转换为 Map 对象\n      const resMap = new Map(\n        v.map((item) => [Object.keys(item)[0], Object.values(item)[0]]),\n      );\n      // 如果所有属性的验证结果都为 true，则返回 value\n      const isValid = [...resMap.values()].every((item) => item);\n      // 如果有属性的验证结果为 false，则抛出 BadRequestException 异常\n      if (!isValid) {\n        const errorMessages = [...resMap.entries()]\n          .map(([key, value]) => {\n            if (!value) {\n              const options = this.reflector.get(\n                VALIDATE_IN_DB_OPTIONS_KEY,\n                (metadata.metatype as Constructor)[key],\n              );\n              return options?.message ?? `数据库验证失败 ${key}`;\n            }\n            return '';\n          })\n          .filter((item) => !isEmpty(item));\n        throw new BadRequestException(errorMessages);\n      }\n      // 返回 dto 与 数据库查询结果\n      return { dto: value, dbData: data } satisfies ValidateInDBResult;\n    }\n    // 如果不存在 BEFORE_ALL_DB_VALIDATION_KEY 元数据，则直接返回 value，dbData 为 null\n    return { dto: value, dbData: null } satisfies ValidateInDBResult;\n  }\n}\n\nexport const DBValidationBody = createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Body(DBValidationPipe);\n  },\n);\n\nexport const DBValidationParam = createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Param(DBValidationPipe);\n  },\n);\n\nexport const DBValidationQuery = createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Query(DBValidationPipe);\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/IAppConfig.html': {
      url: 'interfaces/IAppConfig.html',
      title: 'interface - IAppConfig',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configs/app-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            appDescription\n                                        \n                                \n                                \n                                        \n                                            appHost\n                                        \n                                \n                                \n                                        \n                                            appName\n                                        \n                                \n                                \n                                        \n                                            appVersion\n                                        \n                                \n                                \n                                        \n                                            env\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appHost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appHost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        env:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\n\nexport interface IAppConfig {\n  port: number;\n  env: string;\n  appName: string;\n  appDescription: string;\n  appVersion: string;\n  appHost: string;\n}\n\nexport const APP_CONFIG_TOKEN = 'app';\n\nexport default registerAs(APP_CONFIG_TOKEN, () => {\n  return {\n    port: parseInt(process.env.APP_PORT, 10) || 3000,\n    env: process.env.NODE_ENV || 'development',\n    appName: process.env.APP_NAME || 'NestJS App',\n    appDescription: process.env.APP_DESCRIPTION || 'NestJS App Description',\n    appVersion: process.env.APP_VERSION || '1.0.0',\n    appHost: process.env.APP_HOST || 'localhost',\n  } satisfies IAppConfig;\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/IamController.html': {
      url: 'controllers/IamController.html',
      title: 'controller - IamController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  IamController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/iam/iam.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                iam\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                signOut\n                            \n                            \n                                    \n                                    \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(dto: SignInDto, ua?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signIn')@ApiOperation({summary: '用户登录'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/iam/iam.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ua\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOut(user?: User, token?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signOut')@ApiBearerAuth()@ApiOperation({summary: '用户登出'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/iam/iam.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(dto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signUp')@ApiOperation({summary: '用户注册'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/iam/iam.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { IamService } from './iam.service';\nimport { SignInDto } from './dtos/sign-in.dto';\nimport { SignUpDto } from './dtos/sign-up.dto';\nimport { GetUser } from './decorators/get-user.decorator';\nimport { User } from '@prisma/client';\nimport { GetToken } from './decorators/get-token.decorator';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { GetUA } from './decorators/get-ua.decorator';\n\n@ApiTags('认证及授权模块')\n@Controller('iam')\nexport class IamController {\n  constructor(private readonly iamService: IamService) {}\n\n  @Post('signIn')\n  @ApiOperation({ summary: '用户登录' })\n  async signIn(@Body() dto: SignInDto, @GetUA() ua?: string) {\n    return this.iamService.signIn(dto, ua);\n  }\n\n  @Post('signUp')\n  @ApiOperation({ summary: '用户注册' })\n  async signUp(@Body() dto: SignUpDto) {\n    return this.iamService.signUp(dto);\n  }\n\n  @Post('signOut')\n  @ApiBearerAuth()\n  @ApiOperation({ summary: '用户登出' })\n  async signOut(@GetUser() user?: User, @GetToken() token?: string) {\n    return this.iamService.signOutByToken(user, token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/IamModule.html': {
      url: 'modules/IamModule.html',
      title: 'module - IamModule',
      body: "\n                   \n\n\n\n\n    Modules\n    IamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IamModule\n\n\n\ncluster_IamModule_exports\n\n\n\ncluster_IamModule_providers\n\n\n\n\nIamService \n\nIamService \n\n\n\nIamModule\n\nIamModule\n\nIamService  -->\n\nIamModule->IamService \n\n\n\n\n\nIamService\n\nIamService\n\nIamModule -->\n\nIamService->IamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/iam/iam.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IamService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IamController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IamService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IamController } from './iam.controller';\nimport { IamService } from './iam.service';\nimport { APP_GUARD } from '@nestjs/core';\nimport { ApiPermissionGuard } from './guards/api-permission.guard';\n\n@Module({\n  controllers: [IamController],\n  providers: [\n    IamService,\n    {\n      provide: APP_GUARD,\n      useClass: ApiPermissionGuard,\n    },\n  ],\n  exports: [IamService],\n})\nexport class IamModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/IamService.html': {
      url: 'injectables/IamService.html',
      title: 'injectable - IamService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/iam/iam.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                genSession\n                            \n                            \n                                    Async\n                                getSessionList\n                            \n                            \n                                    Async\n                                hash\n                            \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                sendVerificationEmail\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signOutByToken\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/iam/iam.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(str: string, hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        genSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    genSession(user?: User, ua?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                ua\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSessionList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSessionList(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendVerificationEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendVerificationEmail(_user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(dto: SignInDto, ua?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ua\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signOutByToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOutByToken(user: User, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(dto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/iam/iam.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  OnApplicationBootstrap,\n} from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { SignUpDto } from './dtos/sign-up.dto';\nimport { PrismaService } from 'nestjs-prisma';\nimport { SignInDto } from './dtos/sign-in.dto';\nimport { User } from '@prisma/client';\nimport { randomBytes } from 'crypto';\nimport { PRESET_ROLE } from './constants/preset-role.constant';\nimport InitUtil from '@/utils/init';\nimport { IAM_INIT_KEY } from './constants/iam-init.constant';\n\n@Injectable()\nexport class IamService implements OnApplicationBootstrap {\n  constructor(private prisma: PrismaService) {}\n  async onApplicationBootstrap() {\n    const count = await this.prisma.role.count();\n    if (count === 0) {\n      await this.prisma.role.createMany({\n        data: PRESET_ROLE,\n      });\n    }\n    InitUtil.init(IAM_INIT_KEY);\n  }\n\n  async hash(str: string): Promise {\n    const salt = await bcrypt.genSalt(10);\n    return await bcrypt.hash(str, salt);\n  }\n\n  async compare(str: string, hash: string): Promise {\n    return await bcrypt.compare(str, hash);\n  }\n\n  async genSession(user?: User, ua?: string) {\n    if (ua) {\n      const hasSameSession = await this.prisma.session.findFirst({\n        where: {\n          userId: user.id,\n          expiresAt: {\n            gt: new Date(),\n          },\n          description: ua,\n        },\n      });\n      // 如果已经有相同ua的session，删除\n      if (hasSameSession) {\n        await this.prisma.session.delete({\n          where: {\n            id: hasSameSession.id,\n          },\n        });\n      }\n    }\n    const token = randomBytes(32).toString('hex');\n    return this.prisma.session.create({\n      data: {\n        token,\n        user: {\n          connect: {\n            id: user.id,\n          },\n        },\n        description: ua ?? 'unknown device',\n        // 7 days\n        expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 24 * 7),\n      },\n    });\n  }\n\n  async signIn(dto: SignInDto, ua?: string) {\n    const user = await this.prisma.user.findFirst({\n      where: {\n        email: dto.email,\n      },\n    });\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n    if (!(await this.compare(dto.password, user.password))) {\n      throw new BadRequestException('Invalid password');\n    }\n    return this.genSession(user, ua);\n  }\n\n  async signUp(dto: SignUpDto) {\n    const user = await this.prisma.user.findFirst({\n      where: {\n        email: dto.email,\n      },\n    });\n    if (user) {\n      throw new BadRequestException('User already exists');\n    }\n    const password = await this.hash(dto.password);\n    const newUser = await this.prisma.user.create({\n      data: {\n        email: dto.email,\n        password,\n        // TODO: 通过status控制用户是否验证邮箱\n        status: 'ACTIVE',\n        role: {\n          connect: {\n            name: 'user',\n          },\n        },\n      },\n    });\n    delete newUser.password;\n    return newUser;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async sendVerificationEmail(_user: User) {\n    // Todo: 添加发送邮件逻辑\n    throw new Error('Not implemented');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async verifyEmail(_token: string) {\n    // Todo: 添加验证邮件逻辑\n    throw new Error('Not implemented');\n  }\n\n  async getSessionList(user: User) {\n    const sessions = await this.prisma.session.findMany({\n      where: {\n        userId: user.id,\n      },\n    });\n    return sessions.map((s) => ({\n      ...s,\n      token: null,\n    }));\n  }\n\n  async signOutByToken(user: User, token: string) {\n    await this.prisma.session.deleteMany({\n      where: {\n        userId: user.id,\n        token,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/InitUtil.html': {
      url: 'classes/InitUtil.html',
      title: 'class - InitUtil',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/init.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                            \n                                    Static\n                                initPipe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    init$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/init.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        initPipe\n                        \n                    \n                \n            \n            \n                \n                        \n                    initPipe(needKeys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/init.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                needKeys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        init$\n                    \n                \n\n                \n                    \n                        getinit$()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/init.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, filter, pipe } from \'rxjs\';\n\nconst initSubject = new BehaviorSubject([]);\n\nclass InitUtil {\n  static init(key: string) {\n    initSubject.next([...initSubject.value, key]);\n  }\n  static get init$() {\n    return initSubject.asObservable();\n  }\n  static initPipe(needKeys: string[]) {\n    return pipe(\n      filter((keys: string[]) => needKeys.every((key) => keys.includes(key))),\n    );\n  }\n}\n\nexport default InitUtil;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/ListResult.html': {
      url: 'classes/ListResult.html',
      title: 'class - ListResult',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/types/list-result.types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                    \n                                page\n                            \n                            \n                                    \n                                pageSize\n                            \n                            \n                                    \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/commons/types/list-result.types.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '页码'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commons/types/list-result.types.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '每页大小'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commons/types/list-result.types.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '总数'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commons/types/list-result.types.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport abstract class ListResult {\n  abstract data: T[];\n\n  @ApiProperty({ type: Number, description: '总数' })\n  total: number;\n\n  @ApiProperty({ type: Number, description: '页码' })\n  page: number;\n\n  @ApiProperty({ type: Number, description: '每页大小' })\n  pageSize: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/OperationLog.html': {
      url: 'classes/OperationLog.html',
      title: 'class - OperationLog',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OperationLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/OperationLog-1.html': {
      url: 'classes/OperationLog-1.html',
      title: 'class - OperationLog-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OperationLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/operation_log.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPermission\n                            \n                            \n                                    \n                                apiPermissionId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPermission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiPermission\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => ApiPermission})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPermissionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/operation_log.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { ApiPermission } from './api_permission';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class OperationLog {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n\n  @ApiProperty({ type: () => ApiPermission })\n  apiPermission: ApiPermission;\n\n  @ApiProperty({ type: String })\n  apiPermissionId: string;\n\n  @ApiProperty({ type: String })\n  data: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PaginationApiPermissionDto.html': {
      url: 'classes/PaginationApiPermissionDto.html',
      title: 'class - PaginationApiPermissionDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationApiPermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/api-permission/dto/pagination-api-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                permissionGroupIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roleIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pageSize\n                            \n                            \n                                    Static\n                                    Readonly\n                                templatePaginationDtoInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildResponse\n                            \n                            \n                                buildWhere\n                            \n                            \n                                    Private\n                                getPaginationValue\n                            \n                            \n                                toSkipAndTake\n                            \n                            \n                                    Private\n                                whereBuilder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'API权限名称必须是字符串'})@ApiProperty({description: 'API权限名称', required: false, example: '用户管理'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/api-permission/dto/pagination-api-permission.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        permissionGroupIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: '权限组ID列表必须是数组'})@ArrayMinSize(1, {message: '权限组ID列表至少需要1个元素'})@ArrayMaxSize(100, {message: '权限组ID列表最多允许100个元素'})@IsString({each: true, message: '权限组ID必须是字符串'})@ApiProperty({description: '权限组ID列表', required: false, type: String, isArray: true, minItems: 1, maxItems: 100, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/api-permission/dto/pagination-api-permission.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        roleIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: '角色ID列表必须是数组'})@ArrayMinSize(1, {message: '角色ID列表至少需要1个元素'})@ArrayMaxSize(100, {message: '角色ID列表最多允许100个元素'})@IsString({each: true, message: '角色ID必须是字符串'})@ApiProperty({description: '角色ID列表', required: false, type: String, isArray: true, minItems: 1, maxItems: 100, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/api-permission/dto/pagination-api-permission.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@ApiProperty({description: '分页页码'})@Min(1)@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@Max(100)@Min(5)@IsInt()@ApiProperty({description: '分页大小(5, 10, 20, 50, 100)'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        templatePaginationDtoInstance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PaginationDto()\n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:182\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildResponse\n                        \n                    \n                \n            \n            \n                \nbuildResponse(data: T[], total: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:103\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { data: {}; total: number; page: number; pageSize: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhere\n                        \n                    \n                \n            \n            \n                \nbuildWhere(options: BuildWhereOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:67\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            BuildWhereOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPaginationValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaginationValue()\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:171\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Omit\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSkipAndTake\n                        \n                    \n                \n            \n            \n                \ntoSkipAndTake()\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:60\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { skip: number; take: number; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        whereBuilder\n                        \n                    \n                \n            \n            \n                \n                        \n                    whereBuilder(wto: WhereTypeOptions, key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:112\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wto\n                                            \n                                                        WhereTypeOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { [x: string]: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PaginationDto } from '@/commons/dtos/pagination.dto';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsOptional,\n  IsString,\n  IsArray,\n  ArrayMinSize,\n  ArrayMaxSize,\n} from 'class-validator';\n\nexport class PaginationApiPermissionDto extends PaginationDto {\n  @IsOptional()\n  @IsString({ message: 'API权限名称必须是字符串' })\n  @ApiProperty({\n    description: 'API权限名称',\n    required: false,\n    example: '用户管理',\n  })\n  name?: string;\n\n  @IsOptional()\n  @IsArray({ message: '角色ID列表必须是数组' })\n  @ArrayMinSize(1, { message: '角色ID列表至少需要1个元素' })\n  @ArrayMaxSize(100, { message: '角色ID列表最多允许100个元素' })\n  @IsString({ each: true, message: '角色ID必须是字符串' })\n  @ApiProperty({\n    description: '角色ID列表',\n    required: false,\n    type: String,\n    isArray: true,\n    minItems: 1,\n    maxItems: 100,\n    example: [\n      '123e4567-e89b-12d3-a456-426614174000',\n      '223e4567-e89b-12d3-a456-426614174001',\n    ],\n  })\n  roleIds?: string[];\n\n  @IsOptional()\n  @IsArray({ message: '权限组ID列表必须是数组' })\n  @ArrayMinSize(1, { message: '权限组ID列表至少需要1个元素' })\n  @ArrayMaxSize(100, { message: '权限组ID列表最多允许100个元素' })\n  @IsString({ each: true, message: '权限组ID必须是字符串' })\n  @ApiProperty({\n    description: '权限组ID列表',\n    required: false,\n    type: String,\n    isArray: true,\n    minItems: 1,\n    maxItems: 100,\n    example: [\n      '323e4567-e89b-12d3-a456-426614174002',\n      '423e4567-e89b-12d3-a456-426614174003',\n    ],\n  })\n  permissionGroupIds?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PaginationApiPermissionResponseDto.html': {
      url: 'classes/PaginationApiPermissionResponseDto.html',
      title: 'class - PaginationApiPermissionResponseDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationApiPermissionResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/api-permission/types/pagination-api-permission.type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ListResult\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                page\n                            \n                            \n                                    \n                                pageSize\n                            \n                            \n                                    \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApiPermission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: ApiPermission, isArray: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '页码'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '每页大小'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '总数'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPermission } from '@/_gen/prisma-class/api_permission';\nimport { ListResult } from '@/commons/types/list-result.types';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationApiPermissionResponseDto extends ListResult {\n  @ApiProperty({ type: ApiPermission, isArray: true })\n  data: ApiPermission[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PaginationDto.html': {
      url: 'classes/PaginationDto.html',
      title: 'class - PaginationDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/dtos/pagination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pageSize\n                            \n                            \n                                    Static\n                                    Readonly\n                                templatePaginationDtoInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildResponse\n                            \n                            \n                                buildWhere\n                            \n                            \n                                    Private\n                                getPaginationValue\n                            \n                            \n                                toSkipAndTake\n                            \n                            \n                                    Private\n                                whereBuilder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@ApiProperty({description: '分页页码'})@Min(1)@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commons/dtos/pagination.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@Max(100)@Min(5)@IsInt()@ApiProperty({description: '分页大小(5, 10, 20, 50, 100)'})@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commons/dtos/pagination.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        templatePaginationDtoInstance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PaginationDto()\n                    \n                \n                    \n                        \n                                Defined in src/commons/dtos/pagination.dto.ts:182\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildResponse\n                        \n                    \n                \n            \n            \n                \nbuildResponse(data: T[], total: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/dtos/pagination.dto.ts:103\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { data: {}; total: number; page: number; pageSize: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhere\n                        \n                    \n                \n            \n            \n                \nbuildWhere(options: BuildWhereOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/dtos/pagination.dto.ts:67\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            BuildWhereOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPaginationValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaginationValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/dtos/pagination.dto.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Omit\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSkipAndTake\n                        \n                    \n                \n            \n            \n                \ntoSkipAndTake()\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/dtos/pagination.dto.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { skip: number; take: number; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        whereBuilder\n                        \n                    \n                \n            \n            \n                \n                        \n                    whereBuilder(wto: WhereTypeOptions, key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/dtos/pagination.dto.ts:112\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wto\n                                            \n                                                        WhereTypeOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { [x: string]: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsInt, IsNumber, Max, Min } from 'class-validator';\nimport { cloneDeep, isEmpty, isNil } from 'lodash';\n\nexport type WhereType =\n  | 'in'\n  | 'contains'\n  | 'eq'\n  | 'lt'\n  | 'lte'\n  | 'gt'\n  | 'gte'\n  | 'sin';\n\nexport type ModType = 'and' | 'or';\n\nexport type WhereTypeOptions = {\n  type: WhereType;\n  // 用于映射字段\n  mapper?: keyof T;\n  // 默认是 or\n  mode?: ModType;\n};\n\nexport interface BuildWhereOptions {\n  props: {\n    [key in keyof Partial>]: WhereTypeOptions;\n  };\n  withDeleted?: boolean | keyof Omit;\n}\n\nexport class PaginationDto {\n  @IsNumber({\n    allowNaN: false,\n    allowInfinity: false,\n    maxDecimalPlaces: 0,\n  })\n  @ApiProperty({\n    description: '分页页码',\n  })\n  @Min(1)\n  @Transform(({ value }) => Number(value))\n  page: number;\n\n  @IsNumber({\n    allowNaN: false,\n    allowInfinity: false,\n    maxDecimalPlaces: 0,\n  })\n  @Max(100)\n  @Min(5)\n  @IsInt()\n  @ApiProperty({\n    description: '分页大小(5, 10, 20, 50, 100)',\n  })\n  @Transform(({ value }) => Number(value))\n  pageSize: number;\n\n  toSkipAndTake() {\n    return {\n      skip: (this.page - 1) * this.pageSize,\n      take: this.pageSize,\n    };\n  }\n\n  buildWhere(options: BuildWhereOptions) {\n    let where: any = {};\n    const paginationValue = this.getPaginationValue();\n    const ands: any[] = Object.keys(options.props)\n      .filter((key) => {\n        return options.props[key].mode === 'and';\n      })\n      .map((key) =>\n        this.whereBuilder(options.props[key], key, paginationValue[key]),\n      );\n    const ors: any[] = Object.keys(options.props)\n      .filter((key) => {\n        return (\n          // 如果 mode 是 or 或者 mode 不存在，则返回 true (即默认是 or)\n          options.props[key].mode === 'or' || isNil(options.props[key].mode)\n        );\n      })\n      .map((key) => {\n        console.log(key, 'key');\n        return this.whereBuilder(options.props[key], key, paginationValue[key]);\n      })\n      .filter((item) => !isEmpty(item));\n    where.OR = isEmpty(ors) ? undefined : ors;\n    where = { ...where, ...Object.assign({}, ...ands) };\n    if (options.withDeleted) {\n      if (typeof options.withDeleted === 'boolean') {\n        where.deleted = options.withDeleted;\n      } else {\n        where.deleted = {\n          eq: paginationValue[options.withDeleted],\n        };\n      }\n    }\n    return where;\n  }\n\n  buildResponse(data: T[], total: number) {\n    return {\n      data,\n      total,\n      page: this.page,\n      pageSize: this.pageSize,\n    };\n  }\n\n  private whereBuilder(wto: WhereTypeOptions, key: string, value: any) {\n    console.log(value, 'value');\n    if (value === undefined) {\n      return {};\n    }\n    switch (wto.type) {\n      case 'in':\n        return {\n          [wto.mapper ?? key]: {\n            in: value,\n          },\n        };\n      case 'contains':\n        return {\n          [wto.mapper ?? key]: {\n            contains: value,\n          },\n        };\n      case 'eq':\n        return {\n          [wto.mapper ?? key]: value,\n        };\n      case 'lt':\n        return {\n          [wto.mapper ?? key]: {\n            lt: value,\n          },\n        };\n      case 'lte':\n        return {\n          [wto.mapper ?? key]: {\n            lte: value,\n          },\n        };\n      case 'gt':\n        return {\n          [wto.mapper ?? key]: {\n            gt: value,\n          },\n        };\n      case 'gte':\n        return {\n          [wto.mapper ?? key]: {\n            gte: value,\n          },\n        };\n      case 'sin':\n        return {\n          [wto.mapper ?? key]: {\n            some: {\n              id: {\n                in: value,\n              },\n            },\n          },\n        };\n    }\n  }\n\n  private getPaginationValue() {\n    const clone = cloneDeep(this);\n    for (const key in PaginationDto.templatePaginationDtoInstance) {\n      if (PaginationDto.templatePaginationDtoInstance.hasOwnProperty(key)) {\n        delete clone[key];\n      }\n    }\n    return clone as Omit;\n  }\n\n  // type space to value space\n  static readonly templatePaginationDtoInstance = new PaginationDto();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PaginationPermissionDto.html': {
      url: 'classes/PaginationPermissionDto.html',
      title: 'class - PaginationPermissionDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationPermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/dto/pagination-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  PaginationDto,\n  CreatePermissionDtoFilterType,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType, OmitType, PartialType } from '@nestjs/swagger';\nimport { PaginationDto } from '@/commons/dtos/pagination.dto';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport const CreatePermissionDtoFilterType = PartialType(\n  OmitType(CreatePermissionDto, ['description'] as const),\n);\n\nexport class PaginationPermissionDto extends IntersectionType(\n  PaginationDto,\n  CreatePermissionDtoFilterType,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PaginationPermissionResponse.html': {
      url: 'classes/PaginationPermissionResponse.html',
      title: 'class - PaginationPermissionResponse',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationPermissionResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/types/pagination-permission.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ListResult\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                page\n                            \n                            \n                                    \n                                pageSize\n                            \n                            \n                                    \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Permission, isArray: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '页码'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '每页大小'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '总数'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Permission } from '@/_gen/prisma-class/permission';\nimport { ListResult } from '@/commons/types/list-result.types';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationPermissionResponse extends ListResult {\n  @ApiProperty({ type: Permission, isArray: true })\n  data: Permission[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PaginationRoleDto.html': {
      url: 'classes/PaginationRoleDto.html',
      title: 'class - PaginationRoleDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/pagination-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                all\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pageSize\n                            \n                            \n                                    Static\n                                    Readonly\n                                templatePaginationDtoInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildResponse\n                            \n                            \n                                buildWhere\n                            \n                            \n                                    Private\n                                getPaginationValue\n                            \n                            \n                                toSkipAndTake\n                            \n                            \n                                    Private\n                                whereBuilder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        all\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/pagination-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/pagination-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@ApiProperty({description: '分页页码'})@Min(1)@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@Max(100)@Min(5)@IsInt()@ApiProperty({description: '分页大小(5, 10, 20, 50, 100)'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        templatePaginationDtoInstance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PaginationDto()\n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:182\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildResponse\n                        \n                    \n                \n            \n            \n                \nbuildResponse(data: T[], total: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:103\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { data: {}; total: number; page: number; pageSize: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhere\n                        \n                    \n                \n            \n            \n                \nbuildWhere(options: BuildWhereOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:67\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            BuildWhereOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPaginationValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaginationValue()\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:171\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Omit\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSkipAndTake\n                        \n                    \n                \n            \n            \n                \ntoSkipAndTake()\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:60\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { skip: number; take: number; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        whereBuilder\n                        \n                    \n                \n            \n            \n                \n                        \n                    whereBuilder(wto: WhereTypeOptions, key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:112\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wto\n                                            \n                                                        WhereTypeOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { [x: string]: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsOptional, IsString } from 'class-validator';\nimport { PaginationDto } from '@/commons/dtos/pagination.dto';\n\nexport class PaginationRoleDto extends PaginationDto {\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  all?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PaginationRoleResponse.html': {
      url: 'classes/PaginationRoleResponse.html',
      title: 'class - PaginationRoleResponse',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationRoleResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/types/pagination-role.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ListResult\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                page\n                            \n                            \n                                    \n                                pageSize\n                            \n                            \n                                    \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Role, isArray: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '页码'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '每页大小'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: '总数'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ListResult\n\n                            \n                        \n                    \n                        \n                                Defined in         ListResult:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '@/_gen/prisma-class/role';\nimport { ListResult } from '@/commons/types/list-result.types';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationRoleResponse extends ListResult {\n  @ApiProperty({ type: Role, isArray: true })\n  data: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PaginationUserDto.html': {
      url: 'classes/PaginationUserDto.html',
      title: 'class - PaginationUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/pagination-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                roleId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pageSize\n                            \n                            \n                                    Static\n                                    Readonly\n                                templatePaginationDtoInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildResponse\n                            \n                            \n                                buildWhere\n                            \n                            \n                                    Private\n                                getPaginationValue\n                            \n                            \n                                toSkipAndTake\n                            \n                            \n                                    Private\n                                whereBuilder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '用户邮箱', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/pagination-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUUID()@ApiProperty({description: '用户ID', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/pagination-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '用户名', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/pagination-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUUID()@ApiProperty({description: '角色ID', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/pagination-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(UserStatus)@ApiProperty({description: '用户状态', enum: UserStatus, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/pagination-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@ApiProperty({description: '分页页码'})@Min(1)@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})@Max(100)@Min(5)@IsInt()@ApiProperty({description: '分页大小(5, 10, 20, 50, 100)'})@Transform( => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        templatePaginationDtoInstance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PaginationDto()\n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:182\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildResponse\n                        \n                    \n                \n            \n            \n                \nbuildResponse(data: T[], total: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:103\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { data: {}; total: number; page: number; pageSize: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWhere\n                        \n                    \n                \n            \n            \n                \nbuildWhere(options: BuildWhereOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:67\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            BuildWhereOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPaginationValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaginationValue()\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:171\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Omit\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSkipAndTake\n                        \n                    \n                \n            \n            \n                \ntoSkipAndTake()\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:60\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { skip: number; take: number; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        whereBuilder\n                        \n                    \n                \n            \n            \n                \n                        \n                    whereBuilder(wto: WhereTypeOptions, key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaginationDto\n\n                        \n                    \n                    \n                        \n                                Defined in         PaginationDto:112\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wto\n                                            \n                                                        WhereTypeOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { [x: string]: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, IsUUID, IsEnum } from 'class-validator';\nimport { PaginationDto } from '@/commons/dtos/pagination.dto';\nimport { UserStatus } from '@prisma/client';\n\nexport class PaginationUserDto extends PaginationDto {\n  @IsOptional()\n  @IsUUID()\n  @ApiProperty({ description: '用户ID', required: false })\n  id?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ description: '用户邮箱', required: false })\n  email?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ description: '用户名', required: false })\n  name?: string;\n\n  @IsOptional()\n  @IsEnum(UserStatus)\n  @ApiProperty({ description: '用户状态', enum: UserStatus, required: false })\n  status?: UserStatus;\n\n  @IsOptional()\n  @IsUUID()\n  @ApiProperty({ description: '角色ID', required: false })\n  roleId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Permission.html': {
      url: 'classes/Permission.html',
      title: 'class - Permission',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Permission-1.html': {
      url: 'classes/Permission-1.html',
      title: 'class - Permission-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/permission.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissionGroups\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissionGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PermissionGroup[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => PermissionGroup})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Role})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from './role';\nimport { PermissionGroup } from './permission_group';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Permission {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  name: string;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ isArray: true, type: () => Role })\n  roles: Role[];\n\n  @ApiProperty({ isArray: true, type: () => PermissionGroup })\n  permissionGroups: PermissionGroup[];\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/PermissionController.html': {
      url: 'controllers/PermissionController.html',
      title: 'controller - PermissionController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/permission.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permission\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@ApiOperation({summary: '创建权限字符'})@ApiOkResponse({type: Permission})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permission/permission.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginate: PaginationPermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@ApiOperation({summary: '获取所有权限字符'})@ApiOkResponse({type: PaginationPermissionResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permission/permission.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginate\n                                            \n                                                            PaginationPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(dto: PermissionIdExistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('detail')@ApiOperation({summary: '获取单个权限字符'})@ApiOkResponse({type: Permission})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permission/permission.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            PermissionIdExistDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(dto: PermissionIdExistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('remove')@ApiOperation({summary: '删除权限字符'})@ApiOkResponse({type: SuccessOperationResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permission/permission.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            PermissionIdExistDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updatePermissionDto: UpdatePermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update')@ApiOperation({summary: '更新权限字符'})@ApiOkResponse({type: Permission})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permission/permission.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Query } from '@nestjs/common';\nimport { PermissionService } from './permission.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { PaginationPermissionDto } from './dto/pagination-permission.dto';\nimport { PermissionIdExistDto } from './dto/permission-id-exist.dto';\nimport { Permission } from '@/_gen/prisma-class/permission';\nimport {\n  ApiOkResponse,\n  ApiTags,\n  ApiExtraModels,\n  ApiOperation,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { PaginationPermissionResponse } from './types/pagination-permission.types';\nimport { SuccessOperationResponse } from '@/commons/types/success-operation.types';\n\n@ApiTags('权限字符管理')\n@Controller('permission')\n@ApiExtraModels(\n  Permission,\n  PaginationPermissionResponse,\n  SuccessOperationResponse,\n)\n@ApiBearerAuth()\nexport class PermissionController {\n  constructor(private readonly permissionService: PermissionService) {}\n\n  @Post('create')\n  @ApiOperation({ summary: '创建权限字符' })\n  @ApiOkResponse({ type: Permission })\n  create(@Body() createPermissionDto: CreatePermissionDto) {\n    return this.permissionService.create(createPermissionDto);\n  }\n\n  @Get('list')\n  @ApiOperation({ summary: '获取所有权限字符' })\n  @ApiOkResponse({ type: PaginationPermissionResponse })\n  findAll(@Query() paginate: PaginationPermissionDto) {\n    return this.permissionService.findAll(paginate);\n  }\n\n  @Get('detail')\n  @ApiOperation({ summary: '获取单个权限字符' })\n  @ApiOkResponse({ type: Permission })\n  findOne(@Query() dto: PermissionIdExistDto) {\n    return this.permissionService.findOne(dto.id);\n  }\n\n  @Post('update')\n  @ApiOperation({ summary: '更新权限字符' })\n  @ApiOkResponse({ type: Permission })\n  update(@Body() updatePermissionDto: UpdatePermissionDto) {\n    return this.permissionService.update(\n      updatePermissionDto.id,\n      updatePermissionDto,\n    );\n  }\n\n  @Post('remove')\n  @ApiOperation({ summary: '删除权限字符' })\n  @ApiOkResponse({ type: SuccessOperationResponse })\n  remove(@Body() dto: PermissionIdExistDto) {\n    return this.permissionService.remove(dto.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PermissionGroup.html': {
      url: 'classes/PermissionGroup.html',
      title: 'class - PermissionGroup',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PermissionGroup-1.html': {
      url: 'classes/PermissionGroup-1.html',
      title: 'class - PermissionGroup-1',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/permission_group.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Permission})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/permission_group.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Permission } from \'./permission\';\nimport { ApiProperty, ApiPropertyOptional } from \'@nestjs/swagger\';\n\nexport class PermissionGroup {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  name: string;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ isArray: true, type: () => Permission })\n  permissions: Permission[];\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/PermissionIdExistDto.html': {
      url: 'classes/PermissionIdExistDto.html',
      title: 'class - PermissionIdExistDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionIdExistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/dto/permission-id-exist.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@IsUUIDsALLInDataBase('permission')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/permission/dto/permission-id-exist.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsUUIDsALLInDataBase } from '@/commons/decorators/all-in-db.decorator';\nimport { IsUUID } from 'class-validator';\n\nexport class PermissionIdExistDto {\n  @IsUUID()\n  @IsUUIDsALLInDataBase('permission')\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/PermissionModule.html': {
      url: 'modules/PermissionModule.html',
      title: 'module - PermissionModule',
      body: "\n                   \n\n\n\n\n    Modules\n    PermissionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_providers\n\n\n\n\nPermissionService\n\nPermissionService\n\n\n\nPermissionModule\n\nPermissionModule\n\nPermissionModule -->\n\nPermissionService->PermissionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/permission/permission.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionService } from './permission.service';\nimport { PermissionController } from './permission.controller';\n\n@Module({\n  controllers: [PermissionController],\n  providers: [PermissionService],\n})\nexport class PermissionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/PermissionService.html': {
      url: 'injectables/PermissionService.html',
      title: 'injectable - PermissionService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/permission/permission.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permission/permission.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginate: PaginationPermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permission/permission.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginate\n                                            \n                                                            PaginationPermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permission/permission.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permission/permission.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permission/permission.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { PrismaService } from 'nestjs-prisma';\nimport { PaginationPermissionDto } from './dto/pagination-permission.dto';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class PermissionService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(createPermissionDto: CreatePermissionDto) {\n    const permission = await this.prisma.permission.create({\n      data: {\n        name: createPermissionDto.name,\n        description: createPermissionDto.description,\n        roles: {\n          connect: createPermissionDto.roleIds?.map((id) => ({ id })),\n        },\n        permissionGroups: {\n          connect: createPermissionDto.permissionGroupIds?.map((id) => ({\n            id,\n          })),\n        },\n      },\n      include: {\n        roles: true,\n        permissionGroups: true,\n      },\n    });\n    return permission;\n  }\n\n  async findAll(paginate: PaginationPermissionDto) {\n    const where: Prisma.PermissionWhereInput = paginate.buildWhere({\n      props: {\n        name: { type: 'contains' },\n        roleIds: { type: 'sin', mapper: 'roles' },\n        permissionGroupIds: { type: 'sin', mapper: 'permissionGroups' },\n      },\n      withDeleted: false,\n    });\n    const permissions = await this.prisma.permission.findMany({\n      include: {\n        roles: true,\n        permissionGroups: true,\n      },\n      ...paginate.toSkipAndTake(),\n      where,\n    });\n\n    const total = await this.prisma.permission.count({\n      where,\n    });\n\n    return paginate.buildResponse(permissions, total);\n  }\n\n  async findOne(id: string) {\n    const permission = await this.prisma.permission.findUnique({\n      where: {\n        id,\n        deletedAt: null,\n      },\n      include: {\n        roles: true,\n        permissionGroups: true,\n      },\n    });\n    return permission;\n  }\n\n  async update(id: string, updatePermissionDto: UpdatePermissionDto) {\n    const permission = await this.prisma.permission.update({\n      where: {\n        id,\n      },\n      data: {\n        name: updatePermissionDto.name,\n        description: updatePermissionDto.description,\n        ...(updatePermissionDto.roleIds\n          ? {\n              roles: {\n                set: updatePermissionDto.roleIds.map((id) => ({ id })),\n              },\n            }\n          : {}),\n        ...(updatePermissionDto.permissionGroupIds\n          ? {\n              permissionGroups: {\n                set: updatePermissionDto.permissionGroupIds.map((id) => ({\n                  id,\n                })),\n              },\n            }\n          : {}),\n      },\n      include: {\n        roles: true,\n        permissionGroups: true,\n      },\n    });\n    return permission;\n  }\n\n  async remove(id: string) {\n    await this.prisma.permission.update({\n      where: {\n        id,\n      },\n      data: {\n        deletedAt: new Date(),\n      },\n    });\n    return { data: 'success' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Profile.html': {
      url: 'classes/Profile.html',
      title: 'class - Profile',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Profile-1.html': {
      url: 'classes/Profile-1.html',
      title: 'class - Profile-1',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/profile.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                    Optional\n                                bio\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \'./user\';\nimport { ApiProperty, ApiPropertyOptional } from \'@nestjs/swagger\';\n\nexport class Profile {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiPropertyOptional({ type: String })\n  bio?: string;\n\n  @ApiPropertyOptional({ type: String })\n  avatar?: string;\n\n  @ApiPropertyOptional({ type: String })\n  phone?: string;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/Role.html': {
      url: 'classes/Role.html',
      title: 'class - Role',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Role-1.html': {
      url: 'classes/Role-1.html',
      title: 'class - Role-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/role.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPermissions\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletable\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPermissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApiPermission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => ApiPermission})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Permission})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RoleStatus\n\n                    \n                \n                \n                    \n                        Default value : RoleStatus.ACTIVE\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: RoleStatus, enumName: 'RoleStatus'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/role.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { Permission } from './permission';\nimport { ApiPermission } from './api_permission';\nimport { RoleStatus } from '@prisma/client';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Role {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  name: string;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ isArray: true, type: () => User })\n  user: User[];\n\n  @ApiProperty({ isArray: true, type: () => Permission })\n  permissions: Permission[];\n\n  @ApiProperty({ isArray: true, type: () => ApiPermission })\n  apiPermissions: ApiPermission[];\n\n  @ApiProperty({ enum: RoleStatus, enumName: 'RoleStatus' })\n  status: RoleStatus = RoleStatus.ACTIVE;\n\n  @ApiProperty({ type: Boolean })\n  deletable: boolean = true;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/RoleController.html': {
      url: 'controllers/RoleController.html',
      title: 'controller - RoleController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                role\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@ApiOperation({summary: '创建角色'})@ApiOkResponse({type: Role})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginationDto: PaginationRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('list')@ApiOperation({summary: '获取所有角色'})@ApiOkResponse({type: PaginationRoleResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationDto\n                                            \n                                                            PaginationRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(dto: UserIdExistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('detail')@ApiOperation({summary: '获取单个角色'})@ApiOkResponse({type: Role})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UserIdExistDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(dto: RoleIdExistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('remove')@ApiOperation({summary: '删除角色'})@ApiOkResponse({type: SuccessOperationResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RoleIdExistDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateRoleDto: UpdateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update')@ApiOperation({summary: '更新角色'})@ApiOkResponse({type: Role})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Query } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport {\n  ApiBearerAuth,\n  ApiExtraModels,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { PaginationRoleDto } from './dto/pagination-role.dto';\nimport { RoleIdExistDto } from './dto/role-id-exist.dto';\nimport { UserIdExistDto } from '../user/dto/user-id-exist.dto';\nimport { SuccessOperationResponse } from '@/commons/types/success-operation.types';\nimport { Role } from '@/_gen/prisma-class/role';\nimport { PaginationRoleResponse } from './types/pagination-role.types';\n\n@ApiTags('角色管理')\n@Controller('role')\n@ApiBearerAuth()\n@ApiExtraModels(SuccessOperationResponse, PaginationRoleResponse)\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) {}\n\n  @Post('create')\n  @ApiOperation({ summary: '创建角色' })\n  @ApiOkResponse({ type: Role })\n  create(@Body() createRoleDto: CreateRoleDto) {\n    return this.roleService.create(createRoleDto);\n  }\n\n  @Post('list')\n  @ApiOperation({ summary: '获取所有角色' })\n  @ApiOkResponse({ type: PaginationRoleResponse })\n  findAll(@Body() paginationDto: PaginationRoleDto) {\n    return this.roleService.findAll(paginationDto);\n  }\n\n  @Get('detail')\n  @ApiOperation({ summary: '获取单个角色' })\n  @ApiOkResponse({ type: Role })\n  findOne(@Query() dto: UserIdExistDto) {\n    return this.roleService.findOne(dto.id);\n  }\n\n  @Post('update')\n  @ApiOperation({ summary: '更新角色' })\n  @ApiOkResponse({ type: Role })\n  update(@Body() updateRoleDto: UpdateRoleDto) {\n    return this.roleService.update(updateRoleDto.id, updateRoleDto);\n  }\n\n  @Post('remove')\n  @ApiOperation({ summary: '删除角色' })\n  @ApiOkResponse({ type: SuccessOperationResponse })\n  remove(@Body() dto: RoleIdExistDto) {\n    return this.roleService.remove(dto.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/RoleIdExistDto.html': {
      url: 'classes/RoleIdExistDto.html',
      title: 'class - RoleIdExistDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleIdExistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/role-id-exist.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@IsUUIDsALLInDataBase('role')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/role-id-exist.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsUUIDsALLInDataBase } from '@/commons/decorators/all-in-db.decorator';\nimport { IsUUID } from 'class-validator';\n\nexport class RoleIdExistDto {\n  @IsUUID()\n  @IsUUIDsALLInDataBase('role')\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/RoleModule.html': {
      url: 'modules/RoleModule.html',
      title: 'module - RoleModule',
      body: "\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService\n\nRoleService\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { RoleController } from './role.controller';\n\n@Module({\n  controllers: [RoleController],\n  providers: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/RoleService.html': {
      url: 'injectables/RoleService.html',
      title: 'injectable - RoleService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/role/role.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(dto: PaginationRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            PaginationRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { PrismaService } from 'nestjs-prisma';\nimport { PaginationRoleDto } from './dto/pagination-role.dto';\nimport { Role } from '@/_gen/prisma-class/role';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class RoleService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(createRoleDto: CreateRoleDto) {\n    let apiPermissions = [];\n    let permissions = [];\n    if (createRoleDto.apiPermissionIds) {\n      apiPermissions = await this.prisma.apiPermission.findMany({\n        where: {\n          id: {\n            in: createRoleDto.apiPermissionIds,\n          },\n        },\n      });\n      if (apiPermissions.length !== createRoleDto.apiPermissionIds.length) {\n        throw new Error('apiPermissionIds is invalid');\n      }\n    }\n    if (createRoleDto.permissionIds) {\n      permissions = await this.prisma.permission.findMany({\n        where: {\n          id: {\n            in: createRoleDto.permissionIds,\n          },\n        },\n      });\n      if (permissions.length !== createRoleDto.permissionIds.length) {\n        throw new Error('permissionIds is invalid');\n      }\n    }\n    const role = await this.prisma.role.create({\n      data: {\n        name: createRoleDto.name,\n        description: createRoleDto.description,\n        ...(apiPermissions.length > 0\n          ? { apiPermission: { connect: apiPermissions } }\n          : {}),\n        ...(permissions.length > 0\n          ? { permission: { connect: permissions } }\n          : {}),\n      },\n      include: {\n        apiPermissions: apiPermissions.length > 0 ? true : false,\n        permissions: permissions.length > 0 ? true : false,\n      },\n    });\n    return role;\n  }\n\n  async findAll(dto: PaginationRoleDto) {\n    if (dto.all) {\n      const total = await this.prisma.role.count({\n        where: {\n          deletedAt: null,\n        },\n      });\n      const roles = await this.prisma.role.findMany({\n        include: {\n          apiPermissions: true,\n          permissions: true,\n        },\n        where: {\n          deletedAt: null,\n        },\n      });\n      return dto.buildResponse(roles, total);\n    }\n\n    const where: Prisma.RoleWhereInput = dto.buildWhere({\n      props: {\n        name: {\n          type: 'contains',\n        },\n      },\n      withDeleted: false,\n    });\n\n    const total = await this.prisma.role.count({ where });\n\n    const roles = await this.prisma.role.findMany({\n      ...dto.toSkipAndTake(),\n      where,\n      include: {\n        apiPermissions: true,\n        permissions: true,\n      },\n    });\n\n    return dto.buildResponse(roles, total);\n  }\n\n  async findOne(id: string) {\n    const role = await this.prisma.role.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        apiPermissions: true,\n        permissions: true,\n      },\n    });\n    if (!role) {\n      throw new BadRequestException('Role not found');\n    }\n    return role;\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto) {\n    let apiPermissions = [];\n    let permissions = [];\n    if (updateRoleDto.apiPermissionIds) {\n      apiPermissions = await this.prisma.apiPermission.findMany({\n        where: {\n          id: {\n            in: updateRoleDto.apiPermissionIds,\n          },\n        },\n      });\n      if (apiPermissions.length !== updateRoleDto.apiPermissionIds.length) {\n        throw new Error('apiPermissionIds is invalid');\n      }\n    }\n    if (updateRoleDto.permissionIds) {\n      permissions = await this.prisma.permission.findMany({\n        where: {\n          id: {\n            in: updateRoleDto.permissionIds,\n          },\n        },\n      });\n      if (permissions.length !== updateRoleDto.permissionIds.length) {\n        throw new Error('permissionIds is invalid');\n      }\n    }\n    const role = await this.prisma.role.update({\n      where: {\n        id,\n      },\n      data: {\n        name: updateRoleDto.name,\n        description: updateRoleDto.description,\n        ...(apiPermissions.length > 0\n          ? { apiPermissions: { set: apiPermissions } }\n          : {}),\n        ...(permissions.length > 0 ? { permission: { set: permissions } } : {}),\n      },\n      include: {\n        apiPermissions: apiPermissions.length > 0 ? true : false,\n        permissions: permissions.length > 0 ? true : false,\n      },\n    });\n    return role;\n  }\n\n  async remove(id: string) {\n    const role = await this.prisma.role.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!role) {\n      throw new BadRequestException('Role not found');\n    }\n    await this.prisma.role.update({\n      where: {\n        id,\n      },\n      data: {\n        deletedAt: new Date(),\n      },\n    });\n    return { message: 'success' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/Route.html': {
      url: 'interfaces/Route.html',
      title: 'interface - Route',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/sync-route.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { INestApplication, Logger } from '@nestjs/common';\nimport { PrismaService } from 'nestjs-prisma';\n\ninterface Route {\n  path: string;\n  method: string;\n}\n\nexport async function syncRoute(app: INestApplication) {\n  const server = app.getHttpServer();\n  const prisma = app.get(PrismaService);\n  const router = server._events.request._router;\n  const availableRoutes: Route[] = router.stack\n    .map((layer) => {\n      if (layer.route) {\n        return {\n          route: {\n            path: layer.route?.path,\n            method: layer.route?.stack[0].method,\n          },\n        };\n      }\n    })\n    .filter(\n      (item) => item !== undefined && !item.route.path.startsWith('/sapi'),\n    )\n    .map((item) => item.route);\n  const existingRoutes = await prisma.apiPermission.findMany();\n  const existingRoutesPaths = existingRoutes.map((route) => route.path);\n  const deletedRoutes = existingRoutes.filter(\n    (route) => !availableRoutes.map((route) => route.path).includes(route.path),\n  );\n  const newRoutes = availableRoutes.filter(\n    (route) => !existingRoutesPaths.includes(route.path),\n  );\n  const deletedRes = await prisma.apiPermission.deleteMany({\n    where: {\n      id: {\n        in: deletedRoutes.map((route) => route.id),\n      },\n    },\n  });\n  Logger.log(`Deleted ${deletedRes.count} routes`, 'SyncRoute');\n  Logger.log(deletedRoutes, 'SyncRoute');\n  Logger.log(`Creating ${newRoutes.length} routes`, 'SyncRoute');\n  Logger.log(newRoutes, 'SyncRoute');\n  Logger.log('Syncing routes', 'SyncRoute');\n  const createdRes = await prisma.apiPermission.createMany({\n    data: newRoutes.map((route) => ({\n      path: route.path,\n      method: route.method,\n    })),\n  });\n  if (deletedRes.count > 0) {\n    Logger.log(`Deleted ${deletedRes.count} routes`, 'SyncRoute');\n    Logger.log(deletedRoutes, 'SyncRoute');\n  }\n  if (createdRes.count > 0) {\n    Logger.log(`Created ${createdRes.count} routes`, 'SyncRoute');\n    Logger.log(newRoutes, 'SyncRoute');\n  }\n  if (deletedRes.count > 0 || createdRes.count > 0) {\n    Logger.log('Routes synced', 'SyncRoute');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Session.html': {
      url: 'classes/Session.html',
      title: 'class - Session',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Session-1.html': {
      url: 'classes/Session-1.html',
      title: 'class - Session-1',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                expiresAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                token\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/session.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \'./user\';\nimport { ApiProperty, ApiPropertyOptional } from \'@nestjs/swagger\';\n\nexport class Session {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  token: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n\n  @ApiProperty({ type: Date })\n  expiresAt: Date;\n\n  @ApiPropertyOptional({ type: String })\n  description?: string;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: String })\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/SignInDto.html': {
      url: 'classes/SignInDto.html',
      title: 'class - SignInDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/iam/dtos/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/iam/dtos/sign-in.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/iam/dtos/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \'class-validator\';\n\nexport class SignInDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/SignUpDto.html': {
      url: 'classes/SignUpDto.html',
      title: 'class - SignUpDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/iam/dtos/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/iam/dtos/sign-up.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(20)@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/iam/dtos/sign-up.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from \'class-validator\';\n\nexport class SignUpDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(20)\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/SuccessOperationResponse.html': {
      url: 'classes/SuccessOperationResponse.html',
      title: 'class - SuccessOperationResponse',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuccessOperationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/types/success-operation.types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commons/types/success-operation.types.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \'@nestjs/swagger\';\n\nexport class SuccessOperationResponse {\n  @ApiProperty({ enum: [\'success\'] })\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/TestHelper.html': {
      url: 'classes/TestHelper.html',
      title: 'class - TestHelper',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/helpers/test-helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                app\n                            \n                            \n                                cleanUpCallbacks\n                            \n                            \n                                    Private\n                                moduleRef\n                            \n                            \n                                    Public\n                                prismaClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                genToken\n                            \n                            \n                                    Async\n                                genUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    request\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockProviders: Array)\n                    \n                \n                        \n                            \n                                Defined in src/helpers/test-helper.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockProviders\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestExpressApplication\n\n                    \n                \n                    \n                        \n                                Defined in src/helpers/test-helper.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cleanUpCallbacks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/helpers/test-helper.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TestingModule\n\n                    \n                \n                    \n                        \n                                Defined in src/helpers/test-helper.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prismaClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PrismaClient\n\n                    \n                \n                    \n                        \n                                Defined in src/helpers/test-helper.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        genToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    genToken(role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/helpers/test-helper.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        genUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    genUser(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/helpers/test-helper.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        request\n                    \n                \n\n                \n                    \n                        getrequest()\n                    \n                \n                            \n                                \n                                    Defined in src/helpers/test-helper.ts:80\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Test, TestingModule } from '@nestjs/testing';\nimport { PrismaClient } from '@prisma/client';\nimport { AppModule } from '@/app.module';\nimport { NestExpressApplication } from '@nestjs/platform-express';\nimport { bootstrap } from '@/main';\nimport { syncRoute } from '@/utils/sync-route';\nimport * as request from 'supertest';\nimport { randomBytes } from 'crypto';\nimport { ValidationPipe } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\n\nexport class TestHelper {\n  private moduleRef: TestingModule;\n  public app: NestExpressApplication;\n  public prismaClient: PrismaClient;\n  cleanUpCallbacks: Array Promise> = [];\n\n  constructor(\n    mockProviders: Array = [],\n  ) {\n    this.prismaClient = new PrismaClient();\n\n    beforeAll(async () => {\n      const moduleRefBake = Test.createTestingModule({\n        imports: [AppModule],\n        providers: [\n          {\n            provide: APP_PIPE,\n            useValue: new ValidationPipe({\n              whitelist: true,\n              transform: true,\n            }),\n          },\n        ],\n      });\n\n      for (const provider of mockProviders) {\n        moduleRefBake\n          .overrideProvider(provider.overrideProvider)\n          .useClass(provider.useClass);\n      }\n\n      this.moduleRef = await moduleRefBake.compile();\n\n      const server = await this.moduleRef\n        .createNestApplication()\n        .init();\n      this.app = await bootstrap(server);\n      try {\n        await syncRoute(this.app);\n      } catch (e) {\n        // console.error(e);\n      }\n    });\n\n    afterEach(async () => {\n      for (const callback of this.cleanUpCallbacks.reverse()) {\n        await callback();\n      }\n      this.cleanUpCallbacks = [];\n    });\n\n    afterAll(async () => {\n      await this.app.close();\n      await this.prismaClient.$disconnect();\n      await this.moduleRef.close();\n\n      for (const callback of this.cleanUpCallbacks.reverse()) {\n        await callback();\n      }\n      this.cleanUpCallbacks = [];\n    });\n\n    return this;\n  }\n\n  get request() {\n    return request(this.app.getHttpServer());\n  }\n\n  async genUser({\n    email,\n    pass,\n    role,\n  }: {\n    email: string;\n    pass: string;\n    role: string;\n  }) {\n    const user = await this.prismaClient.user.create({\n      data: {\n        email,\n        password: pass,\n        role: {\n          connect: {\n            name: role,\n          },\n        },\n      },\n    });\n    return user;\n  }\n\n  async genToken(role: string) {\n    const user = await this.prismaClient.user.findFirst({\n      where: {\n        role: {\n          name: role,\n        },\n      },\n      include: {\n        role: true,\n      },\n    });\n\n    const res = await this.prismaClient.session.create({\n      data: {\n        token: randomBytes(32).toString('hex'),\n        expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 24 * 7),\n        user: {\n          connect: {\n            id: user.id,\n          },\n        },\n      },\n    });\n\n    this.cleanUpCallbacks.push(async () => {\n      try {\n        await this.prismaClient.session.delete({\n          where: {\n            id: res.id,\n          },\n        });\n      } catch (e) {}\n    });\n\n    return res.token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateApiPermissionDto.html': {
      url: 'classes/UpdateApiPermissionDto.html',
      title: 'class - UpdateApiPermissionDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateApiPermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/api-permission/dto/update-api-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ApiPermissionIdExistDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isPublic\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                permissionGroupIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roleIds\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isPublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean({message: 'isPublic必须是布尔值'})@ApiProperty({description: '是否公开', required: false, type: Boolean, example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/api-permission/dto/update-api-permission.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        permissionGroupIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: '权限组ID列表必须是数组'})@IsString({each: true, message: '每个权限组ID必须是字符串'})@ApiProperty({description: '权限组ID列表', required: false, type: String, isArray: true, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/api-permission/dto/update-api-permission.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        roleIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: '角色ID列表必须是数组'})@IsString({each: true, message: '每个角色ID必须是字符串'})@IsUUIDsALLInDataBase('role', {message: '所有角色ID必须存在于数据库中'})@ApiProperty({description: '角色ID列表', required: false, type: String, isArray: true, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/api-permission/dto/update-api-permission.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@IsUUIDsALLInDataBase('apiPermission')@ApiProperty({description: 'API权限ID', example: '123e4567-e89b-12d3-a456-426614174000'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ApiPermissionIdExistDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiPermissionIdExistDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsUUIDsALLInDataBase } from '@/commons/decorators/all-in-db.decorator';\nimport { IsOptional, IsString, IsArray, IsBoolean } from 'class-validator';\nimport { ApiPermissionIdExistDto } from './api-permission-id-exist.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateApiPermissionDto extends ApiPermissionIdExistDto {\n  @IsOptional()\n  @IsArray({ message: '角色ID列表必须是数组' })\n  @IsString({ each: true, message: '每个角色ID必须是字符串' })\n  @IsUUIDsALLInDataBase('role', { message: '所有角色ID必须存在于数据库中' })\n  @ApiProperty({\n    description: '角色ID列表',\n    required: false,\n    type: String,\n    isArray: true,\n    example: [\n      '123e4567-e89b-12d3-a456-426614174000',\n      '223e4567-e89b-12d3-a456-426614174001',\n    ],\n  })\n  roleIds?: string[];\n\n  @IsOptional()\n  @IsArray({ message: '权限组ID列表必须是数组' })\n  @IsString({ each: true, message: '每个权限组ID必须是字符串' })\n  @ApiProperty({\n    description: '权限组ID列表',\n    required: false,\n    type: String,\n    isArray: true,\n    example: [\n      '323e4567-e89b-12d3-a456-426614174002',\n      '423e4567-e89b-12d3-a456-426614174003',\n    ],\n  })\n  permissionGroupIds?: string[];\n\n  @IsOptional()\n  @IsBoolean({ message: 'isPublic必须是布尔值' })\n  @ApiProperty({\n    description: '是否公开',\n    required: false,\n    type: Boolean,\n    example: true,\n  })\n  isPublic?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdatePermissionDto.html': {
      url: 'classes/UpdatePermissionDto.html',
      title: 'class - UpdatePermissionDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permission/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IntersectionType(\n  PermissionIdExistDto,\n  PartialType(CreatePermissionDto),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType, PartialType } from '@nestjs/swagger';\nimport { CreatePermissionDto } from './create-permission.dto';\nimport { PermissionIdExistDto } from './permission-id-exist.dto';\n\nexport class UpdatePermissionDto extends IntersectionType(\n  PermissionIdExistDto,\n  PartialType(CreatePermissionDto),\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateRoleDto.html': {
      url: 'classes/UpdateRoleDto.html',
      title: 'class - UpdateRoleDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IntersectionType(\n  RoleIdExistDto,\n  PartialType(CreateRoleDto),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType, PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\nimport { RoleIdExistDto } from './role-id-exist.dto';\n\nexport class UpdateRoleDto extends IntersectionType(\n  RoleIdExistDto,\n  PartialType(CreateRoleDto),\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateUserDto.html': {
      url: 'classes/UpdateUserDto.html',
      title: 'class - UpdateUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IntersectionType(\n  UserIdExistDto,\n  PartialType(CreateUserDto),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType, PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\nimport { UserIdExistDto } from './user-id-exist.dto';\n\nexport class UpdateUserDto extends IntersectionType(\n  UserIdExistDto,\n  PartialType(CreateUserDto),\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/User.html': {
      url: 'classes/User.html',
      title: 'class - User',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Profile as _Profile } from './profile';\nimport { Session as _Session } from './session';\nimport { Role as _Role } from './role';\nimport { Permission as _Permission } from './permission';\nimport { PermissionGroup as _PermissionGroup } from './permission_group';\nimport { ApiPermission as _ApiPermission } from './api_permission';\nimport { ApiPermissionGroup as _ApiPermissionGroup } from './api_permission_group';\nimport { OperationLog as _OperationLog } from './operation_log';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Profile extends _Profile {}\n  export class Session extends _Session {}\n  export class Role extends _Role {}\n  export class Permission extends _Permission {}\n  export class PermissionGroup extends _PermissionGroup {}\n  export class ApiPermission extends _ApiPermission {}\n  export class ApiPermissionGroup extends _ApiPermissionGroup {}\n  export class OperationLog extends _OperationLog {}\n\n  export const extraModels = [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/User-1.html': {
      url: 'classes/User-1.html',
      title: 'class - User-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                operationLog\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    Optional\n                                profile\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                roleId\n                            \n                            \n                                    \n                                session\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        operationLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OperationLog[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => OperationLog})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Role})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        session\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Session[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Session})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserStatus\n\n                    \n                \n                \n                    \n                        Default value : UserStatus.ACTIVE\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: UserStatus, enumName: 'UserStatus'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Profile } from './profile';\nimport { Session } from './session';\nimport { Role } from './role';\nimport { OperationLog } from './operation_log';\nimport { UserStatus } from '@prisma/client';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class User {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  email: string;\n\n  @ApiPropertyOptional({ type: String })\n  name?: string;\n\n  @ApiProperty({ type: String })\n  password: string;\n\n  @ApiProperty({ enum: UserStatus, enumName: 'UserStatus' })\n  status: UserStatus = UserStatus.ACTIVE;\n\n  @ApiPropertyOptional({ type: () => Profile })\n  profile?: Profile;\n\n  @ApiProperty({ isArray: true, type: () => Session })\n  session: Session[];\n\n  @ApiProperty({ type: () => Role })\n  role: Role;\n\n  @ApiProperty({ type: String })\n  roleId: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: Date })\n  deletedAt?: Date;\n\n  @ApiProperty({ isArray: true, type: () => OperationLog })\n  operationLog: OperationLog[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/UserController.html': {
      url: 'controllers/UserController.html',
      title: 'controller - UserController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@ApiOperation({summary: '创建用户'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginationDto: PaginationUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@ApiOperation({summary: '获取所有用户'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationDto\n                                            \n                                                            PaginationUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(dto: UserIdExistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('detail')@ApiOperation({summary: '获取单个用户'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UserIdExistDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(dto: UserIdExistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('remove')@ApiOperation({summary: '删除用户'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UserIdExistDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update')@ApiOperation({summary: '更新用户'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Query } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { PaginationUserDto } from './dto/pagination-user.dto';\nimport { UserIdExistDto } from './dto/user-id-exist.dto';\n\n@ApiTags('用户管理')\n@Controller('user')\n@ApiBearerAuth()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('create')\n  @ApiOperation({ summary: '创建用户' })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get('list')\n  @ApiOperation({ summary: '获取所有用户' })\n  findAll(@Query() paginationDto: PaginationUserDto) {\n    return this.userService.findAll(paginationDto);\n  }\n\n  @Get('detail')\n  @ApiOperation({ summary: '获取单个用户' })\n  findOne(@Query() dto: UserIdExistDto) {\n    return this.userService.findOne(dto.id);\n  }\n\n  @Post('update')\n  @ApiOperation({ summary: '更新用户' })\n  update(@Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(updateUserDto.id, updateUserDto);\n  }\n\n  @Post('remove')\n  @ApiOperation({ summary: '删除用户' })\n  remove(@Body() dto: UserIdExistDto) {\n    return this.userService.remove(dto.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UserIdExistDto.html': {
      url: 'classes/UserIdExistDto.html',
      title: 'class - UserIdExistDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserIdExistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user-id-exist.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@IsUUIDsALLInDataBase('user')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user-id-exist.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsUUIDsALLInDataBase } from '@/commons/decorators/all-in-db.decorator';\nimport { IsUUID } from 'class-validator';\n\nexport class UserIdExistDto {\n  @IsUUID()\n  @IsUUIDsALLInDataBase('user')\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/UserModule.html': {
      url: 'modules/UserModule.html',
      title: 'module - UserModule',
      body: "\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nIamModule\n\nIamModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nIamModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IamModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { IamModule } from '../iam/iam.module';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService],\n  imports: [IamModule],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/UserService.html': {
      url: 'injectables/UserService.html',
      title: 'injectable - UserService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, iamService: IamService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iamService\n                                                  \n                                                        \n                                                                        IamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(dto: PaginationUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            PaginationUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IamService } from '../iam/iam.service';\nimport { PrismaService } from 'nestjs-prisma';\nimport { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { PaginationUserDto } from './dto/pagination-user.dto';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly iamService: IamService,\n  ) {}\n  async create(createUserDto: CreateUserDto) {\n    const isUserExist = await this.prisma.user.findUnique({\n      where: {\n        email: createUserDto.email,\n      },\n    });\n    if (isUserExist) {\n      throw new BadRequestException('User already exists');\n    }\n    const password = await this.iamService.hash(createUserDto.password);\n    const newUser = await this.prisma.user.create({\n      data: {\n        name: createUserDto.name,\n        email: createUserDto.email,\n        password,\n        status: createUserDto.status ?? 'ACTIVE',\n        role: {\n          connect: createUserDto.roleId\n            ? { id: createUserDto.roleId }\n            : { name: 'user' },\n        },\n        profile: {\n          create: {\n            phone: createUserDto.phone,\n            bio: createUserDto.bio,\n          },\n        },\n      },\n    });\n    delete newUser.password;\n    return newUser;\n  }\n\n  async findAll(dto: PaginationUserDto) {\n    const where = dto.buildWhere({\n      props: {\n        id: { type: 'contains' },\n        email: { type: 'contains' },\n        name: { type: 'contains' },\n        status: { type: 'eq' },\n        roleId: { type: 'eq' },\n      },\n    });\n\n    const total = await this.prisma.user.count({ where });\n\n    const users = await this.prisma.user.findMany({\n      ...dto.toSkipAndTake(),\n      include: {\n        role: true,\n        profile: true,\n      },\n      where,\n      omit: {\n        password: true,\n      },\n    });\n\n    return dto.buildResponse(users, total);\n  }\n\n  async findOne(id: string) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n      omit: {\n        password: true,\n      },\n      include: {\n        role: true,\n        profile: true,\n        operationLog: true,\n      },\n    });\n    return user;\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        role: true,\n        profile: true,\n      },\n    });\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n    const updatedUser = await this.prisma.user.update({\n      where: {\n        id,\n      },\n      omit: {\n        password: true,\n      },\n      data: {\n        name: updateUserDto.name,\n        email: updateUserDto.email,\n        password: updateUserDto.password\n          ? await this.iamService.hash(updateUserDto.password)\n          : undefined,\n        status: updateUserDto.status,\n        roleId: updateUserDto.roleId,\n        profile: {\n          update: {\n            data: {\n              phone: updateUserDto.phone,\n              bio: updateUserDto.bio,\n            },\n          },\n        },\n      },\n    });\n    return updatedUser;\n  }\n\n  async remove(id: string) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n    await this.prisma.user.update({\n      where: {\n        id,\n      },\n      data: {\n        deletedAt: new Date(),\n      },\n    });\n    return { message: 'success' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/ValidateInDBOptions.html': {
      url: 'interfaces/ValidateInDBOptions.html',
      title: 'interface - ValidateInDBOptions',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidateInDBOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/slices/DBValidation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  type ArgumentMetadata,\n  BadRequestException,\n  Body,\n  createParamDecorator,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  OnApplicationBootstrap,\n  Param,\n  type PipeTransform,\n  Query,\n  SetMetadata,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { type PrismaClient } from '@prisma/client';\nimport { isEmpty, isNil } from 'lodash';\n\nconst BEFORE_ALL_DB_VALIDATION_KEY = 'beforeAllDBValidation';\n\nconst VALIDATE_IN_DB_KEY = 'validateInDB';\n\nconst VALIDATE_IN_DB_OPTIONS_KEY = 'validateInDBOptions';\n\ntype Constructor = new (...args: any[]) => T;\n\ntype ValidateFunc = (\n  data: T,\n  prisma: PrismaClient,\n) => Promise | boolean;\n\ntype BeforeAllDBValidationFunc = (\n  dto: T,\n  prisma: PrismaClient,\n) => Promise;\n\ninterface ValidateInDBOptions {\n  message: string;\n}\n\n// 验证完的数据格式，不过似乎会丢失类型，尝试使用 ReturnType 代替？\nexport interface ValidateInDBResult {\n  dto: T;\n  dbData: K;\n}\n\nexport function BeforeAllDBValidation(func: BeforeAllDBValidationFunc) {\n  // 将 func 函数绑定到对象的元数据 BEFORE_ALL_DB_VALIDATION_KEY 上\n  return SetMetadata(BEFORE_ALL_DB_VALIDATION_KEY, func);\n}\n\nexport function ValidateInDBByPipe(\n  validateFunc: ValidateFunc,\n  validationOptions: ValidateInDBOptions,\n) {\n  return function (object: object, propertyName: string) {\n    // 将 validateFunc 函数绑定到对象的元数据 VALIDATE_IN_DB_KEY 上\n    Reflect.defineMetadata(\n      VALIDATE_IN_DB_KEY,\n      validateFunc,\n      object.constructor,\n      propertyName,\n    );\n    // 将 validationOptions 绑定到对象的元数据 VALIDATE_IN_DB_OPTIONS_KEY 上\n    Reflect.defineMetadata(\n      VALIDATE_IN_DB_OPTIONS_KEY,\n      validationOptions,\n      object.constructor,\n      propertyName,\n    );\n  };\n}\n\n@Injectable()\nexport class DBValidationPipe implements PipeTransform, OnApplicationBootstrap {\n  constructor(\n    private readonly prisma: PrismaClient,\n    private readonly reflector: Reflector,\n  ) {}\n\n  private readonly logger = new Logger(DBValidationPipe.name);\n\n  onApplicationBootstrap() {\n    this.logger.log('DBValidationPipe injected', 'DBValidationPipe');\n  }\n\n  async transform(value: any, metadata: ArgumentMetadata) {\n    // 获取对象的元数据 BEFORE_ALL_DB_VALIDATION_KEY\n    const beforeAllFunc = this.reflector.get | undefined>(\n      BEFORE_ALL_DB_VALIDATION_KEY,\n      metadata.metatype ?? Object,\n    );\n    // 如果存在 BEFORE_ALL_DB_VALIDATION_KEY 元数据，则执行该函数\n    if (!isNil(beforeAllFunc)) {\n      // 将 value 和 prisma 作为参数传入 BEFORE_ALL_DB_VALIDATION_KEY 函数\n      const data = await beforeAllFunc(value, this.prisma);\n      // 获取对象的所有属性中带有元数据 VALIDATE_IN_DB_KEY 的属性\n      const vP = Object.keys(value).map(async (key) => {\n        const func = this.reflector.get | undefined>(\n          VALIDATE_IN_DB_KEY,\n          (metadata.metatype as Constructor)[key],\n        );\n        // 如果存在 VALIDATE_IN_DB_KEY 元数据，则执行该函数进行验证\n        if (!isNil(func)) {\n          const res = await func(data, this.prisma);\n          return { [key]: res };\n        }\n        // 如果不存在 VALIDATE_IN_DB_KEY 元数据，则返回 true\n        return { [key]: true };\n      });\n      // 等待所有属性的验证结果\n      const v = await Promise.all(vP);\n      // 将验证结果转换为 Map 对象\n      const resMap = new Map(\n        v.map((item) => [Object.keys(item)[0], Object.values(item)[0]]),\n      );\n      // 如果所有属性的验证结果都为 true，则返回 value\n      const isValid = [...resMap.values()].every((item) => item);\n      // 如果有属性的验证结果为 false，则抛出 BadRequestException 异常\n      if (!isValid) {\n        const errorMessages = [...resMap.entries()]\n          .map(([key, value]) => {\n            if (!value) {\n              const options = this.reflector.get(\n                VALIDATE_IN_DB_OPTIONS_KEY,\n                (metadata.metatype as Constructor)[key],\n              );\n              return options?.message ?? `数据库验证失败 ${key}`;\n            }\n            return '';\n          })\n          .filter((item) => !isEmpty(item));\n        throw new BadRequestException(errorMessages);\n      }\n      // 返回 dto 与 数据库查询结果\n      return { dto: value, dbData: data } satisfies ValidateInDBResult;\n    }\n    // 如果不存在 BEFORE_ALL_DB_VALIDATION_KEY 元数据，则直接返回 value，dbData 为 null\n    return { dto: value, dbData: null } satisfies ValidateInDBResult;\n  }\n}\n\nexport const DBValidationBody = createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Body(DBValidationPipe);\n  },\n);\n\nexport const DBValidationParam = createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Param(DBValidationPipe);\n  },\n);\n\nexport const DBValidationQuery = createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Query(DBValidationPipe);\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/ValidateInDBResult.html': {
      url: 'interfaces/ValidateInDBResult.html',
      title: 'interface - ValidateInDBResult',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidateInDBResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/slices/DBValidation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dbData\n                                        \n                                \n                                \n                                        \n                                            dto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dbData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dbData:     K\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     K\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dto:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  type ArgumentMetadata,\n  BadRequestException,\n  Body,\n  createParamDecorator,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  OnApplicationBootstrap,\n  Param,\n  type PipeTransform,\n  Query,\n  SetMetadata,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { type PrismaClient } from '@prisma/client';\nimport { isEmpty, isNil } from 'lodash';\n\nconst BEFORE_ALL_DB_VALIDATION_KEY = 'beforeAllDBValidation';\n\nconst VALIDATE_IN_DB_KEY = 'validateInDB';\n\nconst VALIDATE_IN_DB_OPTIONS_KEY = 'validateInDBOptions';\n\ntype Constructor = new (...args: any[]) => T;\n\ntype ValidateFunc = (\n  data: T,\n  prisma: PrismaClient,\n) => Promise | boolean;\n\ntype BeforeAllDBValidationFunc = (\n  dto: T,\n  prisma: PrismaClient,\n) => Promise;\n\ninterface ValidateInDBOptions {\n  message: string;\n}\n\n// 验证完的数据格式，不过似乎会丢失类型，尝试使用 ReturnType 代替？\nexport interface ValidateInDBResult {\n  dto: T;\n  dbData: K;\n}\n\nexport function BeforeAllDBValidation(func: BeforeAllDBValidationFunc) {\n  // 将 func 函数绑定到对象的元数据 BEFORE_ALL_DB_VALIDATION_KEY 上\n  return SetMetadata(BEFORE_ALL_DB_VALIDATION_KEY, func);\n}\n\nexport function ValidateInDBByPipe(\n  validateFunc: ValidateFunc,\n  validationOptions: ValidateInDBOptions,\n) {\n  return function (object: object, propertyName: string) {\n    // 将 validateFunc 函数绑定到对象的元数据 VALIDATE_IN_DB_KEY 上\n    Reflect.defineMetadata(\n      VALIDATE_IN_DB_KEY,\n      validateFunc,\n      object.constructor,\n      propertyName,\n    );\n    // 将 validationOptions 绑定到对象的元数据 VALIDATE_IN_DB_OPTIONS_KEY 上\n    Reflect.defineMetadata(\n      VALIDATE_IN_DB_OPTIONS_KEY,\n      validationOptions,\n      object.constructor,\n      propertyName,\n    );\n  };\n}\n\n@Injectable()\nexport class DBValidationPipe implements PipeTransform, OnApplicationBootstrap {\n  constructor(\n    private readonly prisma: PrismaClient,\n    private readonly reflector: Reflector,\n  ) {}\n\n  private readonly logger = new Logger(DBValidationPipe.name);\n\n  onApplicationBootstrap() {\n    this.logger.log('DBValidationPipe injected', 'DBValidationPipe');\n  }\n\n  async transform(value: any, metadata: ArgumentMetadata) {\n    // 获取对象的元数据 BEFORE_ALL_DB_VALIDATION_KEY\n    const beforeAllFunc = this.reflector.get | undefined>(\n      BEFORE_ALL_DB_VALIDATION_KEY,\n      metadata.metatype ?? Object,\n    );\n    // 如果存在 BEFORE_ALL_DB_VALIDATION_KEY 元数据，则执行该函数\n    if (!isNil(beforeAllFunc)) {\n      // 将 value 和 prisma 作为参数传入 BEFORE_ALL_DB_VALIDATION_KEY 函数\n      const data = await beforeAllFunc(value, this.prisma);\n      // 获取对象的所有属性中带有元数据 VALIDATE_IN_DB_KEY 的属性\n      const vP = Object.keys(value).map(async (key) => {\n        const func = this.reflector.get | undefined>(\n          VALIDATE_IN_DB_KEY,\n          (metadata.metatype as Constructor)[key],\n        );\n        // 如果存在 VALIDATE_IN_DB_KEY 元数据，则执行该函数进行验证\n        if (!isNil(func)) {\n          const res = await func(data, this.prisma);\n          return { [key]: res };\n        }\n        // 如果不存在 VALIDATE_IN_DB_KEY 元数据，则返回 true\n        return { [key]: true };\n      });\n      // 等待所有属性的验证结果\n      const v = await Promise.all(vP);\n      // 将验证结果转换为 Map 对象\n      const resMap = new Map(\n        v.map((item) => [Object.keys(item)[0], Object.values(item)[0]]),\n      );\n      // 如果所有属性的验证结果都为 true，则返回 value\n      const isValid = [...resMap.values()].every((item) => item);\n      // 如果有属性的验证结果为 false，则抛出 BadRequestException 异常\n      if (!isValid) {\n        const errorMessages = [...resMap.entries()]\n          .map(([key, value]) => {\n            if (!value) {\n              const options = this.reflector.get(\n                VALIDATE_IN_DB_OPTIONS_KEY,\n                (metadata.metatype as Constructor)[key],\n              );\n              return options?.message ?? `数据库验证失败 ${key}`;\n            }\n            return '';\n          })\n          .filter((item) => !isEmpty(item));\n        throw new BadRequestException(errorMessages);\n      }\n      // 返回 dto 与 数据库查询结果\n      return { dto: value, dbData: data } satisfies ValidateInDBResult;\n    }\n    // 如果不存在 BEFORE_ALL_DB_VALIDATION_KEY 元数据，则直接返回 value，dbData 为 null\n    return { dto: value, dbData: null } satisfies ValidateInDBResult;\n  }\n}\n\nexport const DBValidationBody = createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Body(DBValidationPipe);\n  },\n);\n\nexport const DBValidationParam = createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Param(DBValidationPipe);\n  },\n);\n\nexport const DBValidationQuery = createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Query(DBValidationPipe);\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ValidationI18nPipe.html': {
      url: 'injectables/ValidationI18nPipe.html',
      title: 'injectable - ValidationI18nPipe',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationI18nPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/pipes/validation-I18n-pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(i18n: I18nService)\n                    \n                \n                        \n                            \n                                Defined in src/commons/pipes/validation-I18n-pipe.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                        \n                    toValidate(metatype: Function)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/pipes/validation-I18n-pipe.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metatype\n                                            \n                                                            Function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/pipes/validation-I18n-pipe.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  Injectable,\n  PipeTransform,\n  BadRequestException,\n} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\nimport { I18nService } from 'nestjs-i18n';\n\n@Injectable()\nexport class ValidationI18nPipe implements PipeTransform {\n  constructor(private readonly i18n: I18nService) {}\n\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      const messages = await Promise.all(\n        errors.map(async (error) => {\n          const constraints = Object.values(error.constraints);\n          return await Promise.all(\n            constraints.map(async (constraint) => {\n              return this.i18n.translate(`validation.${constraint}`, {\n                args: {\n                  property: error.property,\n                },\n              });\n            }),\n          );\n        }),\n      );\n      throw new BadRequestException(messages.flat());\n    }\n    return value;\n  }\n  private toValidate(metatype: Function): boolean {\n    const types: Function[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'coverage.html': {
      url: 'coverage.html',
      title: 'coverage - coverage',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                prisma/seed.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/api_permission.ts\n            \n            class\n            ApiPermission\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/api_permission_group.ts\n            \n            class\n            ApiPermissionGroup\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            ApiPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            ApiPermissionGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            OperationLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            PermissionGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Session\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            variable\n            extraModels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/operation_log.ts\n            \n            class\n            OperationLog\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/permission.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/permission_group.ts\n            \n            class\n            PermissionGroup\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/profile.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/role.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/session.ts\n            \n            class\n            Session\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFilePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/decorators/all-in-db.decorator.ts\n            \n            function\n            IsUUIDsALLInDataBase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/decorators/all-in-db.decorator.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/decorators/api-res.decorator.ts\n            \n            variable\n            ApiResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/decorators/not-same-name.decorator.ts\n            \n            function\n            IsNotSameNameInDataBase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/decorators/not-same-name.decorator.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/dtos/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/commons/dtos/pagination.dto.ts\n            \n            interface\n            BuildWhereOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/commons/pipes/validation-I18n-pipe.ts\n            \n            injectable\n            ValidationI18nPipe\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            injectable\n            DBValidationPipe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            interface\n            ValidateInDBOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            interface\n            ValidateInDBResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            function\n            BeforeAllDBValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            function\n            ValidateInDBByPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            variable\n            BEFORE_ALL_DB_VALIDATION_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            variable\n            DBValidationBody\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            variable\n            DBValidationParam\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            variable\n            DBValidationQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            variable\n            VALIDATE_IN_DB_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/slices/DBValidation.ts\n            \n            variable\n            VALIDATE_IN_DB_OPTIONS_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/types/list-result.types.ts\n            \n            class\n            ListResult\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/commons/types/success-operation.types.ts\n            \n            class\n            SuccessOperationResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/configs/app-config.ts\n            \n            interface\n            IAppConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/configs/app-config.ts\n            \n            variable\n            APP_CONFIG_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helpers/test-helper.ts\n            \n            class\n            TestHelper\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/api-permission/api-permission.controller.ts\n            \n            controller\n            ApiPermissionController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/api-permission/api-permission.service.ts\n            \n            injectable\n            ApiPermissionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/api-permission/dto/api-permission-id-exist.dto.ts\n            \n            class\n            ApiPermissionIdExistDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/api-permission/dto/pagination-api-permission.dto.ts\n            \n            class\n            PaginationApiPermissionDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/api-permission/dto/update-api-permission.dto.ts\n            \n            class\n            UpdateApiPermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/api-permission/types/pagination-api-permission.type.ts\n            \n            class\n            PaginationApiPermissionResponseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/iam/constants/iam-init.constant.ts\n            \n            variable\n            IAM_INIT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/iam/constants/preset-role.constant.ts\n            \n            variable\n            PRESET_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/iam/decorators/get-token.decorator.ts\n            \n            variable\n            GetToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/iam/decorators/get-ua.decorator.ts\n            \n            variable\n            GetUA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/iam/decorators/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/iam/dtos/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/iam/dtos/sign-up.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/iam/guards/api-permission.guard.ts\n            \n            guard\n            ApiPermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/iam/iam.controller.ts\n            \n            controller\n            IamController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/iam/iam.service.ts\n            \n            injectable\n            IamService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/permission/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/permission/dto/pagination-permission.dto.ts\n            \n            class\n            PaginationPermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permission/dto/pagination-permission.dto.ts\n            \n            variable\n            CreatePermissionDtoFilterType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permission/dto/permission-id-exist.dto.ts\n            \n            class\n            PermissionIdExistDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/permission/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permission/permission.controller.ts\n            \n            controller\n            PermissionController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/permission/permission.service.ts\n            \n            injectable\n            PermissionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/permission/types/pagination-permission.types.ts\n            \n            class\n            PaginationPermissionResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/role/dto/pagination-role.dto.ts\n            \n            class\n            PaginationRoleDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/role/dto/role-id-exist.dto.ts\n            \n            class\n            RoleIdExistDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/role/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/role/types/pagination-role.types.ts\n            \n            class\n            PaginationRoleResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/dto/pagination-user.dto.ts\n            \n            class\n            PaginationUserDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user-id-exist.dto.ts\n            \n            class\n            UserIdExistDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/utils/dv.ts\n            \n            function\n            dv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/init.ts\n            \n            class\n            InitUtil\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/init.ts\n            \n            variable\n            initSubject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/sync-route.ts\n            \n            interface\n            Route\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/sync-route.ts\n            \n            function\n            syncRoute\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'dependencies.html': {
      url: 'dependencies.html',
      title: 'package-dependencies - dependencies',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.0.2\n        \n            @nestjs/cache-manager : ^2.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/devtools-integration : ^0.1.6\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.3.10\n        \n            @nestjs/schedule : ^4.1.0\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/websockets : ^10.3.10\n        \n            @prisma/client : 5.17.0\n        \n            axios : ^1.7.2\n        \n            bcrypt : ^5.1.1\n        \n            cache-manager : ^5.7.3\n        \n            chalk : 4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            cross-env : ^7.0.3\n        \n            lodash : ^4.17.21\n        \n            moment : ^2.30.1\n        \n            nest-winston : ^1.10.0\n        \n            nestjs-i18n : ^10.4.5\n        \n            nestjs-prisma : ^0.23.0\n        \n            prisma-class-generator : ^0.2.9\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            winston : ^3.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/functions.html': {
      url: 'miscellaneous/functions.html',
      title: 'miscellaneous-functions - functions',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BeforeAllDBValidation   (src/.../DBValidation.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            dv   (src/.../dv.ts)\n                        \n                        \n                            IsNotSameNameInDataBase   (src/.../not-same-name.decorator.ts)\n                        \n                        \n                            IsUUIDsALLInDataBase   (src/.../all-in-db.decorator.ts)\n                        \n                        \n                            main   (src/.../main.ts)\n                        \n                        \n                            seed   (prisma/.../seed.ts)\n                        \n                        \n                            syncRoute   (src/.../sync-route.ts)\n                        \n                        \n                            ValidateInDBByPipe   (src/.../DBValidation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commons/slices/DBValidation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BeforeAllDBValidation\n                        \n                    \n                \n            \n            \n                \nBeforeAllDBValidation(func: BeforeAllDBValidationFunc)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                func\n                                            \n                                                            BeforeAllDBValidationFunc\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ValidateInDBByPipe\n                        \n                    \n                \n            \n            \n                \nValidateInDBByPipe(validateFunc: ValidateFunc, validationOptions: ValidateInDBOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validateFunc\n                                            \n                                                            ValidateFunc\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationOptions\n                                            \n                                                            ValidateInDBOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap(app: NestExpressApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        NestExpressApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    src/utils/dv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dv\n                        \n                    \n                \n            \n            \n                \ndv(condition: any, value: T)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                condition\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         T | EmptyValue\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/commons/decorators/not-same-name.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsNotSameNameInDataBase\n                        \n                    \n                \n            \n            \n                \nIsNotSameNameInDataBase(entityName: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/commons/decorators/all-in-db.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsUUIDsALLInDataBase\n                        \n                    \n                \n            \n            \n                \nIsUUIDsALLInDataBase(entityName: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        seed\n                        \n                    \n                \n            \n            \n                \nseed(prisma: PrismaClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/sync-route.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        syncRoute\n                        \n                    \n                \n            \n            \n                \nsyncRoute(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'index.html': {
      url: 'index.html',
      title: 'getting-started - index',
      body: '\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you\'d like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules.html': {
      url: 'modules.html',
      title: 'modules - modules',
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiPermissionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'overview.html': {
      url: 'overview.html',
      title: 'overview - overview',
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiPermissionModule\n\n\n\ncluster_ApiPermissionModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_IamModule\n\n\n\ncluster_IamModule_exports\n\n\n\ncluster_IamModule_providers\n\n\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nApiPermissionService\n\nApiPermissionService\n\n\n\nApiPermissionModule\n\nApiPermissionModule\n\nApiPermissionModule -->\n\nApiPermissionService->ApiPermissionModule\n\n\n\n\n\nIamModule\n\nIamModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nIamModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nIamService \n\nIamService \n\nIamService  -->\n\nIamModule->IamService \n\n\n\n\n\nPermissionModule\n\nPermissionModule\n\nAppModule -->\n\nPermissionModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nIamService\n\nIamService\n\nIamModule -->\n\nIamService->IamModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nPermissionModule -->\n\nPermissionService->PermissionModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    43 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'properties.html': {
      url: 'properties.html',
      title: 'package-properties - properties',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : MIT\n        \n            Author : gylove1994\n    \n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/typealiases.html': {
      url: 'miscellaneous/typealiases.html',
      title: 'miscellaneous-typealiases - typealiases',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BeforeAllDBValidationFunc   (src/.../DBValidation.ts)\n                        \n                        \n                            Constructor   (src/.../DBValidation.ts)\n                        \n                        \n                            EmptyValue   (src/.../dv.ts)\n                        \n                        \n                            ModType   (src/.../pagination.dto.ts)\n                        \n                        \n                            ValidateFunc   (src/.../DBValidation.ts)\n                        \n                        \n                            WhereType   (src/.../pagination.dto.ts)\n                        \n                        \n                            WhereTypeOptions   (src/.../pagination.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commons/slices/DBValidation.ts\n    \n    \n        \n            \n                \n                    \n                    BeforeAllDBValidationFunc\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Constructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValidateFunc\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/utils/dv.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/commons/dtos/pagination.dto.ts\n    \n    \n        \n            \n                \n                    \n                    ModType\n                \n            \n            \n                \n                        "and" | "or"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WhereType\n                \n            \n            \n                \n                        "in" | "contains" | "eq" | "lt" | "lte" | "gt" | "gte" | "sin"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WhereTypeOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/variables.html': {
      url: 'miscellaneous/variables.html',
      title: 'miscellaneous-variables - variables',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiResponse   (src/.../api-res.decorator.ts)\n                        \n                        \n                            APP_CONFIG_TOKEN   (src/.../app-config.ts)\n                        \n                        \n                            BEFORE_ALL_DB_VALIDATION_KEY   (src/.../DBValidation.ts)\n                        \n                        \n                            CreatePermissionDtoFilterType   (src/.../pagination-permission.dto.ts)\n                        \n                        \n                            DBValidationBody   (src/.../DBValidation.ts)\n                        \n                        \n                            DBValidationParam   (src/.../DBValidation.ts)\n                        \n                        \n                            DBValidationQuery   (src/.../DBValidation.ts)\n                        \n                        \n                            envFilePath   (src/.../app.module.ts)\n                        \n                        \n                            extraModels   (src/.../index.ts)\n                        \n                        \n                            GetToken   (src/.../get-token.decorator.ts)\n                        \n                        \n                            GetUA   (src/.../get-ua.decorator.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            IAM_INIT_KEY   (src/.../iam-init.constant.ts)\n                        \n                        \n                            initSubject   (src/.../init.ts)\n                        \n                        \n                            PRESET_ROLE   (src/.../preset-role.constant.ts)\n                        \n                        \n                            prisma   (src/.../all-in-db.decorator.ts)\n                        \n                        \n                            prisma   (src/.../not-same-name.decorator.ts)\n                        \n                        \n                            VALIDATE_IN_DB_KEY   (src/.../DBValidation.ts)\n                        \n                        \n                            VALIDATE_IN_DB_OPTIONS_KEY   (src/.../DBValidation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commons/decorators/api-res.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(_model: TModel) => {\n  return applyDecorators(ApiOkResponse({}));\n}\n                    \n                \n\n\n        \n    \n\n    src/configs/app-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_CONFIG_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app'\n                    \n                \n\n\n        \n    \n\n    src/commons/slices/DBValidation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BEFORE_ALL_DB_VALIDATION_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'beforeAllDBValidation'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DBValidationBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Body(DBValidationPipe);\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DBValidationParam\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Param(DBValidationPipe);\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DBValidationQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, _ctx: ExecutionContext) => {\n    return Query(DBValidationPipe);\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VALIDATE_IN_DB_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'validateInDB'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VALIDATE_IN_DB_OPTIONS_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'validateInDBOptions'\n                    \n                \n\n\n        \n    \n\n    src/modules/permission/dto/pagination-permission.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreatePermissionDtoFilterType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PartialType(\n  OmitType(CreatePermissionDto, ['description'] as const),\n)\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFilePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n\n        \n    \n\n    src/_gen/prisma-class/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extraModels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    User,\n    Profile,\n    Session,\n    Role,\n    Permission,\n    PermissionGroup,\n    ApiPermission,\n    ApiPermissionGroup,\n    OperationLog,\n  ]\n                    \n                \n\n\n        \n    \n\n    src/modules/iam/decorators/get-token.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const req = ctx.switchToHttp().getRequest();\n    return req.headers['authorization'];\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/iam/decorators/get-ua.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const req = ctx.switchToHttp().getRequest();\n    return req.headers['user-agent'];\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/iam/decorators/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const req = ctx.switchToHttp().getRequest();\n    return req.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/iam/constants/iam-init.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IAM_INIT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'IAM_INIT'\n                    \n                \n\n\n        \n    \n\n    src/utils/init.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n\n\n        \n    \n\n    src/modules/iam/constants/preset-role.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PRESET_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'admin',\n    description: '系统内置角色，不可删除',\n    deletable: false,\n    status: 'ACTIVE' as Role['status'],\n  },\n  {\n    name: 'user',\n    description: '系统内置角色，不可删除',\n    deletable: false,\n    status: 'ACTIVE' as Role['status'],\n  },\n  {\n    name: 'guest',\n    description: '系统内置角色，不可删除',\n    deletable: false,\n    status: 'ACTIVE' as Role['status'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/commons/decorators/all-in-db.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n    src/commons/decorators/not-same-name.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
  },
};
